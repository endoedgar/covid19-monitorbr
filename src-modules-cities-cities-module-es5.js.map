{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tooltip.js","webpack:///node_modules/esri-loader/dist/umd/esri-loader.js","webpack:///src/modules/cities/body/body.component.ts","webpack:///src/modules/cities/body/body.component.html","webpack:///src/modules/cities/cities.module.ts","webpack:///src/modules/cities/city-list/city-list.component.ts","webpack:///src/modules/cities/city-list/city-list.component.html","webpack:///src/modules/cities/esri-map/esri-map.component.ts","webpack:///src/modules/cities/esri-map/esri-map.component.html","webpack:///src/store/selectors/city.selectors.ts"],"names":["_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","CanStick","mixinHasStickyInput","base","args","_sticky","_hasStickyChanged","hasStickyChanged","v","prevValue","CellDef","CdkCellDef","template","ɵfac","CdkCellDef_Factory","t","ɵdir","type","selectors","ctorParameters","selector","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","arguments","_stickyEnd","_name","cssClassFriendlyName","replace","CdkColumnDef_Factory","ɵCdkColumnDef_BaseFactory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","_t","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","provide","useExisting","propDecorators","providers","BaseCdkCell","columnDef","elementRef","columnClassName","nativeElement","classList","add","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","host","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","changes","_columnsDiffer","columns","currentValue","find","create","diff","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutletRowContext","CdkCellOutletMultiRowContext","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","decls","vars","consts","CdkHeaderRow_Template","directives","encapsulation","changeDetection","Default","None","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_isBrowser","rows","stickyDirections","row","nodeType","ELEMENT_NODE","_removeStickyStyle","i","children","length","stickyStartStates","stickyEndStates","hasStickyColumns","some","state","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","_addStickyStyle","rowsToStick","stickyStates","position","reverse","stickyHeight","rowIndex","j","getBoundingClientRect","height","tableElement","tfoot","querySelector","element","dir","style","zIndex","_getCalculatedZIndex","hasDirection","remove","dirValue","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","push","width","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","RowOutlet","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowContext","RowViewRef","RenderRow","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","viewChange","start","end","Number","MAX_VALUE","setAttribute","nodeName","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","dataSource","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_rowOutlet","clear","_headerRowOutlet","_footerRowOutlet","next","complete","disconnect","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","currentIndex","previousIndex","_insertRow","item","view","get","move","_updateRowIndexContext","forEachIdentityChange","rowView","context","updateStickyColumnStyles","headerRowDef","footerRowDef","rowDef","headerRows","_getRenderedRows","thead","display","map","def","_stickyStyler","clearStickyPositioning","stickRows","forEach","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","Array","from","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeQueryListAndSet","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","reduce","_forceRenderDataRows","unsubscribe","_dataSource","dataStream","connect","isArray","undefined","pipe","subscribe","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","renderIndex","outlet","index","createEmbeddedView","_getCellTemplates","cellTemplate","markForCheck","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","section","createElement","appendChild","stickyCheckReducer","d","value","isBrowser","change","_trackByFn","fn","console","warn","_switchDataSource","CdkTable_Factory","CdkTable_ContentQueries","viewQuery","CdkTable_Query","exportAs","ngContentSelectors","CdkTable_Template","String","decorators","descendants","queryList","toArray","concat","TextColumnOptions","TEXT_COLUMN_OPTIONS","CdkTextColumn","_table","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","slice","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","EXPORTED_DECLARATIONS","CdkTableModule","ɵmod","ɵinj","factory","CdkTableModule_Factory","ngJitMode","declarations","exports","listenerOptions","passive","AutofillMonitor","_ngZone","_monitoredElements","elementOrRef","info","subject","asObservable","result","cssClass","listener","event","animationName","contains","run","target","isAutofilled","runOutsideAngular","addEventListener","unlisten","removeEventListener","_info","stopMonitoring","AutofillMonitor_Factory","ɵprov","token","providedIn","CdkAutofill","_autofillMonitor","cdkAutofill","monitor","emit","CdkAutofill_Factory","outputs","CdkTextareaAutosize","document","_destroyed","_enabled","_previousMinRows","_textareaElement","minHeight","minRows","_cachedLineHeight","maxHeight","maxRows","_initialHeight","resizeToFitContent","window","_getWindow","textareaClone","cloneNode","visibility","border","padding","overflow","parentNode","clientHeight","removeChild","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","_minRows","_previousValue","placeholderText","placeholder","scrollHeight","requestAnimationFrame","_scrollToCaretPosition","setTimeout","doc","_getDocument","defaultView","selectionStart","selectionEnd","isStopped","activeElement","setSelectionRange","_maxRows","reset","CdkTextareaAutosize_Factory","hostBindings","CdkTextareaAutosize_HostBindings","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","enabled","TextFieldModule","TextFieldModule_Factory","imports","ControlValueAccessor","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","CheckboxControlValueAccessor","multi","_renderer","onChange","_","onTouched","setProperty","isDisabled","CheckboxControlValueAccessor_Factory","CheckboxControlValueAccessor_HostBindings","CheckboxControlValueAccessor_change_HostBindingHandler","$event","checked","CheckboxControlValueAccessor_blur_HostBindingHandler","DEFAULT_VALUE_ACCESSOR","DefaultValueAccessor","_isAndroid","userAgent","getUserAgent","test","toLowerCase","COMPOSITION_BUFFER_MODE","_compositionMode","_composing","normalizedValue","DefaultValueAccessor_Factory","DefaultValueAccessor_HostBindings","DefaultValueAccessor_input_HostBindingHandler","_handleInput","DefaultValueAccessor_blur_HostBindingHandler","DefaultValueAccessor_compositionstart_HostBindingHandler","_compositionStart","DefaultValueAccessor_compositionend_HostBindingHandler","_compositionEnd","Boolean","AbstractControlDirective","control","errorCode","path","hasError","getError","valid","invalid","pending","disabled","errors","pristine","dirty","touched","status","untouched","statusChanges","valueChanges","AbstractControlDirective_Factory","ControlContainer","ControlContainer_Factory","ɵControlContainer_BaseFactory","unimplemented","NgControl","_parent","valueAccessor","_rawValidators","_rawAsyncValidators","AbstractControlStatus","cd","_cd","ngControlStatusHost","NgControlStatus","NgControlStatus_Factory","hostVars","NgControlStatus_HostBindings","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","NgControlStatusGroup","NgControlStatusGroup_Factory","NgControlStatusGroup_HostBindings","isEmptyInputValue","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","min","parseFloat","isNaN","max","minLength","maxLength","pattern","nullValidator","regex","regexStr","charAt","RegExp","toString","validators","presentValidators","isPresent","_mergeErrors","_executeValidators","observables","_executeAsyncValidators","toObservable","o","r","obs","arrayOfErrors","res","Object","assign","keys","normalizeValidator","validator","validate","c","normalizeAsyncValidator","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","NumberValueAccessor_Factory","NumberValueAccessor_HostBindings","NumberValueAccessor_change_HostBindingHandler","NumberValueAccessor_input_HostBindingHandler","NumberValueAccessor_blur_HostBindingHandler","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","RadioControlRegistry","_accessors","accessor","splice","_isSameGroup","fireUncheck","controlPair","_control","RadioControlRegistry_Factory","_registry","_injector","_checkName","_state","_fn","select","writeValue","formControlName","_throwNameError","RadioControlValueAccessor_Factory","RadioControlValueAccessor_HostBindings","RadioControlValueAccessor_change_HostBindingHandler","RadioControlValueAccessor_blur_HostBindingHandler","RANGE_VALUE_ACCESSOR","RangeValueAccessor","RangeValueAccessor_Factory","RangeValueAccessor_HostBindings","RangeValueAccessor_change_HostBindingHandler","RangeValueAccessor_input_HostBindingHandler","RangeValueAccessor_blur_HostBindingHandler","FormErrorExamples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","ReactiveErrors","directiveName","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_buildValueString","_extractId","valueString","split","_optionMap","_idCounter","_compareWith","_getOptionId","_getOptionValue","SelectControlValueAccessor_Factory","SelectControlValueAccessor_HostBindings","SelectControlValueAccessor_change_HostBindingHandler","SelectControlValueAccessor_blur_HostBindingHandler","compareWith","NgSelectOption","_element","_select","_registerOption","_setElementValue","NgSelectOption_Factory","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","_buildValueString$1","_extractId$1","HTMLOption","HTMLCollection","optionSelectedStateSetter","ids","opt","_setSelected","indexOf","selected","hasOwnProperty","options","selectedOptions","val","_value","SelectMultipleControlValueAccessor_Factory","SelectMultipleControlValueAccessor_HostBindings","SelectMultipleControlValueAccessor_change_HostBindingHandler","SelectMultipleControlValueAccessor_blur_HostBindingHandler","ɵNgSelectMultipleOption","ɵNgSelectMultipleOption_Factory","controlPath","parent","setUpControl","_throwError","compose","asyncValidator","composeAsync","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","setDisabledState","registerOnDisabledChange","registerOnValidatorChange","updateValueAndValidity","cleanUpControl","registerOnChange","_noControlError","registerOnTouched","_clearChangeFns","newValue","_pendingValue","_pendingChange","_pendingDirty","updateOn","updateControl","_pendingTouched","markAsTouched","markAsDirty","setValue","emitModelToViewChange","viewToModelUpdate","emitModelEvent","setUpFormContainer","message","messageEnd","join","composeValidators","composeAsyncValidators","isPropertyUpdated","viewModel","isFirstChange","BUILTIN_ACCESSORS","isBuiltInAccessor","a","constructor","syncPendingControls","form","_syncPendingControls","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","removeDir","list","el","_ngModelWarning","instance","warningConfig","_ngModelWarningSentOnce","_ngModelWarningSent","ngModelWarning","VALID","INVALID","PENDING","DISABLED","_find","delimiter","controlToFind","FormGroup","controls","FormArray","at","coerceToValidator","validatorOrOpts","isOptionsObj","coerceToAsyncValidator","origAsyncValidator","asyncValidators","AbstractControlOptions","AbstractControl","_onCollectionChange","_onDisabledChange","newValidator","opts","onlySelf","_forEachChild","markAllAsTouched","markAsUntouched","_updateTouched","markAsPristine","_updatePristine","emitEvent","markAsPending","skipPristineCheck","_parentMarkedDirty","disable","_updateValue","_updateAncestors","changeFn","enable","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","ctrl","_updateTreeValidity","_allControlsDisabled","_asyncValidationSubscription","setErrors","_updateControlsErrors","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","formState","_updateOn","parentDirty","x","FormControl","_onChange","_applyFormState","_setUpdateStrategy","_initObservables","emitViewToModelChange","condition","cb","_isBoxedValue","_setUpControls","setParent","_registerOnCollectionChange","registerControl","controlName","_checkAllValuesPresent","_throwIfControlMissing","patchValue","_reduceChildren","getRawValue","subtreeUpdated","updated","child","k","_reduceValue","initValue","_registerControl","formDirectiveProvider","NgForm","ɵ0","Promise","resolve","resolvedPromise","submitted","_directives","ngSubmit","then","container","_findContainer","removeControl","group","resetForm","pop","NgForm_Factory","NgForm_HostBindings","NgForm_submit_HostBindingHandler","onSubmit","NgForm_reset_HostBindingHandler","onReset","AbstractFormGroupDirective","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","AbstractFormGroupDirective_Factory","ɵAbstractFormGroupDirective_BaseFactory","TemplateDrivenErrors","modelGroupProvider","NgModelGroup","modelGroupParentException","NgModelGroup_Factory","formControlBinding","NgModel","ɵ0$1","resolvedPromise$1","_registered","update","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","addControl","standalone","formGroupNameException","modelParentException","missingNameException","disabledValue","NgModel_Factory","ɵNgNoValidate","ɵNgNoValidate_Factory","NG_MODEL_WITH_FORM_CONTROL_WARNING","formControlBinding$1","FormControlDirective","_ngModelWarningConfig","_isControlChanged","disabledAttrWarning","FormControlDirective_Factory","formDirectiveProvider$1","FormGroupDirective","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","newCtrl","_oldForm","sync","async","missingFormException","FormGroupDirective_Factory","FormGroupDirective_HostBindings","FormGroupDirective_submit_HostBindingHandler","FormGroupDirective_reset_HostBindingHandler","formGroupNameProvider","FormGroupName","_hasInvalidParent","groupParentException","FormGroupName_Factory","formArrayNameProvider","FormArrayName","addFormArray","removeFormArray","arrayParentException","getFormArray","FormArrayName_Factory","controlNameBinding","FormControlName","_added","updateModel","ngModelGroupException","controlParentException","FormControlName_Factory","Validator","AsyncValidator","REQUIRED_VALIDATOR","RequiredValidator","CHECKBOX_REQUIRED_VALIDATOR","CheckboxRequiredValidator","required","_required","RequiredValidator_Factory","RequiredValidator_HostBindings","requiredTrue","CheckboxRequiredValidator_Factory","ɵCheckboxRequiredValidator_BaseFactory","CheckboxRequiredValidator_HostBindings","EMAIL_VALIDATOR","EmailValidator","email","EmailValidator_Factory","ValidatorFn","AsyncValidatorFn","MIN_LENGTH_VALIDATOR","MinLengthValidator","_createValidator","minlength","_validator","parseInt","MinLengthValidator_Factory","MinLengthValidator_HostBindings","MAX_LENGTH_VALIDATOR","MaxLengthValidator","maxlength","MaxLengthValidator_Factory","MaxLengthValidator_HostBindings","PATTERN_VALIDATOR","PatternValidator","PatternValidator_Factory","PatternValidator_HostBindings","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","ɵInternalFormsSharedModule","ɵInternalFormsSharedModule_Factory","isAbstractControlOptions","FormBuilder","controlsConfig","_reduceControls","_createControl","controlConfig","FormBuilder_Factory","VERSION","FormsModule","FormsModule_Factory","ReactiveFormsModule","ngModule","useValue","warnOnNgModelWithFormControl","ReactiveFormsModule_Factory","_c2","_c3","_c4","_c5","MatCardContent","MatCardContent_Factory","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","MatCardActions_HostBindings","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","_animationMode","MatCard_Factory","MatCard_HostBindings","MatCard_Template","styles","OnPush","MatCardHeader","MatCardHeader_Factory","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","MatDialogContainer_ng_template_0_Template","DialogPosition","MatDialogConfig","panelClass","hasBackdrop","backdropClass","disableClose","maxWidth","ariaDescribedBy","ariaLabelledBy","ariaLabel","autoFocus","restoreFocus","closeOnNavigation","matDialogAnimations","dialogContainer","opacity","transform","throwMatDialogContentAlreadyAttachedError","MatDialogContainer","_focusTrapFactory","_config","_elementFocusedBeforeDialogWasOpened","_animationStateChanged","attachDomPortal","portal","_portalOutlet","hasAttached","_savePreviouslyFocusedElement","_ariaLabelledBy","attachComponentPortal","attachTemplatePortal","_focusTrap","focusInitialElementWhenReady","focus","toFocus","body","destroy","toState","_trapFocus","_restoreFocus","MatDialogContainer_Factory","MatDialogContainer_Query","MatDialogContainer_HostBindings","MatDialogContainer_animation_dialogContainer_start_HostBindingHandler","_onAnimationStart","MatDialogContainer_animation_dialogContainer_done_HostBindingHandler","_onAnimationDone","_id","MatDialogContainer_Template","animation","animations","uniqueId","MatDialogState","OPEN","CLOSING","CLOSED","MatDialogRef","_overlayRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","phaseName","clearTimeout","_closeFallbackTimeout","dispose","detachments","_result","componentInstance","keydownEvents","keyCode","preventDefault","close","dialogResult","detachBackdrop","totalTime","_startExitAnimation","backdropClick","strategy","_getPositionStrategy","centerHorizontally","centerVertically","updatePosition","classes","addPanelClass","removePanelClass","getConfig","positionStrategy","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","block","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","deps","useFactory","MatDialog","_overlay","_location","_defaultOptions","scrollStrategy","_parentDialog","_overlayContainer","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","afterAllClosed","openDialogs","_afterAllClosed","_scrollStrategy","componentOrTemplateRef","config","_applyConfigDefaults","getDialogById","overlayRef","_createOverlay","_attachDialogContainer","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","afterClosed","_removeOpenDialog","afterOpened","_closeDialogs","dialog","overlayConfig","_getOverlayConfig","dialogConfig","global","minWidth","disposeOnNavigation","userInjector","viewContainerRef","injector","containerPortal","componentFactoryResolver","containerRef","attach","_createInjector","contentRef","updateSize","previousValue","removeAttribute","overlayContainer","getContainerElement","parentElement","siblings","sibling","hasAttribute","getAttribute","dialogs","MatDialog_Factory","defaultOptions","dialogElementUid","MatDialogClose","_dialog","getClosestDialog","proxiedChange","MatDialogClose_Factory","MatDialogClose_HostBindings","MatDialogClose_click_HostBindingHandler","_matDialogClose","MatDialogTitle","_dialogRef","MatDialogTitle_Factory","MatDialogTitle_HostBindings","MatDialogContent","MatDialogContent_Factory","MatDialogActions","MatDialogActions_Factory","MatDialogModule","MatDialogModule_Factory","entryComponents","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r13","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r17","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r16","updateOutlineGap","ctx_r7","empty","_shouldAlwaysFloat","color","appearance","_labelId","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r9","MatFormField_div_13_Template","ctx_r10","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r19","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r11","nextUniqueId","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MatFormFieldDefaultOptions","MAT_FORM_FIELD_DEFAULT_OPTIONS","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","ngControl","onStable","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","detectChanges","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","errorState","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","_getDisplayedMessages","error","setDescribedByIds","labelEl","textContent","trim","_isAttachedToDOM","startWidth","gapWidth","startEls","querySelectorAll","gapEls","containerRect","containerStart","_getStartEnd","labelStart","labelWidth","offsetWidth","rect","getRootNode","rootNode","documentElement","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","MatFormField_ContentQueries","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","MatFormFieldModule","MatFormFieldModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","_MatInputMixinBase","MatInput","inputValueAccessor","ngZone","_uid","_isServer","_isNativeSelect","_disabled","_type","_readonly","_neverEmptyInputTypes","_inputValueAccessor","_previousNativeValue","IOS","multiple","updateErrorState","_dirtyCheckNativeValue","isFocused","readonly","validity","badInput","_ariaDescribedby","_validateType","_isTextarea","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","label","MatInput_Factory","MatInput_HostBindings","MatInput_blur_HostBindingHandler","_focusChanged","MatInput_focus_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","errorStateMatcher","MatInputModule","MatInputModule_Factory","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","pageSizeOption_r37","MatPaginator_div_2_mat_form_field_3_Template","_r39","MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener","ctx_r38","_changePageSize","ctx_r34","pageSize","_intl","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r35","MatPaginator_div_2_Template","ctx_r31","MatPaginator_button_6_Template","_r41","MatPaginator_button_6_Template_button_click_0_listener","ctx_r40","firstPage","ctx_r32","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r43","MatPaginator_button_13_Template_button_click_0_listener","ctx_r42","lastPage","ctx_r33","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","nextPageLabel","previousPageLabel","getRangeLabel","page","Math","startIndex","endIndex","MatPaginatorIntl_Factory","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","DEFAULT_PAGE_SIZE","PageEvent","MatPaginatorDefaultOptions","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorBase","_MatPaginatorBase","MatPaginator","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_initialized","_updateDisplayedPageSizeOptions","_markInitialized","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","sort","b","p","MatPaginator_Factory","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","previousPage","MatPaginator_Template_button_click_10_listener","nextPage","MatPaginatorModule","MatPaginatorModule_Factory","MatProgressSpinner__svg_circle_1_Template","diameter","_strokeDashOffset","_strokeCircumference","_circleStrokeWidth","_circleRadius","MatProgressSpinner__svg_circle_2_Template","MatSpinner__svg_circle_1_Template","ctx_r2","MatSpinner__svg_circle_2_Template","ctx_r3","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinnerBase","_MatProgressSpinnerMixinBase","MatProgressSpinnerDefaultOptions","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","INDETERMINATE_ANIMATION_TEMPLATE","MatProgressSpinner","platform","animationMode","_diameter","_fallbackAnimation","mode","trackedDiameters","_diameters","head","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","animationClass","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","size","_strokeWidth","viewBox","PI","MatProgressSpinner_Factory","MatProgressSpinner_HostBindings","MatProgressSpinner_Template","_viewBox","MatSpinner","MatSpinner_Factory","MatSpinner_HostBindings","MatSpinner_Template","MatProgressSpinnerModule","MatProgressSpinnerModule_Factory","MatSelect_span_4_Template","ctx_r22","MatSelect_span_5_span_1_Template","ctx_r25","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r23","customTrigger","MatSelect_ng_template_8_Template","_r29","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","ctx_r28","_panelDoneAnimatingStream","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r30","_handleKeydown","ctx_r24","_getPanelTheme","_transformOrigin","_triggerFontSize","matSelectAnimations","transformPanelWrap","optional","transformPanel","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","reposition","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","source","MatSelectBase","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_viewportRuler","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","_panelOpen","_scrollTop","_multiple","o1","o2","_destroy","_onTouched","_optionIds","_offsetY","_positions","originX","originY","overlayX","overlayY","_disableOptionCentering","_focused","optionSelectionChanges","option","onSelectionChange","openedChange","_openedStream","_closedStream","selectionChange","valueChange","_scrollStrategyFactory","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","panelOpen","overlayDir","offsetX","_triggerRect","trigger","_initKeyManager","changed","added","removed","deselect","_resetOptions","_initializeSelection","_keyManager","withTypeAhead","_typeaheadDebounceInterval","open","getComputedStyle","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","overlayElement","_isRtl","_setSelectionByValue","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","altKey","previouslySelectedOption","setFirstItemActive","setLastItemActive","onKeydown","selectedOption","announce","viewValue","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","previouslyFocusedIndex","activeItemIndex","shiftKey","positionChange","_calculateOverlayOffsetX","panel","scrollTop","_selectValue","_sortValues","correspondingOption","setActiveItem","withVerticalOrientation","withAllowedModifierKeys","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","optionGroups","_getItemHeight","current","itemHeight","items","_getItemCount","panelHeight","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","ariaLabelledby","_getAriaLabel","overlayRect","viewportSize","getViewportSize","paddingWidth","leftOverflow","rightOverflow","round","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","_placeholder","isEmpty","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","_getAriaLabelledby","_getAriaActiveDescendant","disableRipple","MatSelect_Template","MatSelect_Template_div_click_0_listener","toggle","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r20","MatSelectModule","MatSelectModule_Factory","MatSortHeader_div_3_Template","_r46","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","ctx_r45","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","ctx_r47","ctx_r44","_getArrowViewState","_getArrowDirectionState","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MatSortable","Sort","MatSortBase","_MatSortMixinBase","MatSort","sortables","_direction","sortChange","sortable","active","getNextSortDirection","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","_disableClear","MatSort_Factory","ɵMatSort_BaseFactory","sortOrder","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","MatSortHeaderIntl","sortButtonLabel","MatSortHeaderIntl_Factory","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","MatSortHeaderBase","_MatSortHeaderMixinBase","ArrowViewStateTransition","MatSortHeaderColumnDef","MatSortHeader","changeDetectorRef","_sort","_columnDef","_focusMonitor","_showIndicatorHint","_arrowDirection","_rerenderSubscription","_isSorted","_updateArrowDirection","_viewState","_setAnimationTransitionState","fromState","origin","_setIndicatorHintVisible","register","deregister","visible","_isDisabled","viewState","MatSortHeader_Factory","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","_handleClick","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","_getAriaSortAttribute","attrs","MatSortHeader_Template","_renderArrow","MatSortModule","MatSortModule_Factory","MatTextColumn_th_1_Template","ctx_r48","MatTextColumn_td_2_Template","data_r50","ctx_r49","MatTable","MatTable_Factory","ɵMatTable_BaseFactory","MatTable_Template","MatCellDef","MatCellDef_Factory","ɵMatCellDef_BaseFactory","MatHeaderCellDef","MatHeaderCellDef_Factory","ɵMatHeaderCellDef_BaseFactory","MatFooterCellDef","MatFooterCellDef_Factory","ɵMatFooterCellDef_BaseFactory","MatColumnDef","MatColumnDef_Factory","ɵMatColumnDef_BaseFactory","MatHeaderCell","MatHeaderCell_Factory","MatFooterCell","MatFooterCell_Factory","MatCell","MatCell_Factory","MatHeaderRowDef","MatHeaderRowDef_Factory","ɵMatHeaderRowDef_BaseFactory","MatFooterRowDef","MatFooterRowDef_Factory","ɵMatFooterRowDef_BaseFactory","MatRowDef","MatRowDef_Factory","ɵMatRowDef_BaseFactory","MatHeaderRow","MatHeaderRow_Factory","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Template","MatFooterRow","MatFooterRow_Factory","ɵMatFooterRow_BaseFactory","MatFooterRow_Template","MatRow","MatRow_Factory","ɵMatRow_BaseFactory","MatRow_Template","MatTextColumn","MatTextColumn_Factory","ɵMatTextColumn_BaseFactory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","EMPTY","sortingDataAccessor","sortHeaderId","numberValue","sortData","valueA","valueB","comparatorResult","filterPredicate","dataStr","currentTerm","key","transformedFilter","_updateChangeSubscription","initialized","pageChange","_paginator","filteredData","_filterData","orderedData","_orderData","paginatedData","_pageData","obj","paginator","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","matTooltipAnimations","tooltipState","offset","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","passiveListenerOptions","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MatTooltipDefaultOptions","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MatTooltip","_scrollDispatcher","_viewContainerRef","_ariaDescriber","_hammerLoader","_position","touchGestures","_message","_passiveListeners","_isTooltipVisible","stopPropagation","hide","show","_setupPointerEvents","_touchstartTimeout","_tooltipInstance","removeDescription","delay","_showTimeoutId","_hideTimeoutId","_detach","_portal","TooltipComponent","afterHidden","_setTooltipClass","_tooltipClass","_updateTooltipMessage","isVisible","scrollableAncestors","getAncestorScrollContainers","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","scrollableViewProperties","isOverlayClipped","_updatePosition","detach","_getOrigin","_getOverlayPosition","withPositions","main","fallback","isLtr","originPosition","_invertPosition","y","overlayPosition","_markForCheck","onMicrotaskEmpty","tooltipClass","ANDROID","_disableNativeGesturesIfNecessary","touchendListener","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","describe","MatTooltip_Factory","_breakpointObserver","_visibility","_closeOnInteraction","_onHide","_isHandset","observe","Handset","TooltipComponent_Factory","TooltipComponent_HostBindings","TooltipComponent_click_HostBindingHandler","_handleBodyInteraction","TooltipComponent_Template","TooltipComponent_Template_div_animation_state_start_0_listener","_animationStart","TooltipComponent_Template_div_animation_state_done_0_listener","_animationDone","tmp_0_0","currVal_0","matches","pipes","MatTooltipModule","MatTooltipModule_Factory","DEFAULT_VERSION","NEXT","parseVersion","version","match","major","minor","getCdnUrl","getCdnCssUrl","baseUrl","parsedVersion","createStylesheetLink","href","link","rel","insertLink","before","beforeNode","insertBefore","getCss","url","getCssUrl","urlOrVersion","loadCss","utils","createScript","script","src","handleScriptLoad","callback","errback","onScriptError","handleScriptError","onScriptLoad","e","setDefaultOptions","getScript","isLoaded","globalRequire","on","loadScript","prototype","call","reject","css","useVersion","insertCssBefore","dojoConfig","requireModules","modules","errorHandler","loadModules","loadScriptOptions","esriLoader","defineProperty","BodyReduxComponent","mapCenter","basemapType","mapZoomLevel","log","mapLoadedEvent","templateUrl","styleUrls","CitiesModule","forFeature","city","forChild","component","CityListComponent","store","displayedColumns","loading$","facility$","mapMode$","dispatch","subscriptions$","cities","s$","SELECT_CITY","filterValue","applyFilter","EsriMapComponent","city$","getState","MapView","Graphic","GraphicsLayer","Color","Popup","PopupTemplate","GeoJSONLayer","Polygon","Legend","BasemapGallery","Point","Expand","isMobile","mapView","toAdd","expandLegend","legend","toRemove","ui","setTitleMobile","setLegendMobile","self","initModules","title","content","feature","div","innerHTML","fieldInfos","fieldName","Glayer","graphics","mapViewEl","center","zoom","basemap","constraints","snapToZoom","legendEl","isResponsiveSize","widthBreakpoint","updateView","watch","breakpoint","whenLayerView","layerView","municipiosSP","popup","autoOpenEnabled","removeAll","cityFeatures","graphs","polygon","rings","geometria","simpleFillPolugon","outline","graphic","attributes","geometry","symbol","popupTemplate","codigo_ibge","addMany","hitTest","response","results","hightlightSelect","selectedCityFeature","scale","highlight","goTo","location","extent","mapMode","getSelectors","_selectAllFacilities","selectAll","selectCityState$","selectAllCities$","getCurrentCityId$","selectedCityId","getCurrentCity$","entities","selectCitiesLoading$","loading","selectCitiesMapMode$"],"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","file":"src-modules-cities-cities-module-es5.js","sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, TemplateRef, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, Optional, Inject, ViewChild, ContentChildren, InjectionToken, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/can-stick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @record\n */\nfunction CanStick() { }\nif (false) {\n    /**\n     * Whether sticky positioning should be applied.\n     * @type {?}\n     */\n    CanStick.prototype.sticky;\n    /**\n     * Whether the sticky input has changed since it was last checked.\n     * @type {?}\n     */\n    CanStick.prototype._hasStickyChanged;\n    /**\n     * Whether the sticky value has changed since this was last called.\n     * @return {?}\n     */\n    CanStick.prototype.hasStickyChanged = function () { };\n    /**\n     * Resets the dirty check for cases where the sticky state has been used without checking.\n     * @return {?}\n     */\n    CanStick.prototype.resetStickyChanged = function () { };\n}\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a cell definition. Captures a column's cell template definition.\n * @record\n */\nfunction CellDef() { }\nif (false) {\n    /** @type {?} */\n    CellDef.prototype.template;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkCellDef.prototype.template;\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkHeaderCellDef.prototype.template;\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkFooterCellDef.prototype.template;\n}\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor() {\n        super(...arguments);\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (!name) {\n            return;\n        }\n        this._name = name;\n        this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return ɵCdkColumnDef_BaseFactory(t || CdkColumnDef); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\nconst ɵCdkColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CdkColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_stickyEnd;\n    /** @type {?} */\n    CdkColumnDef.prototype._name;\n    /** @type {?} */\n    CdkColumnDef.prototype._stickyEnd;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.headerCell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cssClassFriendlyName;\n}\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n\nif (false) {\n    /**\n     * The columns to be displayed on this row.\n     * @type {?}\n     */\n    BaseRowDef.prototype.columns;\n    /**\n     * Differ used to check if any changes were made to the columns.\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._columnsDiffer;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    BaseRowDef.prototype.template;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._differs;\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkHeaderRowDef.ngAcceptInputType_sticky;\n}\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     * @type {?}\n     */\n    CdkRowDef.prototype.when;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is false\n * @record\n * @template T\n */\nfunction CdkCellOutletRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.index;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.odd;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n * @record\n * @template T\n */\nfunction CdkCellOutletMultiRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.dataIndex;\n    /**\n     * Index location of the rendered row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.renderIndex;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.odd;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\nif (false) {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     * @type {?}\n     */\n    CdkCellOutlet.mostRecentCellOutlet;\n    /**\n     * The ordered list of cells to render within this outlet's view container\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.cells;\n    /**\n     * The data context to be provided to each cell\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.context;\n    /** @type {?} */\n    CdkCellOutlet.prototype._viewContainer;\n}\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/sticky-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of (/** @type {?} */ (STICKY_DIRECTIONS))) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isNativeHtmlTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._stickCellCss;\n    /** @type {?} */\n    StickyStyler.prototype.direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isBrowser;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to provide an outlet for rows to be inserted into.\n * @record\n */\nfunction RowOutlet() { }\nif (false) {\n    /** @type {?} */\n    RowOutlet.prototype.viewContainer;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    DataRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    DataRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    HeaderRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    HeaderRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    FooterRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    FooterRowOutlet.prototype.elementRef;\n}\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RowContext() { }\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RenderRow() { }\nif (false) {\n    /** @type {?} */\n    RenderRow.prototype.data;\n    /** @type {?} */\n    RenderRow.prototype.dataIndex;\n    /** @type {?} */\n    RenderRow.prototype.rowDef;\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeQueryListAndSet(this._contentColumnDefs, this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs =\n            mergeQueryListAndSet(this._contentHeaderRowDefs, this._customHeaderRowDefs);\n        this._footerRowDefs =\n            mergeQueryListAndSet(this._contentFooterRowDefs, this._customFooterRowDefs);\n        this._rowDefs = mergeQueryListAndSet(this._contentRowDefs, this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTable.ngAcceptInputType_multiTemplateDataRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._document;\n    /**\n     * Latest data provided by the data source.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._data;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._onDestroy;\n    /**\n     * List of the rendered rows as identified by their `RenderRow` object.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderRows;\n    /**\n     * Subscription that listens for the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._columnDefsByName;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefs;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataDiffer;\n    /**\n     * Stores the row definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customColumnDefs;\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customRowDefs;\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customHeaderRowDefs;\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customFooterRowDefs;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefChanged;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefChanged;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._cachedRenderRowsMap;\n    /**\n     * Whether the table is applied to a native `<table>`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype.stickyCssClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._trackByFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataSource;\n    /** @type {?} */\n    CdkTable.prototype._multiTemplateDataRows;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTable.prototype.viewChange;\n    /** @type {?} */\n    CdkTable.prototype._rowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._headerRowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._footerRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     * @type {?}\n     */\n    CdkTable.prototype._contentColumnDefs;\n    /**\n     * Set of data row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentRowDefs;\n    /**\n     * Set of header row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentHeaderRowDefs;\n    /**\n     * Set of footer row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentFooterRowDefs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._differs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._platform;\n}\n/**\n * Utility function that gets a merged list of the entries in a QueryList and values of a Set.\n * @template T\n * @param {?} queryList\n * @param {?} set\n * @return {?}\n */\nfunction mergeQueryListAndSet(queryList, set) {\n    return queryList.toArray().concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configurable options for `CdkTextColumn`.\n * @record\n * @template T\n */\nfunction TextColumnOptions() { }\nif (false) {\n    /**\n     * Default function that provides the header text based on the column name if a header\n     * text is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultHeaderTextTransform;\n    /**\n     * Default data accessor to use if one is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultDataAccessor;\n}\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextColumn.prototype._name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.dataAccessor;\n    /**\n     * Alignment of the cell values.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.justify;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerCell;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._table;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?=} document\n     */\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        /** @type {?} */\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    CdkTextareaAutosize.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","/**\n * @license Angular v9.0.7\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken, forwardRef, Directive, Renderer2, ElementRef, Optional, Inject, Self, ɵisPromise, ɵisObservable, Injectable, Injector, Input, ɵlooseIdentical, Host, isDevMode, EventEmitter, SkipSelf, Output, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { forkJoin, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/control_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * Defines an interface that acts as a bridge between the Angular forms API and a\n * native element in the DOM.\n *\n * Implement this interface to create a custom form control directive\n * that integrates with Angular forms.\n *\n * @see DefaultValueAccessor\n *\n * \\@publicApi\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction ControlValueAccessor() { }\nif (false) {\n    /**\n     * \\@description\n     * Writes a new value to the element.\n     *\n     * This method is called by the forms API to write to the view when programmatic\n     * changes from model to view are requested.\n     *\n     * \\@usageNotes\n     * ### Write a value to the element\n     *\n     * The following example writes a value to the native DOM element.\n     *\n     * ```ts\n     * writeValue(value: any): void {\n     *   this._renderer.setProperty(this._elementRef.nativeElement, 'value', value);\n     * }\n     * ```\n     *\n     * @param {?} obj The new value for the element\n     * @return {?}\n     */\n    ControlValueAccessor.prototype.writeValue = function (obj) { };\n    /**\n     * \\@description\n     * Registers a callback function that is called when the control's value\n     * changes in the UI.\n     *\n     * This method is called by the forms API on initialization to update the form\n     * model when values propagate from the view to the model.\n     *\n     * When implementing the `registerOnChange` method in your own value accessor,\n     * save the given function so your class calls it at the appropriate time.\n     *\n     * \\@usageNotes\n     * ### Store the change function\n     *\n     * The following example stores the provided function as an internal method.\n     *\n     * ```ts\n     * registerOnChange(fn: (_: any) => void): void {\n     *   this._onChange = fn;\n     * }\n     * ```\n     *\n     * When the value changes in the UI, call the registered\n     * function to allow the forms API to update itself:\n     *\n     * ```ts\n     * host: {\n     *    '(change)': '_onChange($event.target.value)'\n     * }\n     * ```\n     *\n     * @param {?} fn The callback function to register\n     * @return {?}\n     */\n    ControlValueAccessor.prototype.registerOnChange = function (fn) { };\n    /**\n     * \\@description\n     * Registers a callback function is called by the forms API on initialization\n     * to update the form model on blur.\n     *\n     * When implementing `registerOnTouched` in your own value accessor, save the given\n     * function so your class calls it when the control should be considered\n     * blurred or \"touched\".\n     *\n     * \\@usageNotes\n     * ### Store the callback function\n     *\n     * The following example stores the provided function as an internal method.\n     *\n     * ```ts\n     * registerOnTouched(fn: any): void {\n     *   this._onTouched = fn;\n     * }\n     * ```\n     *\n     * On blur (or equivalent), your class should call the registered function to allow\n     * the forms API to update itself:\n     *\n     * ```ts\n     * host: {\n     *    '(blur)': '_onTouched()'\n     * }\n     * ```\n     *\n     * @param {?} fn The callback function to register\n     * @return {?}\n     */\n    ControlValueAccessor.prototype.registerOnTouched = function (fn) { };\n    /**\n     * \\@description\n     * Function that is called by the forms API when the control status changes to\n     * or from 'DISABLED'. Depending on the status, it enables or disables the\n     * appropriate DOM element.\n     *\n     * \\@usageNotes\n     * The following is an example of writing the disabled property to a native DOM element:\n     *\n     * ```ts\n     * setDisabledState(isDisabled: boolean): void {\n     *   this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n     * }\n     * ```\n     *\n     * @param {?} isDisabled The disabled status to set on the element\n     * @return {?}\n     */\n    ControlValueAccessor.prototype.setDisabledState = function (isDisabled) { };\n}\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * \\@publicApi\n * @type {?}\n */\nconst NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/checkbox_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => CheckboxControlValueAccessor)),\n    multi: true,\n};\n/**\n * \\@description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * \\@usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass CheckboxControlValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Sets the \"checked\" property on the input element.\n     *\n     * @param {?} value The checked value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nCheckboxControlValueAccessor.ɵfac = function CheckboxControlValueAccessor_Factory(t) { return new (t || CheckboxControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCheckboxControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxControlValueAccessor, selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]], hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.checked); })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR])] });\n/** @nocollapse */\nCheckboxControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@description\n     * The registered callback function called when a change event occurs on the input element.\n     * @type {?}\n     */\n    CheckboxControlValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    CheckboxControlValueAccessor.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    CheckboxControlValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CheckboxControlValueAccessor.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/default_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => DefaultValueAccessor)),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid() {\n    /** @type {?} */\n    const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * \\@description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * \\@publicApi\n * @type {?}\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * \\@description\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * \\@usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass DefaultValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _compositionMode\n     */\n    constructor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        /**\n         * \\@description\n         * The registered callback function called when an input event occurs on the input element.\n         */\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Whether the user is creating a composition string (IME events).\n         */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param {?} value The checked value\n     * @return {?}\n     */\n    writeValue(value) {\n        /** @type {?} */\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _compositionStart() { this._composing = true; }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n}\nDefaultValueAccessor.ɵfac = function DefaultValueAccessor_Factory(t) { return new (t || DefaultValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8)); };\nDefaultValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DefaultValueAccessor, selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]], hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) { return ctx._handleInput($event.target.value); })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() { return ctx._compositionStart(); })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) { return ctx._compositionEnd($event.target.value); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR])] });\n/** @nocollapse */\nDefaultValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DefaultValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '$any(this)._handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '$any(this)._compositionStart()',\n                    '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: Boolean, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [COMPOSITION_BUFFER_MODE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * \\@description\n     * The registered callback function called when an input event occurs on the input element.\n     * @type {?}\n     */\n    DefaultValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    DefaultValueAccessor.prototype.onTouched;\n    /**\n     * Whether the user is creating a composition string (IME events).\n     * @type {?}\n     * @private\n     */\n    DefaultValueAccessor.prototype._composing;\n    /**\n     * @type {?}\n     * @private\n     */\n    DefaultValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    DefaultValueAccessor.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    DefaultValueAccessor.prototype._compositionMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/abstract_control_directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * \\@publicApi\n * @abstract\n */\nclass AbstractControlDirective {\n    /**\n     * \\@description\n     * Reports the value of the control if it is present, otherwise null.\n     * @return {?}\n     */\n    get value() { return this.control ? this.control.value : null; }\n    /**\n     * \\@description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     * @return {?}\n     */\n    get valid() { return this.control ? this.control.valid : null; }\n    /**\n     * \\@description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     * @return {?}\n     */\n    get invalid() { return this.control ? this.control.invalid : null; }\n    /**\n     * \\@description\n     * Reports whether a control is pending, meaning that that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     * @return {?}\n     */\n    get pending() { return this.control ? this.control.pending : null; }\n    /**\n     * \\@description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get disabled() { return this.control ? this.control.disabled : null; }\n    /**\n     * \\@description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get enabled() { return this.control ? this.control.enabled : null; }\n    /**\n     * \\@description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get errors() { return this.control ? this.control.errors : null; }\n    /**\n     * \\@description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get pristine() { return this.control ? this.control.pristine : null; }\n    /**\n     * \\@description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get dirty() { return this.control ? this.control.dirty : null; }\n    /**\n     * \\@description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get touched() { return this.control ? this.control.touched : null; }\n    /**\n     * \\@description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     * @return {?}\n     */\n    get status() { return this.control ? this.control.status : null; }\n    /**\n     * \\@description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get untouched() { return this.control ? this.control.untouched : null; }\n    /**\n     * \\@description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * \\@description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     * @return {?}\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * \\@description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     * @return {?}\n     */\n    get path() { return null; }\n    /**\n     * \\@description\n     * Resets the control with the provided value if the control is present.\n     * @param {?=} value\n     * @return {?}\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * \\@description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * \\@usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @param {?} errorCode The code of the error to check\n     * @param {?=} path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @return {?} whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * \\@description\n     * Reports error data for the control with the given path.\n     *\n     * \\@usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @param {?} errorCode The code of the error to check\n     * @param {?=} path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @return {?} error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\nAbstractControlDirective.ɵfac = function AbstractControlDirective_Factory(t) { return new (t || AbstractControlDirective)(); };\nAbstractControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractControlDirective });\n\nif (false) {\n    /**\n     * \\@description\n     * A reference to the underlying control.\n     *\n     * @abstract\n     * @return {?} the control that backs this directive. Most properties fall through to that instance.\n     */\n    AbstractControlDirective.prototype.control = function () { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/control_container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * \\@publicApi\n * @abstract\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * \\@description\n     * The top-level form directive for the control.\n     * @return {?}\n     */\n    get formDirective() { return null; }\n    /**\n     * \\@description\n     * The path to this group.\n     * @return {?}\n     */\n    get path() { return null; }\n}\nControlContainer.ɵfac = function ControlContainer_Factory(t) { return ɵControlContainer_BaseFactory(t || ControlContainer); };\nControlContainer.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ControlContainer, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵControlContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(ControlContainer);\nif (false) {\n    /**\n     * \\@description\n     * The name for the control\n     * @type {?}\n     */\n    ControlContainer.prototype.name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/ng_control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * \\@description\n * A base class that all control `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * \\@publicApi\n * @abstract\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * \\@description\n         * The parent form for the control.\n         *\n         * \\@internal\n         */\n        this._parent = null;\n        /**\n         * \\@description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * \\@description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n        /**\n         * \\@description\n         * The uncomposed array of synchronous validators for the control\n         *\n         * \\@internal\n         */\n        this._rawValidators = [];\n        /**\n         * \\@description\n         * The uncomposed array of async validators for the control\n         *\n         * \\@internal\n         */\n        this._rawAsyncValidators = [];\n    }\n    /**\n     * \\@description\n     * The registered synchronous validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     * @return {?}\n     */\n    get validator() { return (/** @type {?} */ (unimplemented())); }\n    /**\n     * \\@description\n     * The registered async validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     * @return {?}\n     */\n    get asyncValidator() { return (/** @type {?} */ (unimplemented())); }\n}\nif (false) {\n    /**\n     * \\@description\n     * The parent form for the control.\n     *\n     * \\@internal\n     * @type {?}\n     */\n    NgControl.prototype._parent;\n    /**\n     * \\@description\n     * The name for the control\n     * @type {?}\n     */\n    NgControl.prototype.name;\n    /**\n     * \\@description\n     * The value accessor for the control\n     * @type {?}\n     */\n    NgControl.prototype.valueAccessor;\n    /**\n     * \\@description\n     * The uncomposed array of synchronous validators for the control\n     *\n     * \\@internal\n     * @type {?}\n     */\n    NgControl.prototype._rawValidators;\n    /**\n     * \\@description\n     * The uncomposed array of async validators for the control\n     *\n     * \\@internal\n     * @type {?}\n     */\n    NgControl.prototype._rawAsyncValidators;\n    /**\n     * \\@description\n     * The callback method to update the model from the view when requested\n     *\n     * @abstract\n     * @param {?} newValue The new value for the view\n     * @return {?}\n     */\n    NgControl.prototype.viewToModelUpdate = function (newValue) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/ng_control_status.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AbstractControlStatus {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) { this._cd = cd; }\n    /**\n     * @return {?}\n     */\n    get ngClassUntouched() { return this._cd.control ? this._cd.control.untouched : false; }\n    /**\n     * @return {?}\n     */\n    get ngClassTouched() { return this._cd.control ? this._cd.control.touched : false; }\n    /**\n     * @return {?}\n     */\n    get ngClassPristine() { return this._cd.control ? this._cd.control.pristine : false; }\n    /**\n     * @return {?}\n     */\n    get ngClassDirty() { return this._cd.control ? this._cd.control.dirty : false; }\n    /**\n     * @return {?}\n     */\n    get ngClassValid() { return this._cd.control ? this._cd.control.valid : false; }\n    /**\n     * @return {?}\n     */\n    get ngClassInvalid() { return this._cd.control ? this._cd.control.invalid : false; }\n    /**\n     * @return {?}\n     */\n    get ngClassPending() { return this._cd.control ? this._cd.control.pending : false; }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AbstractControlStatus.prototype._cd;\n}\n/** @type {?} */\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * \\@description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * \\@usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatus.ɵfac = function NgControlStatus_Factory(t) { return new (t || NgControlStatus)(ɵngcc0.ɵɵdirectiveInject(NgControl, 2)); };\nNgControlStatus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatus, selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]], hostVars: 14, hostBindings: function NgControlStatus_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nNgControlStatus.ctorParameters = () => [\n    { type: NgControl, decorators: [{ type: Self }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatus, [{\n        type: Directive,\n        args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost }]\n    }], function () { return [{ type: NgControl, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n/**\n * \\@description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @see `NgControlStatus`\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatusGroup.ɵfac = function NgControlStatusGroup_Factory(t) { return new (t || NgControlStatusGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 2)); };\nNgControlStatusGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatusGroup, selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]], hostVars: 14, hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nNgControlStatusGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Self }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatusGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/validators.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/**\n * \\@description\n * An `InjectionToken` for registering additional synchronous validators used with `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * \\@usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * \\@Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * \\@publicApi\n * @type {?}\n */\nconst NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * \\@description\n * An `InjectionToken` for registering additional asynchronous validators used with `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n * \\@publicApi\n * @type {?}\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part\\@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n * @type {?}\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * \\@description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * \\@publicApi\n */\nclass Validators {\n    /**\n     * \\@description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} min\n     * @return {?} A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     */\n    static min(min) {\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            /** @type {?} */\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        });\n    }\n    /**\n     * \\@description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} max\n     * @return {?} A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     */\n    static max(max) {\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            /** @type {?} */\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        });\n    }\n    /**\n     * \\@description\n     * Validator that requires the control have a non-empty value.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} control\n     * @return {?} An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     */\n    static required(control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    }\n    /**\n     * \\@description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} control\n     * @return {?} An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     */\n    static requiredTrue(control) {\n        return control.value === true ? null : { 'required': true };\n    }\n    /**\n     * \\@description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common usecases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address)\n     * with some enhancements to incorporate more RFC rules (such as rules related to domain names and\n     * the lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `\\@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad\\@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} control\n     * @return {?} An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     */\n    static email(control) {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    }\n    /**\n     * \\@description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} minLength\n     * @return {?} A validator function that returns an error map with the\n     * `minlength` if the validation check fails, otherwise `null`.\n     *\n     */\n    static minLength(minLength) {\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            /** @type {?} */\n            const length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        });\n    }\n    /**\n     * \\@description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} maxLength\n     * @return {?} A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     */\n    static maxLength(maxLength) {\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        });\n    }\n    /**\n     * \\@description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @return {?} A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     */\n    static pattern(pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        /** @type {?} */\n        let regex;\n        /** @type {?} */\n        let regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = '';\n            if (pattern.charAt(0) !== '^')\n                regexStr += '^';\n            regexStr += pattern;\n            if (pattern.charAt(pattern.length - 1) !== '$')\n                regexStr += '$';\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            /** @type {?} */\n            const value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        });\n    }\n    /**\n     * \\@description\n     * Validator that performs no operation.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} control\n     * @return {?}\n     */\n    static nullValidator(control) { return null; }\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    static compose(validators) {\n        if (!validators)\n            return null;\n        /** @type {?} */\n        const presentValidators = (/** @type {?} */ (validators.filter(isPresent)));\n        if (presentValidators.length == 0)\n            return null;\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        });\n    }\n    /**\n     * \\@description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} validators\n     * @return {?} A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     */\n    static composeAsync(validators) {\n        if (!validators)\n            return null;\n        /** @type {?} */\n        const presentValidators = (/** @type {?} */ (validators.filter(isPresent)));\n        if (presentValidators.length == 0)\n            return null;\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        function (control) {\n            /** @type {?} */\n            const observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return forkJoin(observables).pipe(map(_mergeErrors));\n        });\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o) {\n    return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction toObservable(r) {\n    /** @type {?} */\n    const obs = ɵisPromise(r) ? from(r) : r;\n    if (!(ɵisObservable(obs))) {\n        throw new Error(`Expected validator to return Promise or Observable.`);\n    }\n    return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control, validators) {\n    return validators.map((/**\n     * @param {?} v\n     * @return {?}\n     */\n    v => v(control)));\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map((/**\n     * @param {?} v\n     * @return {?}\n     */\n    v => v(control)));\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors) {\n    /** @type {?} */\n    let res = {};\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    arrayOfErrors.forEach((/**\n     * @param {?} errors\n     * @return {?}\n     */\n    (errors) => {\n        res = errors != null ? Object.assign(Object.assign({}, (/** @type {?} */ (res))), errors) : (/** @type {?} */ (res));\n    }));\n    return Object.keys(res).length === 0 ? null : res;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/normalize_validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeValidator(validator) {\n    if (((/** @type {?} */ (validator))).validate) {\n        return (/**\n         * @param {?} c\n         * @return {?}\n         */\n        (c) => ((/** @type {?} */ (validator))).validate(c));\n    }\n    else {\n        return (/** @type {?} */ (validator));\n    }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeAsyncValidator(validator) {\n    if (((/** @type {?} */ (validator))).validate) {\n        return (/**\n         * @param {?} c\n         * @return {?}\n         */\n        (c) => ((/** @type {?} */ (validator))).validate(c));\n    }\n    else {\n        return (/** @type {?} */ (validator));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/number_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NumberValueAccessor)),\n    multi: true\n};\n/**\n * \\@description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * \\@usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NumberValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@description\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         */\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param {?} value The checked value\n     * @return {?}\n     */\n    writeValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        /** @type {?} */\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = (/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => { fn(value == '' ? null : parseFloat(value)); });\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nNumberValueAccessor.ɵfac = function NumberValueAccessor_Factory(t) { return new (t || NumberValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNumberValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberValueAccessor, selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]], hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function NumberValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR])] });\n/** @nocollapse */\nNumberValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@description\n     * The registered callback function called when a change or input event occurs on the input\n     * element.\n     * @type {?}\n     */\n    NumberValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    NumberValueAccessor.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    NumberValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    NumberValueAccessor.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/radio_control_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => RadioControlValueAccessor)),\n    multi: true\n};\n/**\n * \\@description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n    constructor() {\n        this._accessors = [];\n    }\n    /**\n     * \\@description\n     * Adds a control to the internal registry. For internal use only.\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * \\@description\n     * Removes a control from the internal registry. For internal use only.\n     * @param {?} accessor\n     * @return {?}\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * \\@description\n     * Selects a radio button. For internal use only.\n     * @param {?} accessor\n     * @return {?}\n     */\n    select(accessor) {\n        this._accessors.forEach((/**\n         * @param {?} c\n         * @return {?}\n         */\n        (c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        }));\n    }\n    /**\n     * @private\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    }\n}\nRadioControlRegistry.ɵfac = function RadioControlRegistry_Factory(t) { return new (t || RadioControlRegistry)(); };\nRadioControlRegistry.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RadioControlRegistry, factory: RadioControlRegistry.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlRegistry, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RadioControlRegistry.prototype._accessors;\n}\n/**\n * \\@description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * \\@usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass RadioControlValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _registry\n     * @param {?} _injector\n     */\n    constructor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        /**\n         * \\@description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * \\@description\n     * A lifecycle method called when the directive is initialized. For internal use only.\n     * @return {?}\n     */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /**\n     * \\@description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @return {?}\n     */\n    ngOnDestroy() { this._registry.remove(this); }\n    /**\n     * \\@description\n     * Sets the \"checked\" property value on the radio input element.\n     *\n     * @param {?} value The checked value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = (/**\n         * @return {?}\n         */\n        () => {\n            fn(this.value);\n            this._registry.select(this);\n        });\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    fireUncheck(value) { this.writeValue(value); }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkName() {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _throwNameError() {\n        throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n    }\n}\nRadioControlValueAccessor.ɵfac = function RadioControlValueAccessor_Factory(t) { return new (t || RadioControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(RadioControlRegistry), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nRadioControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RadioControlValueAccessor, selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]], hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() { return ctx.onChange(); })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, features: [ɵngcc0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR])] });\n/** @nocollapse */\nRadioControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: RadioControlRegistry },\n    { type: Injector }\n];\nRadioControlValueAccessor.propDecorators = {\n    name: [{ type: Input }],\n    formControlName: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: RadioControlRegistry }, { type: ɵngcc0.Injector }]; }, { name: [{\n            type: Input\n        }], formControlName: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype._state;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype._control;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype._fn;\n    /**\n     * \\@description\n     * The registered callback function called when a change event occurs on the input element.\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype.onTouched;\n    /**\n     * \\@description\n     * Tracks the name of the radio input element.\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype.name;\n    /**\n     * \\@description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype.formControlName;\n    /**\n     * \\@description\n     * Tracks the value of the radio input element\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype.value;\n    /**\n     * @type {?}\n     * @private\n     */\n    RadioControlValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    RadioControlValueAccessor.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    RadioControlValueAccessor.prototype._registry;\n    /**\n     * @type {?}\n     * @private\n     */\n    RadioControlValueAccessor.prototype._injector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/range_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => RangeValueAccessor)),\n    multi: true\n};\n/**\n * \\@description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * \\@usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass RangeValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@description\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         */\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param {?} value The checked value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = (/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => { fn(value == '' ? null : parseFloat(value)); });\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nRangeValueAccessor.ɵfac = function RangeValueAccessor_Factory(t) { return new (t || RangeValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nRangeValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RangeValueAccessor, selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]], hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR])] });\n/** @nocollapse */\nRangeValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RangeValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@description\n     * The registered callback function called when a change or input event occurs on the input\n     * element.\n     * @type {?}\n     */\n    RangeValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    RangeValueAccessor.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    RangeValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    RangeValueAccessor.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/error_examples.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst FormErrorExamples = {\n    formControlName: `\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });`,\n    formGroupName: `\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });`,\n    formArrayName: `\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });`,\n    ngModelGroup: `\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>`,\n    ngModelWithFormGroup: `\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  `\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/reactive_errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ReactiveErrors {\n    /**\n     * @return {?}\n     */\n    static controlParentException() {\n        throw new Error(`formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formControlName}`);\n    }\n    /**\n     * @return {?}\n     */\n    static ngModelGroupException() {\n        throw new Error(`formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${FormErrorExamples.formGroupName}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${FormErrorExamples.ngModelGroup}`);\n    }\n    /**\n     * @return {?}\n     */\n    static missingFormException() {\n        throw new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${FormErrorExamples.formControlName}`);\n    }\n    /**\n     * @return {?}\n     */\n    static groupParentException() {\n        throw new Error(`formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formGroupName}`);\n    }\n    /**\n     * @return {?}\n     */\n    static arrayParentException() {\n        throw new Error(`formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ${FormErrorExamples.formArrayName}`);\n    }\n    /**\n     * @return {?}\n     */\n    static disabledAttrWarning() {\n        console.warn(`\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    `);\n    }\n    /**\n     * @param {?} directiveName\n     * @return {?}\n     */\n    static ngModelWarning(directiveName) {\n        console.warn(`\n    It looks like you're using ngModel on the same form field as ${directiveName}. \n    Support for using the ngModel input property and ngModelChange event with \n    reactive form directives has been deprecated in Angular v6 and will be removed \n    in Angular v7.\n    \n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective'\n            : 'FormControlName'}#use-with-ngmodel\n    `);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/select_control_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => SelectControlValueAccessor)),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * \\@description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * \\@usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass SelectControlValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        /**\n         * \\@description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._compareWith = ɵlooseIdentical;\n    }\n    /**\n     * \\@description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the input element. The \"selectedIndex\"\n     * property is also set if an ID is provided on the option element.\n     *\n     * @param {?} value The checked value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        /** @type {?} */\n        const id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        /** @type {?} */\n        const valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = (/**\n         * @param {?} valueString\n         * @return {?}\n         */\n        (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        });\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _registerOption() { return (this._idCounter++).toString(); }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    _getOptionValue(valueString) {\n        /** @type {?} */\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n}\nSelectControlValueAccessor.ɵfac = function SelectControlValueAccessor_Factory(t) { return new (t || SelectControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectControlValueAccessor, selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]], hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR])] });\n/** @nocollapse */\nSelectControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    SelectControlValueAccessor.prototype.value;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    SelectControlValueAccessor.prototype._optionMap;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    SelectControlValueAccessor.prototype._idCounter;\n    /**\n     * \\@description\n     * The registered callback function called when a change event occurs on the input element.\n     * @type {?}\n     */\n    SelectControlValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    SelectControlValueAccessor.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectControlValueAccessor.prototype._compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectControlValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectControlValueAccessor.prototype._elementRef;\n}\n/**\n * \\@description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectControlValueAccessor`\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NgSelectOption {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * \\@description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     * @param {?} value\n     * @return {?}\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * \\@description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select.writeValue(this._select.value);\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /**\n     * \\@description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nNgSelectOption.ɵfac = function NgSelectOption_Factory(t) { return new (t || NgSelectOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectControlValueAccessor, 9)); };\nNgSelectOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgSelectOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\n/** @nocollapse */\nNgSelectOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nNgSelectOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * ID of the option element\n     * @type {?}\n     */\n    NgSelectOption.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgSelectOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgSelectOption.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgSelectOption.prototype._select;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/select_multiple_control_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => SelectMultipleControlValueAccessor)),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * Mock interface for HTML Options\n * @record\n */\nfunction HTMLOption() { }\nif (false) {\n    /** @type {?} */\n    HTMLOption.prototype.value;\n    /** @type {?} */\n    HTMLOption.prototype.selected;\n}\n/**\n * Mock interface for HTMLCollection\n * @abstract\n */\nclass HTMLCollection {\n}\nif (false) {\n    /** @type {?} */\n    HTMLCollection.prototype.length;\n    /**\n     * @abstract\n     * @param {?} _\n     * @return {?}\n     */\n    HTMLCollection.prototype.item = function (_) { };\n}\n/**\n * \\@description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @see `SelectControlValueAccessor`\n *\n * \\@usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass SelectMultipleControlValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        /**\n         * \\@description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._compareWith = ɵlooseIdentical;\n    }\n    /**\n     * \\@description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * \\@description\n     * Sets the \"value\" property on one or of more\n     * of the select's options.\n     *\n     * @param {?} value The value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        /** @type {?} */\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            /** @type {?} */\n            const ids = value.map((/**\n             * @param {?} v\n             * @return {?}\n             */\n            (v) => this._getOptionId(v)));\n            optionSelectedStateSetter = (/**\n             * @param {?} opt\n             * @param {?} o\n             * @return {?}\n             */\n            (opt, o) => { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n        }\n        else {\n            optionSelectedStateSetter = (/**\n             * @param {?} opt\n             * @param {?} o\n             * @return {?}\n             */\n            (opt, o) => { opt._setSelected(false); });\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => {\n            /** @type {?} */\n            const selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                /** @type {?} */\n                const options = _.selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    /** @type {?} */\n                    const opt = options.item(i);\n                    /** @type {?} */\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade on IE\n            else {\n                /** @type {?} */\n                const options = (/** @type {?} */ (_.options));\n                for (let i = 0; i < options.length; i++) {\n                    /** @type {?} */\n                    const opt = options.item(i);\n                    if (opt.selected) {\n                        /** @type {?} */\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        });\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _registerOption(value) {\n        /** @type {?} */\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith((/** @type {?} */ (this._optionMap.get(id)))._value, value))\n                return id;\n        }\n        return null;\n    }\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    _getOptionValue(valueString) {\n        /** @type {?} */\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? (/** @type {?} */ (this._optionMap.get(id)))._value : valueString;\n    }\n}\nSelectMultipleControlValueAccessor.ɵfac = function SelectMultipleControlValueAccessor_Factory(t) { return new (t || SelectMultipleControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectMultipleControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectMultipleControlValueAccessor, selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]], hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target); })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR])] });\n/** @nocollapse */\nSelectMultipleControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectMultipleControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectMultipleControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * The current value\n     * @type {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.value;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._optionMap;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._idCounter;\n    /**\n     * \\@description\n     * The registered callback function called when a change event occurs on the input element.\n     * @type {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectMultipleControlValueAccessor.prototype._compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectMultipleControlValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectMultipleControlValueAccessor.prototype._elementRef;\n}\n/**\n * \\@description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectMultipleControlValueAccessor`\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass ɵNgSelectMultipleOption {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * \\@description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     * @param {?} value\n     * @return {?}\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * \\@description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /**\n     * \\@description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nɵNgSelectMultipleOption.ɵfac = function ɵNgSelectMultipleOption_Factory(t) { return new (t || ɵNgSelectMultipleOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9)); };\nɵNgSelectMultipleOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgSelectMultipleOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\n/** @nocollapse */\nɵNgSelectMultipleOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nɵNgSelectMultipleOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgSelectMultipleOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    ɵNgSelectMultipleOption.prototype.id;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ɵNgSelectMultipleOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    ɵNgSelectMultipleOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    ɵNgSelectMultipleOption.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    ɵNgSelectMultipleOption.prototype._select;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/shared.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nfunction controlPath(name, parent) {\n    return [...(/** @type {?} */ (parent.path)), (/** @type {?} */ (name))];\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([(/** @type {?} */ (control.validator)), dir.validator]);\n    control.asyncValidator = Validators.composeAsync([(/** @type {?} */ (control.asyncValidator)), dir.asyncValidator]);\n    (/** @type {?} */ (dir.valueAccessor)).writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    if ((/** @type {?} */ (dir.valueAccessor)).setDisabledState) {\n        control.registerOnDisabledChange((/**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        (isDisabled) => { (/** @type {?} */ ((/** @type {?} */ (dir.valueAccessor)).setDisabledState))(isDisabled); }));\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach((/**\n     * @param {?} validator\n     * @return {?}\n     */\n    (validator) => {\n        if (((/** @type {?} */ (validator))).registerOnValidatorChange)\n            (/** @type {?} */ (((/** @type {?} */ (validator))).registerOnValidatorChange))((/**\n             * @return {?}\n             */\n            () => control.updateValueAndValidity()));\n    }));\n    dir._rawAsyncValidators.forEach((/**\n     * @param {?} validator\n     * @return {?}\n     */\n    (validator) => {\n        if (((/** @type {?} */ (validator))).registerOnValidatorChange)\n            (/** @type {?} */ (((/** @type {?} */ (validator))).registerOnValidatorChange))((/**\n             * @return {?}\n             */\n            () => control.updateValueAndValidity()));\n    }));\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction cleanUpControl(control, dir) {\n    (/** @type {?} */ (dir.valueAccessor)).registerOnChange((/**\n     * @return {?}\n     */\n    () => _noControlError(dir)));\n    (/** @type {?} */ (dir.valueAccessor)).registerOnTouched((/**\n     * @return {?}\n     */\n    () => _noControlError(dir)));\n    dir._rawValidators.forEach((/**\n     * @param {?} validator\n     * @return {?}\n     */\n    (validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    }));\n    dir._rawAsyncValidators.forEach((/**\n     * @param {?} validator\n     * @return {?}\n     */\n    (validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    }));\n    if (control)\n        control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpViewChangePipeline(control, dir) {\n    (/** @type {?} */ (dir.valueAccessor)).registerOnChange((/**\n     * @param {?} newValue\n     * @return {?}\n     */\n    (newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    }));\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpBlurPipeline(control, dir) {\n    (/** @type {?} */ (dir.valueAccessor)).registerOnTouched((/**\n     * @return {?}\n     */\n    () => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    }));\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpModelChangePipeline(control, dir) {\n    control.registerOnChange((/**\n     * @param {?} newValue\n     * @param {?} emitModelEvent\n     * @return {?}\n     */\n    (newValue, emitModelEvent) => {\n        // control -> view\n        (/** @type {?} */ (dir.valueAccessor)).writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    }));\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir, message) {\n    /** @type {?} */\n    let messageEnd;\n    if ((/** @type {?} */ (dir.path)).length > 1) {\n        messageEnd = `path: '${(/** @type {?} */ (dir.path)).join(' -> ')}'`;\n    }\n    else if ((/** @type {?} */ (dir.path))[0]) {\n        messageEnd = `name: '${dir.path}'`;\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(`${message} ${messageEnd}`);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    /** @type {?} */\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !ɵlooseIdentical(viewModel, change.currentValue);\n}\n/** @type {?} */\nconst BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some((/**\n     * @param {?} a\n     * @return {?}\n     */\n    a => valueAccessor.constructor === a));\n}\n/**\n * @param {?} form\n * @param {?} directives\n * @return {?}\n */\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach((/**\n     * @param {?} dir\n     * @return {?}\n     */\n    dir => {\n        /** @type {?} */\n        const control = (/** @type {?} */ (dir.control));\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    }));\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    /** @type {?} */\n    let defaultAccessor = undefined;\n    /** @type {?} */\n    let builtinAccessor = undefined;\n    /** @type {?} */\n    let customAccessor = undefined;\n    valueAccessors.forEach((/**\n     * @param {?} v\n     * @return {?}\n     */\n    (v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    }));\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction removeDir(list, el) {\n    /** @type {?} */\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\n/**\n * @param {?} name\n * @param {?} type\n * @param {?} instance\n * @param {?} warningConfig\n * @return {?}\n */\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (!isDevMode() || warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        ReactiveErrors.ngModelWarning(name);\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reports that a FormControl is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n * @type {?}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a FormControl is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n * @type {?}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a FormControl is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n * @type {?}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n * @type {?}\n */\nconst DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!Array.isArray(path)) {\n        path = path.split(delimiter);\n    }\n    if (Array.isArray(path) && path.length === 0)\n        return null;\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    /** @type {?} */\n    let controlToFind = control;\n    path.forEach((/**\n     * @param {?} name\n     * @return {?}\n     */\n    (name) => {\n        if (controlToFind instanceof FormGroup) {\n            controlToFind = controlToFind.controls.hasOwnProperty((/** @type {?} */ (name))) ?\n                controlToFind.controls[name] :\n                null;\n        }\n        else if (controlToFind instanceof FormArray) {\n            controlToFind = controlToFind.at((/** @type {?} */ (name))) || null;\n        }\n        else {\n            controlToFind = null;\n        }\n    }));\n    return controlToFind;\n}\n/**\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction coerceToValidator(validatorOrOpts) {\n    /** @type {?} */\n    const validator = (/** @type {?} */ ((isOptionsObj(validatorOrOpts) ? ((/** @type {?} */ (validatorOrOpts))).validators :\n        validatorOrOpts)));\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * @param {?=} asyncValidator\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator, validatorOrOpts) {\n    /** @type {?} */\n    const origAsyncValidator = (/** @type {?} */ ((isOptionsObj(validatorOrOpts) ? ((/** @type {?} */ (validatorOrOpts))).asyncValidators :\n        asyncValidator)));\n    return Array.isArray(origAsyncValidator) ? composeAsyncValidators(origAsyncValidator) :\n        origAsyncValidator || null;\n}\n/**\n * Interface for options provided to an `AbstractControl`.\n *\n * \\@publicApi\n * @record\n */\nfunction AbstractControlOptions() { }\nif (false) {\n    /**\n     * \\@description\n     * The list of validators applied to a control.\n     * @type {?|undefined}\n     */\n    AbstractControlOptions.prototype.validators;\n    /**\n     * \\@description\n     * The list of async validators applied to control.\n     * @type {?|undefined}\n     */\n    AbstractControlOptions.prototype.asyncValidators;\n    /**\n     * \\@description\n     * The event name for control to update upon.\n     * @type {?|undefined}\n     */\n    AbstractControlOptions.prototype.updateOn;\n}\n/**\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * \\@publicApi\n * @abstract\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param {?} validator The function that determines the synchronous validity of this control.\n     * @param {?} asyncValidator The function that determines the asynchronous validity of this\n     * control.\n     */\n    constructor(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /**\n         * \\@internal\n         */\n        this._onCollectionChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @return True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /**\n         * \\@internal\n         */\n        this._onDisabledChange = [];\n    }\n    /**\n     * The parent control.\n     * @return {?}\n     */\n    get parent() { return this._parent; }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @return {?} True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() { return this.status === VALID; }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @return {?} True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() { return this.status === INVALID; }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @return {?} True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() { return this.status == PENDING; }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @return {?} True if the control is disabled, false otherwise.\n     */\n    get disabled() { return this.status === DISABLED; }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @return {?} True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     */\n    get enabled() { return this.status !== DISABLED; }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @return {?} True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() { return !this.pristine; }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     * @return {?}\n     */\n    get untouched() { return !this.touched; }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     * @return {?}\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing sync validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param {?} newValidator\n     * @return {?}\n     */\n    setValidators(newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    }\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * overwrites any existing async validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param {?} newValidator\n     * @return {?}\n     */\n    setAsyncValidators(newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    }\n    /**\n     * Empties out the sync validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @return {?}\n     */\n    clearValidators() { this.validator = null; }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @return {?}\n     */\n    clearAsyncValidators() { this.asyncValidator = null; }\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value.\n     *\n     * @see `markAsUntouched()` / `markAsDirty()` / `markAsPristine()`\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * @return {?}\n     */\n    markAsTouched(opts = {}) {\n        ((/** @type {?} */ (this))).touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see `markAsTouched()`\n     * @return {?}\n     */\n    markAllAsTouched() {\n        this.markAsTouched({ onlySelf: true });\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => control.markAllAsTouched()));\n    }\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @see `markAsTouched()` / `markAsDirty()` / `markAsPristine()`\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * @return {?}\n     */\n    markAsUntouched(opts = {}) {\n        ((/** @type {?} */ (this))).touched = false;\n        this._pendingTouched = false;\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => { control.markAsUntouched({ onlySelf: true }); }));\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's value is changed through the UI; compare `markAsTouched`.\n     *\n     * @see `markAsTouched()` / `markAsUntouched()` / `markAsPristine()`\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * @return {?}\n     */\n    markAsDirty(opts = {}) {\n        ((/** @type {?} */ (this))).pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    }\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @see `markAsTouched()` / `markAsUntouched()` / `markAsDirty()`\n     *\n     * @param {?=} opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false..\n     * @return {?}\n     */\n    markAsPristine(opts = {}) {\n        ((/** @type {?} */ (this))).pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => { control.markAsPristine({ onlySelf: true }); }));\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false..\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     * @return {?}\n     */\n    markAsPending(opts = {}) {\n        ((/** @type {?} */ (this))).status = PENDING;\n        if (opts.emitEvent !== false) {\n            ((/** @type {?} */ (this.statusChanges))).emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    }\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false..\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     * @return {?}\n     */\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        /** @type {?} */\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        ((/** @type {?} */ (this))).status = DISABLED;\n        ((/** @type {?} */ (this))).errors = null;\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => { control.disable(Object.assign(Object.assign({}, opts), { onlySelf: true })); }));\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            ((/** @type {?} */ (this.valueChanges))).emit(this.value);\n            ((/** @type {?} */ (this.statusChanges))).emit(this.status);\n        }\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((/**\n         * @param {?} changeFn\n         * @return {?}\n         */\n        (changeFn) => changeFn(true)));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @param {?=} opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false..\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     * @return {?}\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        /** @type {?} */\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        ((/** @type {?} */ (this))).status = VALID;\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => { control.enable(Object.assign(Object.assign({}, opts), { onlySelf: true })); }));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((/**\n         * @param {?} changeFn\n         * @return {?}\n         */\n        (changeFn) => changeFn(false)));\n    }\n    /**\n     * @private\n     * @param {?} opts\n     * @return {?}\n     */\n    _updateAncestors(opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine();\n            }\n            this._parent._updateTouched();\n        }\n    }\n    /**\n     * @param {?} parent Sets the parent of the control\n     * @return {?}\n     */\n    setParent(parent) { this._parent = parent; }\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param {?=} opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false..\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     * @return {?}\n     */\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            ((/** @type {?} */ (this))).errors = this._runValidator();\n            ((/** @type {?} */ (this))).status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            ((/** @type {?} */ (this.valueChanges))).emit(this.value);\n            ((/** @type {?} */ (this.statusChanges))).emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((/**\n         * @param {?} ctrl\n         * @return {?}\n         */\n        (ctrl) => ctrl._updateTreeValidity(opts)));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setInitialStatus() {\n        ((/** @type {?} */ (this))).status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    /**\n     * @private\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    _runAsyncValidator(emitEvent) {\n        if (this.asyncValidator) {\n            ((/** @type {?} */ (this))).status = PENDING;\n            /** @type {?} */\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe((/**\n                 * @param {?} errors\n                 * @return {?}\n                 */\n                (errors) => this.setErrors(errors, { emitEvent })));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * \\@usageNotes\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    setErrors(errors, opts = {}) {\n        ((/** @type {?} */ (this))).errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * \\@usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path A dot-delimited string or array of string/number values that define the path to the\n     * control.\n     *\n     * @return {?}\n     */\n    get(path) { return _find(this, path, '.'); }\n    /**\n     * \\@description\n     * Reports error data for the control with the given path.\n     *\n     * \\@usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @param {?} errorCode The code of the error to check\n     * @param {?=} path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @return {?} error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        /** @type {?} */\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * \\@description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * \\@usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @param {?} errorCode The code of the error to check\n     * @param {?=} path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @return {?} whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     * @return {?}\n     */\n    get root() {\n        /** @type {?} */\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    _updateControlsErrors(emitEvent) {\n        ((/** @type {?} */ (this))).status = this._calculateStatus();\n        if (emitEvent) {\n            ((/** @type {?} */ (this.statusChanges))).emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _initObservables() {\n        ((/** @type {?} */ (this))).valueChanges = new EventEmitter();\n        ((/** @type {?} */ (this))).statusChanges = new EventEmitter();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => control.status === status));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _anyControlsDirty() {\n        return this._anyControls((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => control.dirty));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _anyControlsTouched() {\n        return this._anyControls((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => control.touched));\n    }\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    _updatePristine(opts = {}) {\n        ((/** @type {?} */ (this))).pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    _updateTouched(opts = {}) {\n        ((/** @type {?} */ (this))).touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    _isBoxedValue(formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    }\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    _registerOnCollectionChange(fn) { this._onCollectionChange = fn; }\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && ((/** @type {?} */ (opts))).updateOn != null) {\n            this._updateOn = (/** @type {?} */ (((/** @type {?} */ (opts))).updateOn));\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * \\@internal\n     * @private\n     * @param {?=} onlySelf\n     * @return {?}\n     */\n    _parentMarkedDirty(onlySelf) {\n        /** @type {?} */\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && parentDirty && !this._parent._anyControlsDirty();\n    }\n}\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    AbstractControl.prototype._pendingDirty;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    AbstractControl.prototype._pendingTouched;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    AbstractControl.prototype._onCollectionChange;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    AbstractControl.prototype._updateOn;\n    /**\n     * @type {?}\n     * @private\n     */\n    AbstractControl.prototype._parent;\n    /**\n     * @type {?}\n     * @private\n     */\n    AbstractControl.prototype._asyncValidationSubscription;\n    /**\n     * The current value of the control.\n     *\n     * * For a `FormControl`, the current value.\n     * * For an enabled `FormGroup`, the values of enabled controls as an object\n     * with a key-value pair for each member of the group.\n     * * For a disabled `FormGroup`, the values of all controls as an object\n     * with a key-value pair for each member of the group.\n     * * For a `FormArray`, the values of enabled controls as an array.\n     *\n     * @type {?}\n     */\n    AbstractControl.prototype.value;\n    /**\n     * The validation status of the control. There are four possible\n     * validation status values:\n     *\n     * * **VALID**: This control has passed all validation checks.\n     * * **INVALID**: This control has failed at least one validation check.\n     * * **PENDING**: This control is in the midst of conducting a validation check.\n     * * **DISABLED**: This control is exempt from validation checks.\n     *\n     * These status values are mutually exclusive, so a control cannot be\n     * both valid AND invalid or invalid AND disabled.\n     * @type {?}\n     */\n    AbstractControl.prototype.status;\n    /**\n     * An object containing any errors generated by failing validation,\n     * or null if there are no errors.\n     * @type {?}\n     */\n    AbstractControl.prototype.errors;\n    /**\n     * A control is `pristine` if the user has not yet changed\n     * the value in the UI.\n     *\n     * \\@return True if the user has not yet changed the value in the UI; compare `dirty`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     * @type {?}\n     */\n    AbstractControl.prototype.pristine;\n    /**\n     * True if the control is marked as `touched`.\n     *\n     * A control is marked `touched` once the user has triggered\n     * a `blur` event on it.\n     * @type {?}\n     */\n    AbstractControl.prototype.touched;\n    /**\n     * A multicasting observable that emits an event every time the value of the control changes, in\n     * the UI or programmatically. It also emits an event each time you call enable() or disable()\n     * without passing along {emitEvent: false} as a function argument.\n     * @type {?}\n     */\n    AbstractControl.prototype.valueChanges;\n    /**\n     * A multicasting observable that emits an event every time the validation `status` of the control\n     * recalculates.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @type {?}\n     */\n    AbstractControl.prototype.statusChanges;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    AbstractControl.prototype._onDisabledChange;\n    /** @type {?} */\n    AbstractControl.prototype.validator;\n    /** @type {?} */\n    AbstractControl.prototype.asyncValidator;\n    /**\n     * Sets the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.setValue = function (value, options) { };\n    /**\n     * Patches the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.patchValue = function (value, options) { };\n    /**\n     * Resets the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.reset = function (value, options) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} cb\n     * @return {?}\n     */\n    AbstractControl.prototype._forEachChild = function (cb) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} condition\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControls = function (condition) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._allControlsDisabled = function () { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._syncPendingControls = function () { };\n}\n/**\n * Tracks the value and validation status of an individual form control.\n *\n * This is one of the three fundamental building blocks of Angular forms, along with\n * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that\n * implements most of the base functionality for accessing the value, validation status,\n * user interactions and events.\n *\n * @see `AbstractControl`\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see [Usage Notes](#usage-notes)\n *\n * \\@usageNotes\n *\n * ### Initializing Form Controls\n *\n * Instantiate a `FormControl`, with an initial value.\n *\n * ```ts\n * const control = new FormControl('some value');\n * console.log(control.value);     // 'some value'\n * ```\n *\n * The following example initializes the control with a form state object. The `value`\n * and `disabled` keys are required in this case.\n *\n * ```ts\n * const control = new FormControl({ value: 'n/a', disabled: true });\n * console.log(control.value);     // 'n/a'\n * console.log(control.status);    // 'DISABLED'\n * ```\n *\n * The following example initializes the control with a sync validator.\n *\n * ```ts\n * const control = new FormControl('', Validators.required);\n * console.log(control.value);      // ''\n * console.log(control.status);     // 'INVALID'\n * ```\n *\n * The following example initializes the control using an options object.\n *\n * ```ts\n * const control = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * ### Configure the control to update on a blur event\n *\n * Set the `updateOn` option to `'blur'` to update on the blur `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * ### Configure the control to update on a submit event\n *\n * Set the `updateOn` option to `'submit'` to update on a submit `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'submit' });\n * ```\n *\n * ### Reset the control back to an initial value\n *\n * You reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n *\n * ```ts\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n *\n * control.reset('Drew');\n *\n * console.log(control.value); // 'Drew'\n * ```\n *\n * ### Reset the control back to an initial value and disabled\n *\n * ```\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n * console.log(control.status); // 'VALID'\n *\n * control.reset({ value: 'Drew', disabled: true });\n *\n * console.log(control.value); // 'Drew'\n * console.log(control.status); // 'DISABLED'\n * ```\n *\n * \\@publicApi\n */\nclass FormControl extends AbstractControl {\n    /**\n     * Creates a new `FormControl` instance.\n     *\n     * @param {?=} formState Initializes the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(formState = null, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        /**\n         * \\@internal\n         */\n        this._onChange = [];\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        this._initObservables();\n    }\n    /**\n     * Sets a new value for the form control.\n     *\n     * @param {?} value The new value for the control.\n     * @param {?=} options Configuration options that determine how the control propagates changes\n     * and emits events when the value changes.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an\n     * `onChange` event to\n     * update the view.\n     * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an\n     * `ngModelChange`\n     * event to update the model.\n     *\n     * @return {?}\n     */\n    setValue(value, options = {}) {\n        ((/** @type {?} */ (this))).value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((/**\n             * @param {?} changeFn\n             * @return {?}\n             */\n            (changeFn) => changeFn(this.value, options.emitViewToModelChange !== false)));\n        }\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     *\n     * @see `setValue` for options\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    /**\n     * Resets the form control, marking it `pristine` and `untouched`, and setting\n     * the value to null.\n     *\n     * @param {?=} formState Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param {?=} options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     *\n     * @return {?}\n     */\n    reset(formState = null, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _updateValue() { }\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    _anyControls(condition) { return false; }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _allControlsDisabled() { return this.disabled; }\n    /**\n     * Register a listener for change events.\n     *\n     * @param {?} fn The method that is called when the value changes\n     * @return {?}\n     */\n    registerOnChange(fn) { this._onChange.push(fn); }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _clearChangeFns() {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Register a listener for disabled events.\n     *\n     * @param {?} fn The method that is called when the disabled status changes.\n     * @return {?}\n     */\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    _forEachChild(cb) { }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} formState\n     * @return {?}\n     */\n    _applyFormState(formState) {\n        if (this._isBoxedValue(formState)) {\n            ((/** @type {?} */ (this))).value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            ((/** @type {?} */ (this))).value = this._pendingValue = formState;\n        }\n    }\n}\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    FormControl.prototype._onChange;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    FormControl.prototype._pendingValue;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    FormControl.prototype._pendingChange;\n}\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormArray`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * \\@usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * \\@publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param {?} controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control.\n     * Use {\\@link FormGroup#addControl addControl} instead.\n     *\n     * @param {?} name The control name to register in the collection\n     * @param {?} control Provides the control for the given name\n     * @return {?}\n     */\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    /**\n     * Add a control to this group.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param {?} name The control name to add to the collection\n     * @param {?} control Provides the control for the given name\n     * @return {?}\n     */\n    addControl(name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group.\n     *\n     * @param {?} name The control name to remove from the collection\n     * @return {?}\n     */\n    removeControl(name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange((/**\n             * @return {?}\n             */\n            () => { }));\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param {?} name The control name to replace in the collection\n     * @param {?} control Provides the control for the given name\n     * @return {?}\n     */\n    setControl(name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange((/**\n             * @return {?}\n             */\n            () => { }));\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * Reports false for disabled controls. If you'd like to check for existence in the group\n     * only, use {\\@link AbstractControl#get get} instead.\n     *\n     * @param {?} controlName The control name to check for existence in the collection\n     *\n     * @return {?} false for disabled controls, true otherwise.\n     */\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * \\@usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param {?} value The new value for the control that matches the structure of the group.\n     * @param {?=} options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * @return {?}\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach((/**\n         * @param {?} name\n         * @return {?}\n         */\n        name => {\n            this._throwIfControlMissing(name);\n            this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        }));\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * \\@usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param {?} value The object that matches the structure of the group.\n     * @param {?=} options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     * @return {?}\n     */\n    patchValue(value, options = {}) {\n        Object.keys(value).forEach((/**\n         * @param {?} name\n         * @return {?}\n         */\n        name => {\n            if (this.controls[name]) {\n                this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        }));\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants are marked `pristine` and `untouched`, and\n     * the value of all descendants to null.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * \\@usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param {?=} options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @return {?}\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((/**\n         * @param {?} control\n         * @param {?} name\n         * @return {?}\n         */\n        (control, name) => {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        }));\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     * The `value` property is the best way to get the value of the group, because\n     * it excludes disabled controls in the `FormGroup`.\n     * @return {?}\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (/**\n         * @param {?} acc\n         * @param {?} control\n         * @param {?} name\n         * @return {?}\n         */\n        (acc, control, name) => {\n            acc[name] = control instanceof FormControl ? control.value : ((/** @type {?} */ (control))).getRawValue();\n            return acc;\n        }));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _syncPendingControls() {\n        /** @type {?} */\n        let subtreeUpdated = this._reduceChildren(false, (/**\n         * @param {?} updated\n         * @param {?} child\n         * @return {?}\n         */\n        (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }));\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    _throwIfControlMissing(name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(`\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.controls[name]) {\n            throw new Error(`Cannot find form control with name: ${name}.`);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach((/**\n         * @param {?} k\n         * @return {?}\n         */\n        k => cb(this.controls[k], k)));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _setUpControls() {\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        }));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _updateValue() { ((/** @type {?} */ (this))).value = this._reduceValue(); }\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    _anyControls(condition) {\n        /** @type {?} */\n        let res = false;\n        this._forEachChild((/**\n         * @param {?} control\n         * @param {?} name\n         * @return {?}\n         */\n        (control, name) => {\n            res = res || (this.contains(name) && condition(control));\n        }));\n        return res;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _reduceValue() {\n        return this._reduceChildren({}, (/**\n         * @param {?} acc\n         * @param {?} control\n         * @param {?} name\n         * @return {?}\n         */\n        (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        }));\n    }\n    /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    _reduceChildren(initValue, fn) {\n        /** @type {?} */\n        let res = initValue;\n        this._forEachChild((/**\n         * @param {?} control\n         * @param {?} name\n         * @return {?}\n         */\n        (control, name) => { res = fn(res, control, name); }));\n        return res;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((/**\n         * @param {?} control\n         * @param {?} name\n         * @return {?}\n         */\n        (control, name) => {\n            if (value[name] === undefined) {\n                throw new Error(`Must supply a value for form control with name: '${name}'.`);\n            }\n        }));\n    }\n}\nif (false) {\n    /** @type {?} */\n    FormGroup.prototype.controls;\n}\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormGroup`.\n *\n * \\@usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * \\@publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param {?} controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param {?} index Index in the array to retrieve the control\n     * @return {?}\n     */\n    at(index) { return this.controls[index]; }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param {?} control Form control to be inserted\n     * @return {?}\n     */\n    push(control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param {?} index Index in the array to insert the control\n     * @param {?} control Form control to be inserted\n     * @return {?}\n     */\n    insert(index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param {?} index Index in the array to remove the control\n     * @return {?}\n     */\n    removeAt(index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange((/**\n             * @return {?}\n             */\n            () => { }));\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param {?} index Index in the array to replace the control\n     * @param {?} control The `AbstractControl` control to replace the existing control\n     * @return {?}\n     */\n    setControl(index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange((/**\n             * @return {?}\n             */\n            () => { }));\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     * @return {?}\n     */\n    get length() { return this.controls.length; }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * \\@usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param {?} value Array of values for the controls\n     * @param {?=} options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     * @return {?}\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        value.forEach((/**\n         * @param {?} newValue\n         * @param {?} index\n         * @return {?}\n         */\n        (newValue, index) => {\n            this._throwIfControlMissing(index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        }));\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * \\@usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param {?} value Array of latest values for the controls\n     * @param {?=} options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     * @return {?}\n     */\n    patchValue(value, options = {}) {\n        value.forEach((/**\n         * @param {?} newValue\n         * @param {?} index\n         * @return {?}\n         */\n        (newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        }));\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * \\@usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param {?=} value Array of values for the controls\n     * @param {?=} options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     * @return {?}\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((/**\n         * @param {?} control\n         * @param {?} index\n         * @return {?}\n         */\n        (control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        }));\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     * For enabled controls only, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    getRawValue() {\n        return this.controls.map((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            return control instanceof FormControl ? control.value : ((/** @type {?} */ (control))).getRawValue();\n        }));\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * \\@usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     * @return {?}\n     */\n    clear() {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => control._registerOnCollectionChange((/**\n         * @return {?}\n         */\n        () => { }))));\n        this.controls.splice(0);\n        this.updateValueAndValidity();\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _syncPendingControls() {\n        /** @type {?} */\n        let subtreeUpdated = this.controls.reduce((/**\n         * @param {?} updated\n         * @param {?} child\n         * @return {?}\n         */\n        (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }), false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    _throwIfControlMissing(index) {\n        if (!this.controls.length) {\n            throw new Error(`\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.at(index)) {\n            throw new Error(`Cannot find form control at index ${index}`);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    _forEachChild(cb) {\n        this.controls.forEach((/**\n         * @param {?} control\n         * @param {?} index\n         * @return {?}\n         */\n        (control, index) => { cb(control, index); }));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _updateValue() {\n        ((/** @type {?} */ (this))).value =\n            this.controls.filter((/**\n             * @param {?} control\n             * @return {?}\n             */\n            (control) => control.enabled || this.disabled))\n                .map((/**\n             * @param {?} control\n             * @return {?}\n             */\n            (control) => control.value));\n    }\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    _anyControls(condition) {\n        return this.controls.some((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => control.enabled && condition(control)));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _setUpControls() {\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => this._registerControl(control)));\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((/**\n         * @param {?} control\n         * @param {?} i\n         * @return {?}\n         */\n        (control, i) => {\n            if (value[i] === undefined) {\n                throw new Error(`Must supply a value for form control at index: ${i}.`);\n            }\n        }));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    /**\n     * @private\n     * @param {?} control\n     * @return {?}\n     */\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FormArray.prototype.controls;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/ng_form.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgForm))\n};\nconst ɵ0 = /**\n * @return {?}\n */\n() => Promise.resolve(null);\n/** @type {?} */\nconst resolvedPromise = ((ɵ0))();\n/**\n * \\@description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * \\@usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NgForm extends ControlContainer {\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    constructor(validators, asyncValidators) {\n        super();\n        /**\n         * \\@description\n         * Returns whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        this._directives = [];\n        /**\n         * \\@description\n         * Event emitter for the \"ngSubmit\" event\n         */\n        this.ngSubmit = new EventEmitter();\n        this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /**\n     * \\@description\n     * Lifecycle method called after the view is initialized. For internal use only.\n     * @return {?}\n     */\n    ngAfterViewInit() { this._setUpdateStrategy(); }\n    /**\n     * \\@description\n     * The directive instance.\n     * @return {?}\n     */\n    get formDirective() { return this; }\n    /**\n     * \\@description\n     * The internal `FormGroup` instance.\n     * @return {?}\n     */\n    get control() { return this.form; }\n    /**\n     * \\@description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     * @return {?}\n     */\n    get path() { return []; }\n    /**\n     * \\@description\n     * Returns a map of the controls in this group.\n     * @return {?}\n     */\n    get controls() { return this.form.controls; }\n    /**\n     * \\@description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param {?} dir The `NgModel` directive instance.\n     * @return {?}\n     */\n    addControl(dir) {\n        resolvedPromise.then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = this._findContainer(dir.path);\n            ((/** @type {?} */ (dir))).control =\n                (/** @type {?} */ (container.registerControl(dir.name, dir.control)));\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.push(dir);\n        }));\n    }\n    /**\n     * \\@description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param {?} dir The `NgModel` directive instance.\n     * @return {?}\n     */\n    getControl(dir) { return (/** @type {?} */ (this.form.get(dir.path))); }\n    /**\n     * \\@description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param {?} dir The `NgModel` directive instance.\n     * @return {?}\n     */\n    removeControl(dir) {\n        resolvedPromise.then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            removeDir(this._directives, dir);\n        }));\n    }\n    /**\n     * \\@description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param {?} dir The `NgModelGroup` directive instance.\n     * @return {?}\n     */\n    addFormGroup(dir) {\n        resolvedPromise.then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = this._findContainer(dir.path);\n            /** @type {?} */\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        }));\n    }\n    /**\n     * \\@description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param {?} dir The `NgModelGroup` directive instance.\n     * @return {?}\n     */\n    removeFormGroup(dir) {\n        resolvedPromise.then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        }));\n    }\n    /**\n     * \\@description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param {?} dir The `NgModelGroup` directive instance.\n     * @return {?}\n     */\n    getFormGroup(dir) { return (/** @type {?} */ (this.form.get(dir.path))); }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param {?} dir The `NgControl` directive instance.\n     * @param {?} value The new value for the directive's control.\n     * @return {?}\n     */\n    updateModel(dir, value) {\n        resolvedPromise.then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const ctrl = (/** @type {?} */ (this.form.get((/** @type {?} */ (dir.path)))));\n            ctrl.setValue(value);\n        }));\n    }\n    /**\n     * \\@description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param {?} value The new value\n     * @return {?}\n     */\n    setValue(value) { this.control.setValue(value); }\n    /**\n     * \\@description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param {?} $event The \"submit\" event object\n     * @return {?}\n     */\n    onSubmit($event) {\n        ((/** @type {?} */ (this))).submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * \\@description\n     * Method called when the \"reset\" event is triggered on the form.\n     * @return {?}\n     */\n    onReset() { this.resetForm(); }\n    /**\n     * \\@description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param {?=} value The new value for the form.\n     * @return {?}\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        ((/** @type {?} */ (this))).submitted = false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    _findContainer(path) {\n        path.pop();\n        return path.length ? (/** @type {?} */ (this.form.get(path))) : this.form;\n    }\n}\nNgForm.ɵfac = function NgForm_Factory(t) { return new (t || NgForm)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgForm.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgForm, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]], hostBindings: function NgForm_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function NgForm_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nNgForm.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgForm.propDecorators = {\n    options: [{ type: Input, args: ['ngFormOptions',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgForm, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { options: [{\n            type: Input,\n            args: ['ngFormOptions']\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * Returns whether the form submission has been triggered.\n     * @type {?}\n     */\n    NgForm.prototype.submitted;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgForm.prototype._directives;\n    /**\n     * \\@description\n     * The `FormGroup` instance created for this form.\n     * @type {?}\n     */\n    NgForm.prototype.form;\n    /**\n     * \\@description\n     * Event emitter for the \"ngSubmit\" event\n     * @type {?}\n     */\n    NgForm.prototype.ngSubmit;\n    /**\n     * \\@description\n     * Tracks options for the `NgForm` instance.\n     *\n     * **updateOn**: Sets the default `updateOn` value for all child `NgModels` below it\n     * unless explicitly set by a child `NgModel` using `ngModelOptions`). Defaults to 'change'.\n     * Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     * @type {?}\n     */\n    NgForm.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/abstract_form_group_directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * \\@publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /**\n     * \\@description\n     * An internal callback method triggered on the instance after the inputs are set.\n     * Registers the group with its parent group.\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkParentType();\n        (/** @type {?} */ (this.formDirective)).addFormGroup(this);\n    }\n    /**\n     * \\@description\n     * An internal callback method triggered before the instance is destroyed.\n     * Removes the group from its parent group.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * \\@description\n     * The `FormGroup` bound to this directive.\n     * @return {?}\n     */\n    get control() { return (/** @type {?} */ (this.formDirective)).getFormGroup(this); }\n    /**\n     * \\@description\n     * The path to this group from the top-level directive.\n     * @return {?}\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * \\@description\n     * The top-level directive for this group if present, otherwise null.\n     * @return {?}\n     */\n    get formDirective() { return this._parent ? this._parent.formDirective : null; }\n    /**\n     * \\@description\n     * The synchronous validators registered with this group.\n     * @return {?}\n     */\n    get validator() { return composeValidators(this._validators); }\n    /**\n     * \\@description\n     * The async validators registered with this group.\n     * @return {?}\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _checkParentType() { }\n}\nAbstractFormGroupDirective.ɵfac = function AbstractFormGroupDirective_Factory(t) { return ɵAbstractFormGroupDirective_BaseFactory(t || AbstractFormGroupDirective); };\nAbstractFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractFormGroupDirective, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵAbstractFormGroupDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AbstractFormGroupDirective);\nif (false) {\n    /**\n     * \\@description\n     * The parent control for the group\n     *\n     * \\@internal\n     * @type {?}\n     */\n    AbstractFormGroupDirective.prototype._parent;\n    /**\n     * \\@description\n     * An array of synchronous validators for the group\n     *\n     * \\@internal\n     * @type {?}\n     */\n    AbstractFormGroupDirective.prototype._validators;\n    /**\n     * \\@description\n     * An array of async validators for the group\n     *\n     * \\@internal\n     * @type {?}\n     */\n    AbstractFormGroupDirective.prototype._asyncValidators;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/template_driven_errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TemplateDrivenErrors {\n    /**\n     * @return {?}\n     */\n    static modelParentException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${FormErrorExamples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${FormErrorExamples.ngModelWithFormGroup}`);\n    }\n    /**\n     * @return {?}\n     */\n    static formGroupNameException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n    /**\n     * @return {?}\n     */\n    static missingNameException() {\n        throw new Error(`If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n    }\n    /**\n     * @return {?}\n     */\n    static modelGroupParentException() {\n        throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/ng_model_group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgModelGroup))\n};\n/**\n * \\@description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * \\@usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    }\n}\nNgModelGroup.ɵfac = function NgModelGroup_Factory(t) { return new (t || NgModelGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 5), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgModelGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModelGroup, selectors: [[\"\", \"ngModelGroup\", \"\"]], inputs: { name: [\"ngModelGroup\", \"name\"] }, exportAs: [\"ngModelGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([modelGroupProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nNgModelGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgModelGroup.propDecorators = {\n    name: [{ type: Input, args: ['ngModelGroup',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModelGroup, [{\n        type: Directive,\n        args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['ngModelGroup']\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n     * to a key in the parent `NgForm`.\n     * @type {?}\n     */\n    NgModelGroup.prototype.name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/ng_model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgModel))\n};\nconst ɵ0$1 = /**\n * @return {?}\n */\n() => Promise.resolve(null);\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n * @type {?}\n */\nconst resolvedPromise$1 = ((ɵ0$1))();\n/**\n * \\@description\n * Creates a `FormControl` instance from a domain model and binds it\n * to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex: `#myVar=\"ngModel\"`).\n * You then access the control using the directive's `control` property,\n * but most properties used (like `valid` and `dirty`) fall through to the control anyway for direct access.\n * See a full list of properties directly available in `AbstractControlDirective`.\n *\n * @see `RadioControlValueAccessor`\n * @see `SelectControlValueAccessor`\n *\n * \\@usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel name attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. The name attribute is used\n * within a custom form component, and the name `\\@Input` property serves a different purpose.\n *\n * ```html\n * <form>\n *   <my-person-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-person-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NgModel extends NgControl {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    constructor(parent, validators, asyncValidators, valueAccessors) {\n        super();\n        this.control = new FormControl();\n        /**\n         * \\@internal\n         */\n        this._registered = false;\n        /**\n         * \\@description\n         * Event emitter for producing the `ngModelChange` event after\n         * the view model updates.\n         */\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /**\n     * \\@description\n     * Lifecycle method called before the directive's instance is destroyed. For internal\n     * use only.\n     * @return {?}\n     */\n    ngOnDestroy() { this.formDirective && this.formDirective.removeControl(this); }\n    /**\n     * \\@description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     * @return {?}\n     */\n    get path() {\n        return this._parent ? controlPath(this.name, this._parent) : [this.name];\n    }\n    /**\n     * \\@description\n     * The top-level directive for this control if present, otherwise null.\n     * @return {?}\n     */\n    get formDirective() { return this._parent ? this._parent.formDirective : null; }\n    /**\n     * \\@description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     * @return {?}\n     */\n    get validator() { return composeValidators(this._rawValidators); }\n    /**\n     * \\@description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     * @return {?}\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * \\@description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param {?} newValue The new value emitted by `ngModelChange`.\n     * @return {?}\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setUpStandalone() {\n        setUpControl(this.control, this);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkForErrors() {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _updateValue(value) {\n        resolvedPromise$1.then((/**\n         * @return {?}\n         */\n        () => { this.control.setValue(value, { emitViewToModelChange: false }); }));\n    }\n    /**\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _updateDisabled(changes) {\n        /** @type {?} */\n        const disabledValue = changes['isDisabled'].currentValue;\n        /** @type {?} */\n        const isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then((/**\n         * @return {?}\n         */\n        () => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n        }));\n    }\n}\nNgModel.ɵfac = function NgModel_Factory(t) { return new (t || NgModel)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 9), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10)); };\nNgModel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModel, selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]], inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngModel\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nNgModel.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] }\n];\nNgModel.propDecorators = {\n    name: [{ type: Input }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    options: [{ type: Input, args: ['ngModelOptions',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModel, [{\n        type: Directive,\n        args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], name: [{\n            type: Input\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }], options: [{\n            type: Input,\n            args: ['ngModelOptions']\n        }] }); })();\nif (false) {\n    /**\n     * \\@nodoc\n     * @type {?}\n     */\n    NgModel.ngAcceptInputType_isDisabled;\n    /** @type {?} */\n    NgModel.prototype.control;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    NgModel.prototype._registered;\n    /**\n     * \\@description\n     * Internal reference to the view model value.\n     * @type {?}\n     */\n    NgModel.prototype.viewModel;\n    /**\n     * \\@description\n     * Tracks the name bound to the directive. The parent form\n     * uses this name as a key to retrieve this control's value.\n     * @type {?}\n     */\n    NgModel.prototype.name;\n    /**\n     * \\@description\n     * Tracks whether the control is disabled.\n     * @type {?}\n     */\n    NgModel.prototype.isDisabled;\n    /**\n     * \\@description\n     * Tracks the value bound to this directive.\n     * @type {?}\n     */\n    NgModel.prototype.model;\n    /**\n     * \\@description\n     * Tracks the configuration options for this `ngModel` instance.\n     *\n     * **name**: An alternative to setting the name attribute on the form control element. See\n     * the [example](api/forms/NgModel#using-ngmodel-on-a-standalone-control) for using `NgModel`\n     * as a standalone control.\n     *\n     * **standalone**: When set to true, the `ngModel` will not register itself with its parent form,\n     * and acts as if it's not in the form. Defaults to false.\n     *\n     * **updateOn**: Defines the event upon which the form control value and validity update.\n     * Defaults to 'change'. Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     * @type {?}\n     */\n    NgModel.prototype.options;\n    /**\n     * \\@description\n     * Event emitter for producing the `ngModelChange` event after\n     * the view model updates.\n     * @type {?}\n     */\n    NgModel.prototype.update;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/ng_no_validate_directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * \\@publicApi\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n */\nclass ɵNgNoValidate {\n}\nɵNgNoValidate.ɵfac = function ɵNgNoValidate_Factory(t) { return new (t || ɵNgNoValidate)(); };\nɵNgNoValidate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgNoValidate, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]], hostAttrs: [\"novalidate\", \"\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgNoValidate, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/reactive_directives/form_control_directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n * @type {?}\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken('NgModelWithFormControlWarning');\n/** @type {?} */\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => FormControlDirective))\n};\n/**\n * \\@description\n * * Syncs a standalone `FormControl` instance to a form control element.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * \\@usageNotes\n *\n * ### Registering a single form control\n *\n * The following examples shows how to register a standalone control and set its value.\n *\n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * ### Use with ngModel\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and will be removed in a future version\n * of Angular.\n *\n * Now deprecated:\n *\n * ```html\n * <input [formControl]=\"control\" [(ngModel)]=\"value\">\n * ```\n *\n * ```ts\n * this.value = 'some value';\n * ```\n *\n * This has been deprecated for a few reasons. First, developers have found this pattern\n * confusing. It seems like the actual `ngModel` directive is being used, but in fact it's\n * an input/output property named `ngModel` on the reactive form directive that simply\n * approximates (some of) its behavior. Specifically, it allows getting/setting the value\n * and intercepting value events. However, some of `ngModel`'s other features - like\n * delaying updates with`ngModelOptions` or exporting the directive - simply don't work,\n * which has understandably caused some confusion.\n *\n * In addition, this pattern mixes template-driven and reactive forms strategies, which\n * we generally don't recommend because it doesn't take advantage of the full benefits of\n * either strategy. Setting the value in the template violates the template-agnostic\n * principles behind reactive forms, whereas adding a `FormControl`/`FormGroup` layer in\n * the class removes the convenience of defining forms in the template.\n *\n * To update your code before support is removed, you'll want to decide whether to stick\n * with reactive form directives (and get/set values using reactive forms patterns) or\n * switch over to template-driven directives.\n *\n * After (choice 1 - use reactive forms):\n *\n * ```html\n * <input [formControl]=\"control\">\n * ```\n *\n * ```ts\n * this.control.setValue('some value');\n * ```\n *\n * After (choice 2 - use template-driven forms):\n *\n * ```html\n * <input [(ngModel)]=\"value\">\n * ```\n *\n * ```ts\n * this.value = 'some value';\n * ```\n *\n * By default, when you use this pattern, you will see a deprecation warning once in dev\n * mode. You can choose to silence this warning by providing a config for\n * `ReactiveFormsModule` at import time:\n *\n * ```ts\n * imports: [\n *   ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'});\n * ]\n * ```\n *\n * Alternatively, you can choose to surface a separate warning for each instance of this\n * pattern with a config value of `\"always\"`. This may help to track down where in the code\n * the pattern is being used as the code is being updated.\n *\n * \\@ngModule ReactiveFormsModule\n * \\@publicApi\n */\nclass FormControlDirective extends NgControl {\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     * @param {?} _ngModelWarningConfig\n     */\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        /**\n         * @deprecated as of v6\n         */\n        this.update = new EventEmitter();\n        /**\n         * \\@description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n         *\n         * \\@internal\n         */\n        this._ngModelWarningSent = false;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * \\@description\n     * Triggers a warning that this input should not be used with reactive forms.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    set isDisabled(isDisabled) { ReactiveErrors.disabledAttrWarning(); }\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && (/** @type {?} */ (this.valueAccessor)).setDisabledState) {\n                (/** @type {?} */ ((/** @type {?} */ (this.valueAccessor)).setDisabledState))(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /**\n     * \\@description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     * @return {?}\n     */\n    get path() { return []; }\n    /**\n     * \\@description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     * @return {?}\n     */\n    get validator() { return composeValidators(this._rawValidators); }\n    /**\n     * \\@description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     * @return {?}\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * \\@description\n     * The `FormControl` bound to this directive.\n     * @return {?}\n     */\n    get control() { return this.form; }\n    /**\n     * \\@description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param {?} newValue The new value for the view model.\n     * @return {?}\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n}\nFormControlDirective.ɵfac = function FormControlDirective_Factory(t) { return new (t || FormControlDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlDirective, selectors: [[\"\", \"formControl\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], form: [\"formControl\", \"form\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * \\@description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlDirective. Used to support warning config of \"once\".\n *\n * \\@internal\n */\nFormControlDirective._ngModelWarningSentOnce = false;\n/** @nocollapse */\nFormControlDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlDirective.propDecorators = {\n    form: [{ type: Input, args: ['formControl',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlDirective, [{\n        type: Directive,\n        args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], form: [{\n            type: Input,\n            args: ['formControl']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * \\@internal\n     * @type {?}\n     */\n    FormControlDirective._ngModelWarningSentOnce;\n    /**\n     * \\@description\n     * Internal reference to the view model value.\n     * @type {?}\n     */\n    FormControlDirective.prototype.viewModel;\n    /**\n     * \\@description\n     * Tracks the `FormControl` instance bound to the directive.\n     * @type {?}\n     */\n    FormControlDirective.prototype.form;\n    /**\n     * @deprecated as of v6\n     * @type {?}\n     */\n    FormControlDirective.prototype.model;\n    /**\n     * @deprecated as of v6\n     * @type {?}\n     */\n    FormControlDirective.prototype.update;\n    /**\n     * \\@description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n     *\n     * \\@internal\n     * @type {?}\n     */\n    FormControlDirective.prototype._ngModelWarningSent;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormControlDirective.prototype._ngModelWarningConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/reactive_directives/form_group_directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => FormGroupDirective))\n};\n/**\n * \\@description\n *\n * Binds an existing `FormGroup` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * \\@ngModule ReactiveFormsModule\n * \\@publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n    /**\n     * @param {?} _validators\n     * @param {?} _asyncValidators\n     */\n    constructor(_validators, _asyncValidators) {\n        super();\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        /**\n         * \\@description\n         * Reports whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        /**\n         * \\@description\n         * Tracks the list of added `FormControlName` instances\n         */\n        this.directives = [];\n        /**\n         * \\@description\n         * Tracks the `FormGroup` bound to this directive.\n         */\n        this.form = (/** @type {?} */ (null));\n        /**\n         * \\@description\n         * Emits an event when the form submission has been triggered.\n         */\n        this.ngSubmit = new EventEmitter();\n    }\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    }\n    /**\n     * \\@description\n     * Returns this directive's instance.\n     * @return {?}\n     */\n    get formDirective() { return this; }\n    /**\n     * \\@description\n     * Returns the `FormGroup` bound to this directive.\n     * @return {?}\n     */\n    get control() { return this.form; }\n    /**\n     * \\@description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     * @return {?}\n     */\n    get path() { return []; }\n    /**\n     * \\@description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param {?} dir The `FormControlName` directive instance.\n     * @return {?}\n     */\n    addControl(dir) {\n        /** @type {?} */\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * \\@description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param {?} dir The `FormControlName` directive instance.\n     * @return {?}\n     */\n    getControl(dir) { return (/** @type {?} */ (this.form.get(dir.path))); }\n    /**\n     * \\@description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param {?} dir The `FormControlName` directive instance.\n     * @return {?}\n     */\n    removeControl(dir) { removeDir(this.directives, dir); }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param {?} dir The `FormGroupName` directive instance.\n     * @return {?}\n     */\n    addFormGroup(dir) {\n        /** @type {?} */\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * No-op method to remove the form group.\n     *\n     * @param {?} dir The `FormGroupName` directive instance.\n     * @return {?}\n     */\n    removeFormGroup(dir) { }\n    /**\n     * \\@description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param {?} dir The `FormGroupName` directive instance.\n     * @return {?}\n     */\n    getFormGroup(dir) { return (/** @type {?} */ (this.form.get(dir.path))); }\n    /**\n     * Adds a new `FormArrayName` directive instance to the form.\n     *\n     * @param {?} dir The `FormArrayName` directive instance.\n     * @return {?}\n     */\n    addFormArray(dir) {\n        /** @type {?} */\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * No-op method to remove the form array.\n     *\n     * @param {?} dir The `FormArrayName` directive instance.\n     * @return {?}\n     */\n    removeFormArray(dir) { }\n    /**\n     * \\@description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param {?} dir The `FormArrayName` directive instance.\n     * @return {?}\n     */\n    getFormArray(dir) { return (/** @type {?} */ (this.form.get(dir.path))); }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param {?} dir The `FormControlName` directive instance.\n     * @param {?} value The new value for the directive's control.\n     * @return {?}\n     */\n    updateModel(dir, value) {\n        /** @type {?} */\n        const ctrl = (/** @type {?} */ (this.form.get(dir.path)));\n        ctrl.setValue(value);\n    }\n    /**\n     * \\@description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param {?} $event The \"submit\" event object\n     * @return {?}\n     */\n    onSubmit($event) {\n        ((/** @type {?} */ (this))).submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * \\@description\n     * Method called when the \"reset\" event is triggered on the form.\n     * @return {?}\n     */\n    onReset() { this.resetForm(); }\n    /**\n     * \\@description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param {?=} value The new value for the form.\n     * @return {?}\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        ((/** @type {?} */ (this))).submitted = false;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _updateDomValue() {\n        this.directives.forEach((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => {\n            /** @type {?} */\n            const newCtrl = this.form.get(dir.path);\n            if (dir.control !== newCtrl) {\n                cleanUpControl(dir.control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                ((/** @type {?} */ (dir))).control = newCtrl;\n            }\n        }));\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange((/**\n         * @return {?}\n         */\n        () => this._updateDomValue()));\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange((/**\n             * @return {?}\n             */\n            () => { }));\n        this._oldForm = this.form;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateValidators() {\n        /** @type {?} */\n        const sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([(/** @type {?} */ (this.form.validator)), (/** @type {?} */ (sync))]);\n        /** @type {?} */\n        const async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([(/** @type {?} */ (this.form.asyncValidator)), (/** @type {?} */ (async))]);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkFormPresent() {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    }\n}\nFormGroupDirective.ɵfac = function FormGroupDirective_Factory(t) { return new (t || FormGroupDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupDirective, selectors: [[\"\", \"formGroup\", \"\"]], hostBindings: function FormGroupDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nFormGroupDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupDirective.propDecorators = {\n    form: [{ type: Input, args: ['formGroup',] }],\n    ngSubmit: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { form: [{\n            type: Input,\n            args: ['formGroup']\n        }], ngSubmit: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * Reports whether the form submission has been triggered.\n     * @type {?}\n     */\n    FormGroupDirective.prototype.submitted;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormGroupDirective.prototype._oldForm;\n    /**\n     * \\@description\n     * Tracks the list of added `FormControlName` instances\n     * @type {?}\n     */\n    FormGroupDirective.prototype.directives;\n    /**\n     * \\@description\n     * Tracks the `FormGroup` bound to this directive.\n     * @type {?}\n     */\n    FormGroupDirective.prototype.form;\n    /**\n     * \\@description\n     * Emits an event when the form submission has been triggered.\n     * @type {?}\n     */\n    FormGroupDirective.prototype.ngSubmit;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormGroupDirective.prototype._validators;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormGroupDirective.prototype._asyncValidators;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/reactive_directives/form_group_name.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => FormGroupName))\n};\n/**\n * \\@description\n *\n * Syncs a nested `FormGroup` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` to link, and\n * looks for a `FormGroup` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * \\@usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the {\\@link AbstractControl#get get} method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the {\\@link AbstractControl#get get} method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * \\@ngModule ReactiveFormsModule\n * \\@publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    }\n}\nFormGroupName.ɵfac = function FormGroupName_Factory(t) { return new (t || FormGroupName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupName, selectors: [[\"\", \"formGroupName\", \"\"]], inputs: { name: [\"formGroupName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formGroupNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nFormGroupName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupName.propDecorators = {\n    name: [{ type: Input, args: ['formGroupName',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupName, [{\n        type: Directive,\n        args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formGroupName']\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form groups to be bound\n     * to indices when iterating over groups in a `FormArray`.\n     * @type {?}\n     */\n    FormGroupName.prototype.name;\n}\n/** @type {?} */\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => FormArrayName))\n};\n/**\n * \\@description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * \\@ngModule ReactiveFormsModule\n * \\@publicApi\n */\nclass FormArrayName extends ControlContainer {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     *\n     * @throws If the directive does not have a valid parent.\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkParentType();\n        (/** @type {?} */ (this.formDirective)).addFormArray(this);\n    }\n    /**\n     * \\@description\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    }\n    /**\n     * \\@description\n     * The `FormArray` bound to this directive.\n     * @return {?}\n     */\n    get control() { return (/** @type {?} */ (this.formDirective)).getFormArray(this); }\n    /**\n     * \\@description\n     * The top-level directive for this group if present, otherwise null.\n     * @return {?}\n     */\n    get formDirective() {\n        return this._parent ? (/** @type {?} */ (this._parent.formDirective)) : null;\n    }\n    /**\n     * \\@description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     * @return {?}\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * \\@description\n     * Synchronous validator function composed of all the synchronous validators registered with this\n     * directive.\n     * @return {?}\n     */\n    get validator() { return composeValidators(this._validators); }\n    /**\n     * \\@description\n     * Async validator function composed of all the async validators registered with this directive.\n     * @return {?}\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    }\n}\nFormArrayName.ɵfac = function FormArrayName_Factory(t) { return new (t || FormArrayName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormArrayName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormArrayName, selectors: [[\"\", \"formArrayName\", \"\"]], inputs: { name: [\"formArrayName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formArrayNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nFormArrayName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormArrayName.propDecorators = {\n    name: [{ type: Input, args: ['formArrayName',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormArrayName, [{\n        type: Directive,\n        args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formArrayName']\n        }] }); })();\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    FormArrayName.prototype._parent;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    FormArrayName.prototype._validators;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    FormArrayName.prototype._asyncValidators;\n    /**\n     * \\@description\n     * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form arrays to be bound\n     * to indices when iterating over arrays in a `FormArray`.\n     * @type {?}\n     */\n    FormArrayName.prototype.name;\n}\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/reactive_directives/form_control_name.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => FormControlName))\n};\n/**\n * \\@description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * \\@usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and will be removed in a future\n * version of Angular.\n *\n * Now deprecated:\n *\n * ```html\n * <form [formGroup]=\"form\">\n *   <input formControlName=\"first\" [(ngModel)]=\"value\">\n * </form>\n * ```\n *\n * ```ts\n * this.value = 'some value';\n * ```\n *\n * This has been deprecated for a few reasons. First, developers have found this pattern\n * confusing. It seems like the actual `ngModel` directive is being used, but in fact it's\n * an input/output property named `ngModel` on the reactive form directive that simply\n * approximates (some of) its behavior. Specifically, it allows getting/setting the value\n * and intercepting value events. However, some of `ngModel`'s other features - like\n * delaying updates with `ngModelOptions` or exporting the directive - simply don't work,\n * which has understandably caused some confusion.\n *\n * In addition, this pattern mixes template-driven and reactive forms strategies, which\n * we generally don't recommend because it doesn't take advantage of the full benefits of\n * either strategy. Setting the value in the template violates the template-agnostic\n * principles behind reactive forms, whereas adding a `FormControl`/`FormGroup` layer in\n * the class removes the convenience of defining forms in the template.\n *\n * To update your code before support is removed, you'll want to decide whether to stick with\n * reactive form directives (and get/set values using reactive forms patterns) or switch over to\n * template-driven directives.\n *\n * After (choice 1 - use reactive forms):\n *\n * ```html\n * <form [formGroup]=\"form\">\n *   <input formControlName=\"first\">\n * </form>\n * ```\n *\n * ```ts\n * this.form.get('first').setValue('some value');\n * ```\n *\n * After (choice 2 - use template-driven forms):\n *\n * ```html\n * <input [(ngModel)]=\"value\">\n * ```\n *\n * ```ts\n * this.value = 'some value';\n * ```\n *\n * By default, when you use this pattern, you will see a deprecation warning once in dev\n * mode. You can choose to silence this warning by providing a config for\n * `ReactiveFormsModule` at import time:\n *\n * ```ts\n * imports: [\n *   ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'})\n * ]\n * ```\n *\n * Alternatively, you can choose to surface a separate warning for each instance of this\n * pattern with a config value of `\"always\"`. This may help to track down where in the code\n * the pattern is being used as the code is being updated.\n *\n * \\@ngModule ReactiveFormsModule\n * \\@publicApi\n */\nclass FormControlName extends NgControl {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     * @param {?} _ngModelWarningConfig\n     */\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._added = false;\n        /**\n         * @deprecated as of v6\n         */\n        this.update = new EventEmitter();\n        /**\n         * \\@description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlName instance. Used to support warning config of \"always\".\n         *\n         * \\@internal\n         */\n        this._ngModelWarningSent = false;\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * \\@description\n     * Triggers a warning that this input should not be used with reactive forms.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    set isDisabled(isDisabled) { ReactiveErrors.disabledAttrWarning(); }\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /**\n     * \\@description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * \\@description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param {?} newValue The new value for the view model.\n     * @return {?}\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * \\@description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     * @return {?}\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), (/** @type {?} */ (this._parent)));\n    }\n    /**\n     * \\@description\n     * The top-level directive for this group if present, otherwise null.\n     * @return {?}\n     */\n    get formDirective() { return this._parent ? this._parent.formDirective : null; }\n    /**\n     * \\@description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     * @return {?}\n     */\n    get validator() { return composeValidators(this._rawValidators); }\n    /**\n     * \\@description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     * @return {?}\n     */\n    get asyncValidator() {\n        return (/** @type {?} */ (composeAsyncValidators(this._rawAsyncValidators)));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkParentType() {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setUpControl() {\n        this._checkParentType();\n        ((/** @type {?} */ (this))).control = this.formDirective.addControl(this);\n        if (this.control.disabled && (/** @type {?} */ (this.valueAccessor)).setDisabledState) {\n            (/** @type {?} */ ((/** @type {?} */ (this.valueAccessor)).setDisabledState))(true);\n        }\n        this._added = true;\n    }\n}\nFormControlName.ɵfac = function FormControlName_Factory(t) { return new (t || FormControlName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlName, selectors: [[\"\", \"formControlName\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], name: [\"formControlName\", \"name\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([controlNameBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * \\@description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlName. Used to support warning config of \"once\".\n *\n * \\@internal\n */\nFormControlName._ngModelWarningSentOnce = false;\n/** @nocollapse */\nFormControlName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlName.propDecorators = {\n    name: [{ type: Input, args: ['formControlName',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlName, [{\n        type: Directive,\n        args: [{ selector: '[formControlName]', providers: [controlNameBinding] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], name: [{\n            type: Input,\n            args: ['formControlName']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * \\@internal\n     * @type {?}\n     */\n    FormControlName._ngModelWarningSentOnce;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormControlName.prototype._added;\n    /**\n     * \\@description\n     * Internal reference to the view model value.\n     * \\@internal\n     * @type {?}\n     */\n    FormControlName.prototype.viewModel;\n    /**\n     * \\@description\n     * Tracks the `FormControl` instance bound to the directive.\n     * @type {?}\n     */\n    FormControlName.prototype.control;\n    /**\n     * \\@description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form controls to be bound\n     * to indices when iterating over controls in a `FormArray`.\n     * @type {?}\n     */\n    FormControlName.prototype.name;\n    /**\n     * @deprecated as of v6\n     * @type {?}\n     */\n    FormControlName.prototype.model;\n    /**\n     * @deprecated as of v6\n     * @type {?}\n     */\n    FormControlName.prototype.update;\n    /**\n     * \\@description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular FormControlName instance. Used to support warning config of \"always\".\n     *\n     * \\@internal\n     * @type {?}\n     */\n    FormControlName.prototype._ngModelWarningSent;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormControlName.prototype._ngModelWarningConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/validators.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * An interface implemented by classes that perform synchronous validation.\n *\n * \\@usageNotes\n *\n * ### Provide a custom validator\n *\n * The following example implements the `Validator` interface to create a\n * validator directive with a custom error key.\n *\n * ```typescript\n * \\@Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors|null {\n *     return {'custom': true};\n *   }\n * }\n * ```\n *\n * \\@publicApi\n * @record\n */\nfunction Validator() { }\nif (false) {\n    /**\n     * \\@description\n     * Method that performs synchronous validation against the provided control.\n     *\n     * @param {?} control The control to validate against.\n     *\n     * @return {?} A map of validation errors if validation fails,\n     * otherwise null.\n     */\n    Validator.prototype.validate = function (control) { };\n    /**\n     * \\@description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    Validator.prototype.registerOnValidatorChange = function (fn) { };\n}\n/**\n * \\@description\n * An interface implemented by classes that perform asynchronous validation.\n *\n * \\@usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * import { of as observableOf } from 'rxjs';\n *\n * \\@Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Observable<ValidationErrors|null> {\n *     return observableOf({'custom': true});\n *   }\n * }\n * ```\n *\n * \\@publicApi\n * @record\n */\nfunction AsyncValidator() { }\nif (false) {\n    /**\n     * \\@description\n     * Method that performs async validation against the provided control.\n     *\n     * @param {?} control The control to validate against.\n     *\n     * @return {?} A promise or observable that resolves a map of validation errors\n     * if validation fails, otherwise null.\n     */\n    AsyncValidator.prototype.validate = function (control) { };\n}\n/**\n * \\@description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n * @type {?}\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => RequiredValidator)),\n    multi: true\n};\n/**\n * \\@description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n * @type {?}\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => CheckboxRequiredValidator)),\n    multi: true\n};\n/**\n * \\@description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * \\@usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n * \\@publicApi\n */\nclass RequiredValidator {\n    /**\n     * \\@description\n     * Tracks changes to the required attribute bound to this directive.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = value != null && value !== false && `${value}` !== 'false';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * \\@description\n     * Method that validates whether the control is empty.\n     * Returns the validation result if enabled, otherwise null.\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this.required ? Validators.required(control) : null;\n    }\n    /**\n     * \\@description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) { this._onChange = fn; }\n}\nRequiredValidator.ɵfac = function RequiredValidator_Factory(t) { return new (t || RequiredValidator)(); };\nRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RequiredValidator, selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]], hostVars: 1, hostBindings: function RequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, inputs: { required: \"required\" }, features: [ɵngcc0.ɵɵProvidersFeature([REQUIRED_VALIDATOR])] });\nRequiredValidator.propDecorators = {\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], null, { required: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RequiredValidator.prototype._required;\n    /**\n     * @type {?}\n     * @private\n     */\n    RequiredValidator.prototype._onChange;\n}\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * \\@usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * \\@publicApi\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    /**\n     * \\@description\n     * Method that validates whether or not the checkbox has been checked.\n     * Returns the validation result if enabled, otherwise null.\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this.required ? Validators.requiredTrue(control) : null;\n    }\n}\nCheckboxRequiredValidator.ɵfac = function CheckboxRequiredValidator_Factory(t) { return ɵCheckboxRequiredValidator_BaseFactory(t || CheckboxRequiredValidator); };\nCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxRequiredValidator, selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], null, null); })();\n/**\n * \\@description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n * @type {?}\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => EmailValidator)),\n    multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * \\@usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * \\@publicApi\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass EmailValidator {\n    /**\n     * \\@description\n     * Tracks changes to the email attribute bound to this directive.\n     * @param {?} value\n     * @return {?}\n     */\n    set email(value) {\n        this._enabled = value === '' || value === true || value === 'true';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * \\@description\n     * Method that validates whether an email address is valid.\n     * Returns the validation result if enabled, otherwise null.\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this._enabled ? Validators.email(control) : null;\n    }\n    /**\n     * \\@description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) { this._onChange = fn; }\n}\nEmailValidator.ɵfac = function EmailValidator_Factory(t) { return new (t || EmailValidator)(); };\nEmailValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EmailValidator, selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]], inputs: { email: \"email\" }, features: [ɵngcc0.ɵɵProvidersFeature([EMAIL_VALIDATOR])] });\nEmailValidator.propDecorators = {\n    email: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmailValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            }]\n    }], null, { email: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    EmailValidator.prototype._enabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    EmailValidator.prototype._onChange;\n}\n/**\n * \\@description\n * A function that receives a control and synchronously returns a map of\n * validation errors if present, otherwise null.\n *\n * \\@publicApi\n * @record\n */\nfunction ValidatorFn() { }\n/**\n * \\@description\n * A function that receives a control and returns a Promise or observable\n * that emits validation errors if present, otherwise null.\n *\n * \\@publicApi\n * @record\n */\nfunction AsyncValidatorFn() { }\n/**\n * \\@description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n * @type {?}\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MinLengthValidator)),\n    multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * \\@usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass MinLengthValidator {\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * \\@description\n     * Method that validates whether the value meets a minimum length\n     * requirement. Returns the validation result if enabled, otherwise null.\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this.minlength == null ? null : this._validator(control);\n    }\n    /**\n     * \\@description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) { this._onChange = fn; }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createValidator() {\n        this._validator = Validators.minLength(typeof this.minlength === 'number' ? this.minlength : parseInt(this.minlength, 10));\n    }\n}\nMinLengthValidator.ɵfac = function MinLengthValidator_Factory(t) { return new (t || MinLengthValidator)(); };\nMinLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MinLengthValidator, selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MinLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"minlength\", ctx.minlength ? ctx.minlength : null);\n    } }, inputs: { minlength: \"minlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMinLengthValidator.propDecorators = {\n    minlength: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MinLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            }]\n    }], null, { minlength: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MinLengthValidator.prototype._validator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MinLengthValidator.prototype._onChange;\n    /**\n     * \\@description\n     * Tracks changes to the the minimum length bound to this directive.\n     * @type {?}\n     */\n    MinLengthValidator.prototype.minlength;\n}\n/**\n * \\@description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n * @type {?}\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MaxLengthValidator)),\n    multi: true\n};\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * \\@usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass MaxLengthValidator {\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * \\@description\n     * Method that validates whether the value exceeds\n     * the maximum length requirement.\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this.maxlength != null ? this._validator(control) : null;\n    }\n    /**\n     * \\@description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) { this._onChange = fn; }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createValidator() {\n        this._validator = Validators.maxLength(typeof this.maxlength === 'number' ? this.maxlength : parseInt(this.maxlength, 10));\n    }\n}\nMaxLengthValidator.ɵfac = function MaxLengthValidator_Factory(t) { return new (t || MaxLengthValidator)(); };\nMaxLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MaxLengthValidator, selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"maxlength\", ctx.maxlength ? ctx.maxlength : null);\n    } }, inputs: { maxlength: \"maxlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMaxLengthValidator.propDecorators = {\n    maxlength: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MaxLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            }]\n    }], null, { maxlength: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MaxLengthValidator.prototype._validator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaxLengthValidator.prototype._onChange;\n    /**\n     * \\@description\n     * Tracks changes to the the maximum length bound to this directive.\n     * @type {?}\n     */\n    MaxLengthValidator.prototype.maxlength;\n}\n/**\n * \\@description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n * @type {?}\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => PatternValidator)),\n    multi: true\n};\n/**\n * \\@description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * \\@usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass PatternValidator {\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * \\@description\n     * Method that validates whether the value matches the\n     * the pattern requirement.\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) { return this._validator(control); }\n    /**\n     * \\@description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) { this._onChange = fn; }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createValidator() { this._validator = Validators.pattern(this.pattern); }\n}\nPatternValidator.ɵfac = function PatternValidator_Factory(t) { return new (t || PatternValidator)(); };\nPatternValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PatternValidator, selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function PatternValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"pattern\", ctx.pattern ? ctx.pattern : null);\n    } }, inputs: { pattern: \"pattern\" }, features: [ɵngcc0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nPatternValidator.propDecorators = {\n    pattern: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PatternValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            }]\n    }], null, { pattern: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PatternValidator.prototype._validator;\n    /**\n     * @type {?}\n     * @private\n     */\n    PatternValidator.prototype._onChange;\n    /**\n     * \\@description\n     * Tracks changes to the pattern bound to this directive.\n     * @type {?}\n     */\n    PatternValidator.prototype.pattern;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\n/** @type {?} */\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n/** @type {?} */\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n}\nɵInternalFormsSharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ɵInternalFormsSharedModule });\nɵInternalFormsSharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ɵInternalFormsSharedModule_Factory(t) { return new (t || ɵInternalFormsSharedModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ɵInternalFormsSharedModule, { declarations: [ɵNgNoValidate,\n        NgSelectOption,\n        ɵNgSelectMultipleOption,\n        DefaultValueAccessor,\n        NumberValueAccessor,\n        RangeValueAccessor,\n        CheckboxControlValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n        NgControlStatus,\n        NgControlStatusGroup,\n        RequiredValidator,\n        MinLengthValidator,\n        MaxLengthValidator,\n        PatternValidator,\n        CheckboxRequiredValidator,\n        EmailValidator], exports: [ɵNgNoValidate,\n        NgSelectOption,\n        ɵNgSelectMultipleOption,\n        DefaultValueAccessor,\n        NumberValueAccessor,\n        RangeValueAccessor,\n        CheckboxControlValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n        NgControlStatus,\n        NgControlStatusGroup,\n        RequiredValidator,\n        MinLengthValidator,\n        MaxLengthValidator,\n        PatternValidator,\n        CheckboxRequiredValidator,\n        EmailValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵInternalFormsSharedModule, [{\n        type: NgModule,\n        args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/form_builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} options\n * @return {?}\n */\nfunction isAbstractControlOptions(options) {\n    return ((/** @type {?} */ (options))).asyncValidators !== undefined ||\n        ((/** @type {?} */ (options))).validators !== undefined ||\n        ((/** @type {?} */ (options))).updateOn !== undefined;\n}\n/**\n * \\@description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a `FormControl`,\n * `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to build complex\n * forms.\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n * \\@publicApi\n */\nclass FormBuilder {\n    /**\n     * \\@description\n     * Construct a new `FormGroup` instance.\n     *\n     * @param {?} controlsConfig A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param {?=} options Configuration options object for the `FormGroup`. The object can\n     * have two shapes:\n     *\n     * 1) `AbstractControlOptions` object (preferred), which consists of:\n     * * `validators`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidators`: A single async validator or array of async validator functions\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur' |\n     * submit')\n     *\n     * 2) Legacy configuration object, which consists of:\n     * * `validator`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidator`: A single async validator or array of async validator functions\n     *\n     * @return {?}\n     */\n    group(controlsConfig, options = null) {\n        /** @type {?} */\n        const controls = this._reduceControls(controlsConfig);\n        /** @type {?} */\n        let validators = null;\n        /** @type {?} */\n        let asyncValidators = null;\n        /** @type {?} */\n        let updateOn = undefined;\n        if (options != null) {\n            if (isAbstractControlOptions(options)) {\n                // `options` are `AbstractControlOptions`\n                validators = options.validators != null ? options.validators : null;\n                asyncValidators = options.asyncValidators != null ? options.asyncValidators : null;\n                updateOn = options.updateOn != null ? options.updateOn : undefined;\n            }\n            else {\n                // `options` are legacy form group options\n                validators = options['validator'] != null ? options['validator'] : null;\n                asyncValidators = options['asyncValidator'] != null ? options['asyncValidator'] : null;\n            }\n        }\n        return new FormGroup(controls, { asyncValidators, updateOn, validators });\n    }\n    /**\n     * \\@description\n     * Construct a new `FormControl` with the given state, validators and options.\n     *\n     * \\@usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     * @param {?} formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @return {?}\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options.\n     *\n     * @param {?} controlsConfig An array of child controls or control configs. Each\n     * child control is given an index when it is registered.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator\n     * functions.\n     * @return {?}\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n        /** @type {?} */\n        const controls = controlsConfig.map((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => this._createControl(c)));\n        return new FormArray(controls, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    _reduceControls(controlsConfig) {\n        /** @type {?} */\n        const controls = {};\n        Object.keys(controlsConfig).forEach((/**\n         * @param {?} controlName\n         * @return {?}\n         */\n        controlName => {\n            controls[controlName] = this._createControl(controlsConfig[controlName]);\n        }));\n        return controls;\n    }\n    /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    _createControl(controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            /** @type {?} */\n            const value = controlConfig[0];\n            /** @type {?} */\n            const validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            /** @type {?} */\n            const asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    }\n}\nFormBuilder.ɵfac = function FormBuilder_Factory(t) { return new (t || FormBuilder)(); };\nFormBuilder.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FormBuilder, factory: FormBuilder.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormBuilder, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@publicApi\n * @type {?}\n */\nconst VERSION = new Version('9.0.7');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/form_providers.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Guide](/guide/forms)\n *\n * \\@publicApi\n */\nclass FormsModule {\n}\nFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormsModule });\nFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormsModule_Factory(t) { return new (t || FormsModule)(); }, providers: [RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormsModule, { declarations: [NgModel,\n        NgModelGroup,\n        NgForm], exports: [ɵInternalFormsSharedModule,\n        NgModel,\n        NgModelGroup,\n        NgForm] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n * @see [Forms](guide/reactive-forms)\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n * \\@publicApi\n */\nclass ReactiveFormsModule {\n    /**\n     * \\@description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param {?} opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     * @return {?}\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [{\n                    provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n                    useValue: opts.warnOnNgModelWithFormControl\n                }]\n        };\n    }\n}\nReactiveFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ReactiveFormsModule });\nReactiveFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ReactiveFormsModule_Factory(t) { return new (t || ReactiveFormsModule)(); }, providers: [FormBuilder, RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ReactiveFormsModule, { declarations: [FormControlDirective,\n        FormGroupDirective,\n        FormControlName,\n        FormGroupName,\n        FormArrayName], exports: [ɵInternalFormsSharedModule,\n        FormControlDirective,\n        FormGroupDirective,\n        FormControlName,\n        FormGroupName,\n        FormArrayName] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ReactiveFormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/forms.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormsModule, MaxLengthValidator, MinLengthValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, VERSION, Validators, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption, SHARED_FORM_DIRECTIVES as ɵangular_packages_forms_forms_a, TEMPLATE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_b, CHECKBOX_REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_ba, EMAIL_VALIDATOR as ɵangular_packages_forms_forms_bb, MIN_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bc, MAX_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bd, PATTERN_VALIDATOR as ɵangular_packages_forms_forms_be, REACTIVE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_c, ɵInternalFormsSharedModule as ɵangular_packages_forms_forms_d, CHECKBOX_VALUE_ACCESSOR as ɵangular_packages_forms_forms_e, DEFAULT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_f, AbstractControlStatus as ɵangular_packages_forms_forms_g, ngControlStatusHost as ɵangular_packages_forms_forms_h, formDirectiveProvider as ɵangular_packages_forms_forms_i, formControlBinding as ɵangular_packages_forms_forms_j, modelGroupProvider as ɵangular_packages_forms_forms_k, NUMBER_VALUE_ACCESSOR as ɵangular_packages_forms_forms_l, RADIO_VALUE_ACCESSOR as ɵangular_packages_forms_forms_m, RadioControlRegistry as ɵangular_packages_forms_forms_n, RANGE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_o, NG_MODEL_WITH_FORM_CONTROL_WARNING as ɵangular_packages_forms_forms_p, formControlBinding$1 as ɵangular_packages_forms_forms_q, controlNameBinding as ɵangular_packages_forms_forms_r, formDirectiveProvider$1 as ɵangular_packages_forms_forms_s, formGroupNameProvider as ɵangular_packages_forms_forms_t, formArrayNameProvider as ɵangular_packages_forms_forms_u, SELECT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_v, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_w, ɵNgSelectMultipleOption as ɵangular_packages_forms_forms_x, ɵNgNoValidate as ɵangular_packages_forms_forms_y, REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_z };\n\n//# sourceMappingURL=forms.js.map","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Position of the actions inside the card.\n     * @type {?}\n     */\n    MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Possible overrides for a dialog's position.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatDialogContainer_ng_template_0_Template(rf, ctx) { }\nfunction DialogPosition() { }\nif (false) {\n    /**\n     * Override for the dialog's top position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.top;\n    /**\n     * Override for the dialog's bottom position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.bottom;\n    /**\n     * Override for the dialog's left position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.left;\n    /**\n     * Override for the dialog's right position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.right;\n}\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n * @template D\n */\nclass MatDialogConfig {\n    constructor() {\n        /**\n         * The ARIA role of the dialog element.\n         */\n        this.role = 'dialog';\n        /**\n         * Custom class for the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the dialog has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Custom class for the backdrop.\n         */\n        this.backdropClass = '';\n        /**\n         * Whether the user can use escape or clicking on the backdrop to close the modal.\n         */\n        this.disableClose = false;\n        /**\n         * Width of the dialog.\n         */\n        this.width = '';\n        /**\n         * Height of the dialog.\n         */\n        this.height = '';\n        /**\n         * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n         */\n        this.maxWidth = '80vw';\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * ID of the element that describes the dialog.\n         */\n        this.ariaDescribedBy = null;\n        /**\n         * ID of the element that labels the dialog.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Aria label to assign to the dialog element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the dialog should focus the first focusable element on open.\n         */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\nif (false) {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.viewContainerRef;\n    /**\n     * ID for the dialog. If omitted, a unique one will be generated.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.id;\n    /**\n     * The ARIA role of the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.role;\n    /**\n     * Custom class for the overlay pane.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.panelClass;\n    /**\n     * Whether the dialog has a backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.hasBackdrop;\n    /**\n     * Custom class for the backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.backdropClass;\n    /**\n     * Whether the user can use escape or clicking on the backdrop to close the modal.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.disableClose;\n    /**\n     * Width of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.width;\n    /**\n     * Height of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.height;\n    /**\n     * Min-width of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minWidth;\n    /**\n     * Min-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minHeight;\n    /**\n     * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxWidth;\n    /**\n     * Max-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxHeight;\n    /**\n     * Position overrides.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.position;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.data;\n    /**\n     * Layout direction for the dialog's content.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.direction;\n    /**\n     * ID of the element that describes the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaDescribedBy;\n    /**\n     * ID of the element that labels the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabelledBy;\n    /**\n     * Aria label to assign to the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabel;\n    /**\n     * Whether the dialog should focus the first focusable element on open.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.autoFocus;\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.restoreFocus;\n    /**\n     * Scroll strategy to be used for the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.scrollStrategy;\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    MatDialogConfig.prototype.closeOnNavigation;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.componentFactoryResolver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatDialog.\n * \\@docs-private\n * @type {?}\n */\nconst matDialogAnimations = {\n    /**\n     * Animation that is applied on the dialog container by defalt.\n     */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nclass MatDialogContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _changeDetectorRef\n     * @param {?} _document\n     * @param {?} _config\n     */\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, _config) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        /**\n         * Element that was focused before the dialog was opened. Save this to restore upon close.\n         */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * State of the dialog animation.\n         */\n        this._state = 'enter';\n        /**\n         * Emits when an animation state changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            if (this._portalOutlet.hasAttached()) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @template C\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(element);\n        }\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            if (activeElement !== element && !element.contains(activeElement)) {\n                element.focus();\n            }\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the dialog opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        /** @type {?} */\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            /** @type {?} */\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Saves a reference to the element that was focused before the dialog was opened.\n     * @private\n     * @return {?}\n     */\n    _savePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = (/** @type {?} */ (this._document.activeElement));\n            // Note that there is no focus method when rendering on the server.\n            if (this._elementRef.nativeElement.focus) {\n                // Move focus onto the dialog immediately in order to prevent the user from accidentally\n                // opening multiple dialogs at the same time. Needs to be async, because the element\n                // may not be focusable immediately.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._elementRef.nativeElement.focus()));\n            }\n        }\n    }\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this._restoreFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Callback, invoked when an animation on the host starts.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Starts the dialog exit animation.\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = function MatDialogContainer_Factory(t) { return new (t || MatDialogContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDialogConfig)); };\nMatDialogContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDialogContainer, selectors: [[\"mat-dialog-container\"]], viewQuery: function MatDialogContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\", 1, \"mat-dialog-container\"], hostVars: 6, hostBindings: function MatDialogContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@dialogContainer.start\", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@dialogContainer.done\", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx._id)(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@dialogContainer\", ctx._state);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatDialogContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matDialogAnimations.dialogContainer] } });\n/** @nocollapse */\nMatDialogContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig }\n];\nMatDialogContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[attr.id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDialogConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._document;\n    /**\n     * The portal outlet inside of this container into which the dialog content will be loaded.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._portalOutlet;\n    /**\n     * The class that traps and manages focus within the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrap;\n    /**\n     * Element that was focused before the dialog was opened. Save this to restore upon close.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementFocusedBeforeDialogWasOpened;\n    /**\n     * State of the dialog animation.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._state;\n    /**\n     * Emits when an animation state changes.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._animationStateChanged;\n    /**\n     * ID of the element that should be considered as the dialog's label.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._ariaLabelledBy;\n    /**\n     * ID for the container DOM element.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._id;\n    /**\n     * Attaches a DOM portal to the dialog container.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDialogContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._changeDetectorRef;\n    /**\n     * The dialog configuration.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\n/** @type {?} */\nlet uniqueId = 0;\n/** @enum {number} */\nconst MatDialogState = {\n    OPEN: 0, CLOSING: 1, CLOSED: 2,\n};\n/**\n * Reference to a dialog opened via the MatDialog service.\n * @template T, R\n */\nclass MatDialogRef {\n    /**\n     * @param {?} _overlayRef\n     * @param {?} _containerInstance\n     * @param {?=} id\n     */\n    constructor(_overlayRef, _containerInstance, id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /**\n         * Whether the user is allowed to close the dialog.\n         */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /**\n         * Subject for notifying the user that the dialog has finished opening.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has finished closing.\n         */\n        this._afterClosed = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has started closing.\n         */\n        this._beforeClosed = new Subject();\n        /**\n         * Current state of the dialog.\n         */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'enter')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }));\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'exit')), take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.detachments().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = (/** @type {?} */ (null));\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.keydownEvents()\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.preventDefault();\n            this.close();\n        }));\n    }\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'start')), take(1))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._state = 2 /* CLOSED */;\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.dispose();\n            }), event.totalTime + 100);\n        }));\n        this._containerInstance._startExitAnimation();\n        this._state = 1 /* CLOSING */;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @return {?}\n     */\n    beforeClosed() {\n        return this._beforeClosed.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} position New dialog position.\n     * @return {THIS}\n     */\n    updatePosition(position) {\n        /** @type {?} */\n        let strategy = (/** @type {?} */ (this))._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {THIS}\n     */\n    updateSize(width = '', height = '') {\n        (/** @type {?} */ (this))._getPositionStrategy().width(width).height(height);\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    addPanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.addPanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    removePanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.removePanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the current state of the dialog's lifecycle.\n     * @return {?}\n     */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @private\n     * @return {?}\n     */\n    _getPositionStrategy() {\n        return (/** @type {?} */ (this._overlayRef.getConfig().positionStrategy));\n    }\n}\nif (false) {\n    /**\n     * The instance of component opened into the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.componentInstance;\n    /**\n     * Whether the user is allowed to close the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.disableClose;\n    /**\n     * Subject for notifying the user that the dialog has finished opening.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterOpened;\n    /**\n     * Subject for notifying the user that the dialog has finished closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterClosed;\n    /**\n     * Subject for notifying the user that the dialog has started closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._beforeClosed;\n    /**\n     * Result to be passed to afterClosed.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._result;\n    /**\n     * Handle to the timeout that's running as a fallback in case the exit animation doesn't fire.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._closeFallbackTimeout;\n    /**\n     * Current state of the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._state;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._overlayRef;\n    /** @type {?} */\n    MatDialogRef.prototype._containerInstance;\n    /** @type {?} */\n    MatDialogRef.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a dialog.\n * @type {?}\n */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/**\n * Injection token that can be used to specify default dialog options.\n * @type {?}\n */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _location\n     * @param {?} _defaultOptions\n     * @param {?} scrollStrategy\n     * @param {?} _parentDialog\n     * @param {?} _overlayContainer\n     */\n    constructor(_overlay, _injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    _location, _defaultOptions, scrollStrategy, _parentDialog, _overlayContainer) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => this.openDialogs.length ?\n            this._afterAllClosed :\n            this._afterAllClosed.pipe(startWith(undefined))))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Keeps track of the currently-open dialogs.\n     * @return {?}\n     */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /**\n     * Stream that emits when a dialog has been opened.\n     * @return {?}\n     */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    /**\n     * @return {?}\n     */\n    get _afterAllClosed() {\n        /** @type {?} */\n        const parent = this._parentDialog;\n        return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n    }\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        /** @type {?} */\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this._removeOpenDialog(dialogRef)));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param {?} id ID to use when looking up the dialog.\n     * @return {?}\n     */\n    getDialogById(id) {\n        return this.openDialogs.find((/**\n         * @param {?} dialog\n         * @return {?}\n         */\n        dialog => dialog.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @private\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @private\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        /** @type {?} */\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches an MatDialogContainer to a dialog's already-created overlay.\n     * @private\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }]\n        });\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatDialogContainer, config.viewContainerRef, injector, config.componentFactoryResolver);\n        /** @type {?} */\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created MatDialogContainer.\n     * @private\n     * @template T, R\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MatDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        /** @type {?} */\n        const dialogRef = new MatDialogRef(overlayRef, dialogContainer, config.id);\n        // When the dialog backdrop is clicked, we want to close it.\n        if (config.hasBackdrop) {\n            overlayRef.backdropClick().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (!dialogRef.disableClose) {\n                    dialogRef.close();\n                }\n            }));\n        }\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, (/** @type {?} */ (null)), (/** @type {?} */ ({ $implicit: config.data, dialogRef }))));\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            /** @type {?} */\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @private\n     * @template T\n     * @param {?} config Config object that is used to construct the dialog.\n     * @param {?} dialogRef Reference to the dialog.\n     * @param {?} dialogContainer\n     * @return {?} The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n        // content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n        // added to the injection tokens.\n        /** @type {?} */\n        const providers = [\n            { provide: MatDialogContainer, useValue: dialogContainer },\n            { provide: MAT_DIALOG_DATA, useValue: config.data },\n            { provide: MatDialogRef, useValue: dialogRef }\n        ];\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @private\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    _removeOpenDialog(dialogRef) {\n        /** @type {?} */\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((/**\n                 * @param {?} previousValue\n                 * @param {?} element\n                 * @return {?}\n                 */\n                (previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                }));\n                this._ariaHiddenElements.clear();\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     * @private\n     * @return {?}\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        /** @type {?} */\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            /** @type {?} */\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                /** @type {?} */\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /**\n     * Closes all of the dialogs in an array.\n     * @private\n     * @param {?} dialogs\n     * @return {?}\n     */\n    _closeDialogs(dialogs) {\n        /** @type {?} */\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\nMatDialog.ɵfac = function MatDialog_Factory(t) { return new (t || MatDialog)(ɵngcc0.ɵɵinject(ɵngcc3.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), ɵngcc0.ɵɵinject(MatDialog, 12), ɵngcc0.ɵɵinject(ɵngcc3.OverlayContainer)); };\nMatDialog.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDialog, factory: MatDialog.ɵfac });\n/** @nocollapse */\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialog, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatDialogConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DIALOG_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_SCROLL_STRATEGY]\n            }] }, { type: MatDialog, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc3.OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._openDialogsAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterAllClosedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterOpenedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._ariaHiddenElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._scrollStrategy;\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     * @type {?}\n     */\n    MatDialog.prototype.afterAllClosed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._defaultOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._parentDialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlayContainer;\n}\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @param {?=} defaultOptions Default options provided.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-content-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique IDs for dialog elements.\n * @type {?}\n */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    /**\n     * @param {?} dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /**\n         * Default to \"button\" to prevents accidental form submits.\n         */\n        this.type = 'button';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n}\nMatDialogClose.ɵfac = function MatDialogClose_Factory(t) { return new (t || MatDialogClose)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogClose.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogClose, selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]], hostVars: 2, hostBindings: function MatDialogClose_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler() { return ctx.dialogRef.close(ctx.dialogResult); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n    } }, inputs: { type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, exportAs: [\"matDialogClose\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogClose, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': 'dialogRef.close(dialogResult)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { type: [{\n            type: Input\n        }], dialogResult: [{\n            type: Input,\n            args: ['mat-dialog-close']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _matDialogClose: [{\n            type: Input,\n            args: ['matDialogClose']\n        }] }); })();\nif (false) {\n    /**\n     * Screenreader label for the button.\n     * @type {?}\n     */\n    MatDialogClose.prototype.ariaLabel;\n    /**\n     * Default to \"button\" to prevents accidental form submits.\n     * @type {?}\n     */\n    MatDialogClose.prototype.type;\n    /**\n     * Dialog close input.\n     * @type {?}\n     */\n    MatDialogClose.prototype.dialogResult;\n    /** @type {?} */\n    MatDialogClose.prototype._matDialogClose;\n    /** @type {?} */\n    MatDialogClose.prototype.dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._dialog;\n}\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    /**\n     * @param {?} _dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(_dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            }));\n        }\n    }\n}\nMatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) { return new (t || MatDialogTitle)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogTitle, selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]], hostAttrs: [1, \"mat-dialog-title\"], hostVars: 1, hostBindings: function MatDialogTitle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, exportAs: [\"matDialogTitle\"] });\n/** @nocollapse */\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogTitle, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDialogTitle.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialog;\n}\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = function MatDialogContent_Factory(t) { return new (t || MatDialogContent)(); };\nMatDialogContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogContent, selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]], hostAttrs: [1, \"mat-dialog-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContent, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            }]\n    }], null, null); })();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = function MatDialogActions_Factory(t) { return new (t || MatDialogActions)(); };\nMatDialogActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogActions, selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]], hostAttrs: [1, \"mat-dialog-actions\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogActions, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            }]\n    }], null, null); })();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param {?} element Element relative to which to look for a dialog.\n * @param {?} openDialogs References to the currently-open dialogs.\n * @return {?}\n */\nfunction getClosestDialog(element, openDialogs) {\n    /** @type {?} */\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find((/**\n     * @param {?} dialog\n     * @return {?}\n     */\n    dialog => dialog.id === (/** @type {?} */ (parent)).id)) : null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDialogModule });\nMatDialogModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDialogModule_Factory(t) { return new (t || MatDialogModule)(); }, providers: [\n        MatDialog,\n        MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[\n            OverlayModule,\n            PortalModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDialogModule, { declarations: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n\n//# sourceMappingURL=dialog.js.map","import { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r13._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r7._control.empty && !ctx_r7._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r7._control.empty && !ctx_r7._shouldAlwaysFloat)(\"mat-accent\", ctx_r7.color == \"accent\")(\"mat-warn\", ctx_r7.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r7.appearance != \"outline\")(\"id\", ctx_r7._labelId)(\"ngSwitch\", ctx_r7._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r7._control.id)(\"aria-owns\", ctx_r7._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r7.hideRequiredMarker && ctx_r7._control.required && !ctx_r7._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r9.color == \"accent\")(\"mat-warn\", ctx_r9.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r10._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r19._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r19.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r11._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r11.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = labelStart - containerStart - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    _isTextarea() {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()',\n                    '(blur)': '_focusChanged(false)',\n                    '(focus)': '_focusChanged(true)',\n                    '(input)': '_onInput()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, Optional, SkipSelf, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, Input, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r37 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r37);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r37, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r39 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r39); const ctx_r38 = ɵngcc0.ɵɵnextContext(2); return ctx_r38._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r34 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r34.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r34.pageSize)(\"disabled\", ctx_r34.disabled)(\"aria-label\", ctx_r34._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r34._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r35 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r35.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 5, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r31 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r31._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r31._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r31._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r41 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r41); const ctx_r40 = ɵngcc0.ɵɵnextContext(); return ctx_r40.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r32 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r32._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r32._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r32._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r32._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r43 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r43); const ctx_r42 = ɵngcc0.ɵɵnextContext(); return ctx_r42.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r33 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r33._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r33._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r33._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r33._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = (/**\n         * @param {?} page\n         * @param {?} pageSize\n         * @param {?} length\n         * @return {?}\n         */\n        (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            /** @type {?} */\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            /** @type {?} */\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        });\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\n/** @nocollapse */ MatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.changes;\n    /**\n     * A label for the page size selector.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.itemsPerPageLabel;\n    /**\n     * A label for the button that increments the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.nextPageLabel;\n    /**\n     * A label for the button that decrements the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.previousPageLabel;\n    /**\n     * A label for the button that moves to the first page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.firstPageLabel;\n    /**\n     * A label for the button that moves to the last page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.lastPageLabel;\n    /**\n     * A label for the range of items within the current page and the length of the whole list.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.getRangeLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n * @type {?}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\nif (false) {\n    /**\n     * The current page index.\n     * @type {?}\n     */\n    PageEvent.prototype.pageIndex;\n    /**\n     * Index of the page that was selected previously.\n     * \\@breaking-change 8.0.0 To be made into a required property.\n     * @type {?}\n     */\n    PageEvent.prototype.previousPageIndex;\n    /**\n     * The current page size\n     * @type {?}\n     */\n    PageEvent.prototype.pageSize;\n    /**\n     * The current total number of items being paged\n     * @type {?}\n     */\n    PageEvent.prototype.length;\n}\n/**\n * Object that can be used to configure the default options for the paginator module.\n * @record\n */\nfunction MatPaginatorDefaultOptions() { }\nif (false) {\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSize;\n    /**\n     * The set of provided page size options to display to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSizeOptions;\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.hidePageSize;\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.showFirstLastButtons;\n}\n/**\n * Injection token that can be used to provide the default options for the paginator module.\n * @type {?}\n */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nclass MatPaginatorBase {\n}\n/** @type {?} */\nconst _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaults\n     */\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /**\n     * The zero-based page index of the displayed list of items. Defaulted to 0.\n     * @return {?}\n     */\n    get pageIndex() { return this._pageIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The length of the total number of items that are being paginated. Defaulted to 0.\n     * @return {?}\n     */\n    get length() { return this._length; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @return {?}\n     */\n    get pageSize() { return this._pageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * The set of provided page size options to display to the user.\n     * @return {?}\n     */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => coerceNumberProperty(p)));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @return {?}\n     */\n    get hidePageSize() { return this._hidePageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @return {?}\n     */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        /** @type {?} */\n        const startIndex = this.pageIndex * this.pageSize;\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => a - b));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\nMatPaginator.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageIndex;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_length;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_hidePageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_showFirstLastButtons;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._initialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._intlChanges;\n    /**\n     * Theme color to be used for the underlying form controls.\n     * @type {?}\n     */\n    MatPaginator.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._length;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSizeOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._hidePageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._showFirstLastButtons;\n    /**\n     * Event emitted when the paginator changes the page size or page index.\n     * @type {?}\n     */\n    MatPaginator.prototype.page;\n    /**\n     * Displayed set of page size options. Will be sorted and include current page size.\n     * @type {?}\n     */\n    MatPaginator.prototype._displayedPageSizeOptions;\n    /** @type {?} */\n    MatPaginator.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule]; }, exports: function () { return [MatPaginator]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n\n//# sourceMappingURL=paginator.js.map","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base reference size of the spinner.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r2.diameter)(\"stroke-dashoffset\", ctx_r2._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r2._strokeCircumference, \"px\")(\"stroke-width\", ctx_r2._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r2._circleRadius);\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r3._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r3._strokeCircumference, \"px\")(\"stroke-width\", ctx_r3._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r3._circleRadius);\n} }\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * \\@docs-private\n * @type {?}\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/**\n * \\@docs-private\n */\nclass MatProgressSpinnerBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressSpinnerBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/**\n * Default `mat-progress-spinner` options that can be overridden.\n * @record\n */\nfunction MatProgressSpinnerDefaultOptions() { }\nif (false) {\n    /**\n     * Diameter of the spinner.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.diameter;\n    /**\n     * Width of the spinner's stroke.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.strokeWidth;\n    /**\n     * Whether the animations should be force to be enabled, ignoring if the current environment is\n     * using NoopAnimationsModule.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype._forceAnimations;\n}\n/**\n * Injection token to be used to override the default options for `mat-progress-spinner`.\n * @type {?}\n */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\n/** @type {?} */\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} platform\n     * @param {?} _document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /**\n         * Mode of the progress circle\n         */\n        this.mode = 'determinate';\n        /** @type {?} */\n        const trackedDiameters = MatProgressSpinner._diameters;\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /**\n     * The diameter of the progress spinner (will set width and height of svg).\n     * @return {?}\n     */\n    get diameter() { return this._diameter; }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /**\n     * Stroke width of the progress spinner.\n     * @return {?}\n     */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /**\n     * Value of the progress circle.\n     * @return {?}\n     */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        /** @type {?} */\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /**\n     * The radius of the spinner, adjusted for stroke width.\n     * @return {?}\n     */\n    get _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /**\n     * The view box of the spinner's svg element.\n     * @return {?}\n     */\n    get _viewBox() {\n        /** @type {?} */\n        const viewBox = this._circleRadius * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /**\n     * The stroke circumference of the svg circle.\n     * @return {?}\n     */\n    get _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius;\n    }\n    /**\n     * The dash offset of the svg circle.\n     * @return {?}\n     */\n    get _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._strokeCircumference * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._strokeCircumference * 0.2;\n        }\n        return null;\n    }\n    /**\n     * Stroke width of the circle in percent.\n     * @return {?}\n     */\n    get _circleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /**\n     * Dynamically generates a style tag containing the correct animation for this diameter.\n     * @private\n     * @return {?}\n     */\n    _attachStyleNode() {\n        /** @type {?} */\n        const styleRoot = this._styleRoot;\n        /** @type {?} */\n        const currentDiameter = this._diameter;\n        /** @type {?} */\n        const diameters = MatProgressSpinner._diameters;\n        /** @type {?} */\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            /** @type {?} */\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', currentDiameter + '');\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /**\n     * Generates animation styles adjusted for the spinner's diameter.\n     * @private\n     * @return {?}\n     */\n    _getAnimationText() {\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this.diameter}`);\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\n/** @nocollapse */\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n     * We need to keep track of which elements the diameters were attached to, because for\n     * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n     * than the document head.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner._diameters;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_diameter;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_strokeWidth;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._diameter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._strokeWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._fallbackAnimation;\n    /**\n     * Element to which we should add the generated style tags for the indeterminate animation.\n     * For most elements this is the document, but for the ones in the Shadow DOM we need to\n     * use the shadow root.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._styleRoot;\n    /**\n     * Whether the _mat-animation-noopable class should be applied, disabling animations.\n     * @type {?}\n     */\n    MatProgressSpinner.prototype._noopAnimations;\n    /**\n     * Mode of the progress circle\n     * @type {?}\n     */\n    MatProgressSpinner.prototype.mode;\n    /** @type {?} */\n    MatProgressSpinner.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._document;\n}\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    /**\n     * @param {?} elementRef\n     * @param {?} platform\n     * @param {?} document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner,\n        MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner,\n        MatSpinner,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Self, Attribute, Inject, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/material/form-field';\nimport * as ɵngcc6 from '@angular/cdk/a11y';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r22 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r22.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r25 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r25.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r23 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r23.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r29 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r29); const ctx_r28 = ɵngcc0.ɵɵnextContext(); return ctx_r28._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r29); const ctx_r30 = ɵngcc0.ɵɵnextContext(); return ctx_r30._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r24 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r24._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r24._transformOrigin)(\"font-size\", ctx_r24._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r24.panelClass)(\"@transformPanel\", ctx_r24.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.MatFormField, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r20 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r20)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc6.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { EventEmitter, isDevMode, Directive, Input, Output, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r46 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r46); const ctx_r45 = ɵngcc0.ɵɵnextContext(); return ctx_r45._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r46); const ctx_r47 = ɵngcc0.ɵɵnextContext(); return ctx_r47._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r44 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r44._getArrowViewState())(\"@arrowPosition\", ctx_r44._getArrowViewState())(\"@allowChildren\", ctx_r44._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r44._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r44._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r44._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/**\n * \\@docs-private\n * @param {?} direction\n * @return {?}\n */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a directive that holds sorting state consumed by `MatSortHeader`.\n * @record\n */\nfunction MatSortable() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    MatSortable.prototype.id;\n    /**\n     * Starting sort direction.\n     * @type {?}\n     */\n    MatSortable.prototype.start;\n    /**\n     * Whether to disable clearing the sorting state.\n     * @type {?}\n     */\n    MatSortable.prototype.disableClear;\n}\n/**\n * The current sort state.\n * @record\n */\nfunction Sort() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    Sort.prototype.active;\n    /**\n     * The sort direction.\n     * @type {?}\n     */\n    Sort.prototype.direction;\n}\n// Boilerplate for applying mixins to MatSort.\n/**\n * \\@docs-private\n */\nclass MatSortBase {\n}\n/** @type {?} */\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/**\n * Container for MatSortables to manage the sort state and provide default sort parameters.\n */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Collection of all registered sortables that this directive manages.\n         */\n        this.sortables = new Map();\n        /**\n         * Used to notify any child components listening to state changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /**\n         * Event emitted when the user changes either the active sort or sort direction.\n         */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * The sort direction of the currently active MatSortable.\n     * @return {?}\n     */\n    get direction() { return this._direction; }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    set direction(direction) {\n        if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    register(sortable) {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        /** @type {?} */\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        /** @type {?} */\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        /** @type {?} */\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); };\nMatSort.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\nconst ɵMatSort_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disabled;\n    /**\n     * Collection of all registered sortables that this directive manages.\n     * @type {?}\n     */\n    MatSort.prototype.sortables;\n    /**\n     * Used to notify any child components listening to state changes.\n     * @type {?}\n     */\n    MatSort.prototype._stateChanges;\n    /**\n     * The id of the most recently sorted MatSortable.\n     * @type {?}\n     */\n    MatSort.prototype.active;\n    /**\n     * The direction to set when an MatSortable is initially sorted.\n     * May be overriden by the MatSortable's sort start.\n     * @type {?}\n     */\n    MatSort.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._disableClear;\n    /**\n     * Event emitted when the user changes either the active sort or sort direction.\n     * @type {?}\n     */\n    MatSort.prototype.sortChange;\n}\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start, disableClear) {\n    /** @type {?} */\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * \\@docs-private\n * @type {?}\n */\nconst matSortAnimations = {\n    /**\n     * Animation that moves the sort indicator.\n     */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the left pointer of the indicator based on the sorting direction.\n     */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the right pointer of the indicator based on the sorting direction.\n     */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that controls the arrow opacity.\n     */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /**\n     * Necessary trigger that calls animate on children animations.\n     */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         */\n        this.sortButtonLabel = (/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => {\n            return `Change sorting for ${id}`;\n        });\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\n/** @nocollapse */ MatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.changes;\n    /**\n     * ARIA label for the sorting button.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.sortButtonLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to the sort header.\n/**\n * \\@docs-private\n */\nclass MatSortHeaderBase {\n}\n/** @type {?} */\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * \\@docs-private\n * @record\n */\nfunction ArrowViewStateTransition() { }\nif (false) {\n    /** @type {?|undefined} */\n    ArrowViewStateTransition.prototype.fromState;\n    /** @type {?} */\n    ArrowViewStateTransition.prototype.toState;\n}\n/**\n * Column definition associated with a `MatSortHeader`.\n * @record\n */\nfunction MatSortHeaderColumnDef() { }\nif (false) {\n    /** @type {?} */\n    MatSortHeaderColumnDef.prototype.name;\n}\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    /**\n     * @param {?} _intl\n     * @param {?} changeDetectorRef\n     * @param {?} _sort\n     * @param {?} _columnDef\n     * @param {?=} _focusMonitor\n     * @param {?=} _elementRef\n     */\n    constructor(_intl, changeDetectorRef, _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The direction the arrow should be facing according to the current state.\n         */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /**\n         * Sets the position of the arrow that displays when sorted.\n         */\n        this.arrowPosition = 'after';\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            changeDetectorRef.markForCheck();\n        }));\n        if (_focusMonitor && _elementRef) {\n            // We use the focus monitor because we also want to style\n            // things differently based on the focus origin.\n            _focusMonitor.monitor(_elementRef, true)\n                .subscribe((/**\n             * @param {?} origin\n             * @return {?}\n             */\n            origin => this._setIndicatorHintVisible(!!origin)));\n        }\n    }\n    /**\n     * Overrides the disable clear value of the containing MatSort for this MatSortable.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // @breaking-change 10.0.0 Remove null check for _focusMonitor and _elementRef.\n        if (this._focusMonitor && this._elementRef) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     * @param {?} visible\n     * @return {?}\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     * @param {?} viewState\n     * @return {?}\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /**\n     * Triggers the sort on this sort header and removes the indicator hint.\n     * @return {?}\n     */\n    _handleClick() {\n        if (this._isDisabled()) {\n            return;\n        }\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        /** @type {?} */\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /**\n     * Returns the animation state for the arrow direction (indicator and pointers).\n     * @return {?}\n     */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /**\n     * Returns the arrow position state (opacity, translation).\n     * @return {?}\n     */\n    _getArrowViewState() {\n        /** @type {?} */\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     * @return {?}\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    /**\n     * @return {?}\n     */\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     * @return {?}\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return null;\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /**\n     * Whether the arrow inside the sort header should be rendered.\n     * @return {?}\n     */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 7, consts: [[1, \"mat-sort-header-container\"], [\"type\", \"button\", 1, \"mat-sort-header-button\", \"mat-focus-indicator\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx._isDisabled() || null)(\"aria-label\", ctx._intl.sortButtonLabel(ctx.id));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<div class=\\\"mat-sort-header-container\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\">\\n  <button class=\\\"mat-sort-header-button mat-focus-indicator\\\" type=\\\"button\\\"\\n          [attr.disabled]=\\\"_isDisabled() || null\\\"\\n          [attr.aria-label]=\\\"_intl.sortButtonLabel(id)\\\">\\n    <ng-content></ng-content>\\n  </button>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._rerenderSubscription;\n    /**\n     * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n     * provide an affordance that the header is sortable by showing on focus and hover.\n     * @type {?}\n     */\n    MatSortHeader.prototype._showIndicatorHint;\n    /**\n     * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n     * position through the animation. If animations are currently disabled, the fromState is removed\n     * so that there is no animation displayed.\n     * @type {?}\n     */\n    MatSortHeader.prototype._viewState;\n    /**\n     * The direction the arrow should be facing according to the current state.\n     * @type {?}\n     */\n    MatSortHeader.prototype._arrowDirection;\n    /**\n     * Whether the view state animation should show the transition between the `from` and `to` states.\n     * @type {?}\n     */\n    MatSortHeader.prototype._disableViewStateAnimation;\n    /**\n     * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n     * the column's name.\n     * @type {?}\n     */\n    MatSortHeader.prototype.id;\n    /**\n     * Sets the position of the arrow that displays when sorted.\n     * @type {?}\n     */\n    MatSortHeader.prototype.arrowPosition;\n    /**\n     * Overrides the sort start value of the containing MatSort for this MatSortable.\n     * @type {?}\n     */\n    MatSortHeader.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._disableClear;\n    /** @type {?} */\n    MatSortHeader.prototype._intl;\n    /** @type {?} */\n    MatSortHeader.prototype._sort;\n    /** @type {?} */\n    MatSortHeader.prototype._columnDef;\n    /**\n     * @deprecated _focusMonitor and _elementRef to become required parameters.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSortModule {\n}\nMatSortModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort,\n        MatSortHeader]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatSort,\n        MatSortHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-direction.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r48 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r48.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r48.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r50 = ctx.$implicit;\n    const ctx_r49 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r49.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r49.dataAccessor(data_r50, ctx_r49.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTable, useExisting: MatTable }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [{ provide: CdkTable, useExisting: MatTable }],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     * @type {?}\n     * @protected\n     */\n    MatTable.prototype.stickyCssClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatColumnDef.ngAcceptInputType_sticky;\n    /**\n     * Unique name for this column.\n     * @type {?}\n     */\n    MatColumnDef.prototype.name;\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatHeaderRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * Stream that emits when a new data array is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._data;\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._renderData;\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._filter;\n    /**\n     * Used to react to internal changes of the paginator that are made by the data source itself.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._internalPageChanges;\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     * @type {?}\n     */\n    MatTableDataSource.prototype._renderChangesSubscription;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filteredData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._sort;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * \\@param data Data object that is being accessed.\n     * \\@param sortHeaderId The name of the column that represents the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortingDataAccessor;\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * \\@param data The array of data that should be sorted.\n     * \\@param sort The connected MatSort that holds the current sort state.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortData;\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * \\@param data Data object used to check against the filter.\n     * \\@param filter Filter string that has been set on the data source.\n     * \\@return Whether the filter matches against the data\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filterPredicate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, ViewContainerRef, NgZone, Inject, Optional, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatTooltip.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@angular/common';\nconst matTooltipAnimations = {\n    /**\n     * Animation that transitions a tooltip in and out.\n     */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle repositioning after scroll events.\n * @type {?}\n */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @type {?}\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Options used to bind passive event listeners.\n * @type {?}\n */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n * @type {?}\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }));\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default `matTooltip` options that can be overridden.\n * @record\n */\nfunction MatTooltipDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.showDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.hideDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.touchendHideDelay;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.touchGestures;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.position;\n}\n/**\n * Injection token to be used to override the default options for `matTooltip`.\n * @type {?}\n */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /**\n     * @param {?} _overlay\n     * @param {?} _elementRef\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?} _ariaDescriber\n     * @param {?} _focusMonitor\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _defaultOptions\n     * @param {?=} _hammerLoader\n     */\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, \n    /**\n     * @deprecated _hammerLoader parameter to be removed.\n     * @breaking-change 9.0.0\n     */\n    // Note that we need to give Angular something to inject here so it doesn't throw.\n    _hammerLoader) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        /**\n         * The default delay in ms before showing the tooltip after show is called\n         */\n        this.showDelay = this._defaultOptions.showDelay;\n        /**\n         * The default delay in ms before hiding the tooltip after hide is called\n         */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /**\n         * Manually-bound passive event listeners.\n         */\n        this._passiveListeners = new Map();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n        });\n        this._scrollStrategy = scrollStrategy;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _focusMonitor.monitor(_elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n            else if (origin === 'keyboard') {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.show()));\n            }\n        }));\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        }));\n    }\n    /**\n     * Allows the user to define the position of the tooltip relative to the parent element\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition();\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._tooltipInstance)).show(0);\n                }\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Disables the display of the tooltip.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n    }\n    /**\n     * The message to be displayed in the tooltip\n     * @return {?}\n     */\n    get message() { return this._message; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        this._message = value != null ? `${value}`.trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n                }));\n            }));\n        }\n    }\n    /**\n     * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n     * @return {?}\n     */\n    get tooltipClass() { return this._tooltipClass; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /**\n     * Setup styling-specific things\n     * @return {?}\n     */\n    ngOnInit() {\n        // This needs to happen in `ngOnInit` so the initial values for all inputs have been set.\n        this._setupPointerEvents();\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        }));\n        this._passiveListeners.clear();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !(/** @type {?} */ (this._tooltipInstance))._showTimeoutId && !(/** @type {?} */ (this._tooltipInstance))._hideTimeoutId)) {\n            return;\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        (/** @type {?} */ (this._tooltipInstance)).show(delay);\n    }\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /**\n     * Create the overlay config and position strategy\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        /** @type {?} */\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => {\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => this.hide(0)));\n                }\n            }\n        }));\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        return this._overlayRef;\n    }\n    /**\n     * Detaches the currently-attached tooltip.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /**\n     * Updates the position of the current tooltip.\n     * @private\n     * @return {?}\n     */\n    _updatePosition() {\n        /** @type {?} */\n        const position = (/** @type {?} */ ((/** @type {?} */ (this._overlayRef)).getConfig().positionStrategy));\n        /** @type {?} */\n        const origin = this._getOrigin();\n        /** @type {?} */\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            Object.assign(Object.assign({}, origin.main), overlay.main),\n            Object.assign(Object.assign({}, origin.fallback), overlay.fallback)\n        ]);\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    _getOrigin() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @private\n     * @return {?}\n     */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1), takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._overlayRef)).updatePosition();\n                }\n            }));\n        }\n    }\n    /**\n     * Updates the tooltip class\n     * @private\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /**\n     * Inverts an overlay position.\n     * @private\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /**\n     * Binds the pointer events to the tooltip trigger.\n     * @private\n     * @return {?}\n     */\n    _setupPointerEvents() {\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (!this._platform.IOS && !this._platform.ANDROID) {\n            this._passiveListeners\n                .set('mouseenter', (/**\n             * @return {?}\n             */\n            () => this.show()))\n                .set('mouseleave', (/**\n             * @return {?}\n             */\n            () => this.hide()));\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            /** @type {?} */\n            const touchendListener = (/**\n             * @return {?}\n             */\n            () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            });\n            this._passiveListeners\n                .set('touchend', touchendListener)\n                .set('touchcancel', touchendListener)\n                .set('touchstart', (/**\n             * @return {?}\n             */\n            () => {\n                // Note that it's important that we don't `preventDefault` here,\n                // because it can prevent click events from firing on the element.\n                clearTimeout(this._touchstartTimeout);\n                this._touchstartTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => this.show()), LONGPRESS_DELAY);\n            }));\n        }\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        }));\n    }\n    /**\n     * Disables the native browser gestures, based on how the tooltip has been configured.\n     * @private\n     * @return {?}\n     */\n    _disableNativeGesturesIfNecessary() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const style = element.style;\n        /** @type {?} */\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect = style.msUserSelect = style.webkitUserSelect =\n                    ((/** @type {?} */ (style))).MozUserSelect = 'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                ((/** @type {?} */ (style))).webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\nMatTooltip.ɵfac = function MatTooltip_Factory(t) { return new (t || MatTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nMatTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTooltip, selectors: [[\"\", \"matTooltip\", \"\"]], inputs: { showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, exportAs: [\"matTooltip\"] });\n/** @nocollapse */\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] }\n];\nMatTooltip.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    touchGestures: [{ type: Input, args: ['matTooltipTouchGestures',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip'\n            }]\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }]; }, { showDelay: [{\n            type: Input,\n            args: ['matTooltipShowDelay']\n        }], hideDelay: [{\n            type: Input,\n            args: ['matTooltipHideDelay']\n        }], touchGestures: [{\n            type: Input,\n            args: ['matTooltipTouchGestures']\n        }], position: [{\n            type: Input,\n            args: ['matTooltipPosition']\n        }], disabled: [{\n            type: Input,\n            args: ['matTooltipDisabled']\n        }], message: [{\n            type: Input,\n            args: ['matTooltip']\n        }], tooltipClass: [{\n            type: Input,\n            args: ['matTooltipClass']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_hideDelay;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_showDelay;\n    /** @type {?} */\n    MatTooltip.prototype._overlayRef;\n    /** @type {?} */\n    MatTooltip.prototype._tooltipInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._tooltipClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollStrategy;\n    /**\n     * The default delay in ms before showing the tooltip after show is called\n     * @type {?}\n     */\n    MatTooltip.prototype.showDelay;\n    /**\n     * The default delay in ms before hiding the tooltip after hide is called\n     * @type {?}\n     */\n    MatTooltip.prototype.hideDelay;\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     * @type {?}\n     */\n    MatTooltip.prototype.touchGestures;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._message;\n    /**\n     * Manually-bound passive event listeners.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._passiveListeners;\n    /**\n     * Timer started at the last `touchstart` event.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._touchstartTimeout;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._destroyed;\n    /**\n     * Handles the keydown events on the host element.\n     * Needs to be an arrow function so that we can use it in addEventListener.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._handleKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ariaDescriber;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._defaultOptions;\n}\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nclass TooltipComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _breakpointObserver\n     */\n    constructor(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /**\n         * Property watched by the animation framework to show or hide the tooltip\n         */\n        this._visibility = 'initial';\n        /**\n         * Whether interactions on the page should close the tooltip\n         */\n        this._closeOnInteraction = false;\n        /**\n         * Subject for notifying that the tooltip has been hidden from the view\n         */\n        this._onHide = new Subject();\n        /**\n         * Stream that emits whether the user has a handset-sized display.\n         */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'visible';\n            this._showTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n        this._hideTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    afterHidden() {\n        return this._onHide.asObservable();\n    }\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onHide.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDone(event) {\n        /** @type {?} */\n        const toState = (/** @type {?} */ (event.toState));\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n}\nTooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver)); };\nTooltipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [[\"mat-tooltip-component\"]], hostAttrs: [\"aria-hidden\", \"true\"], hostVars: 2, hostBindings: function TooltipComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TooltipComponent_click_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"zoom\", ctx._visibility === \"visible\" ? 1 : null);\n    } }, decls: 3, vars: 7, consts: [[1, \"mat-tooltip\", 3, \"ngClass\"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@state.start\", function TooltipComponent_Template_div_animation_state_start_0_listener() { return ctx._animationStart(); })(\"@state.done\", function TooltipComponent_Template_div_animation_state_done_0_listener($event) { return ctx._animationDone($event); });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var tmp_0_0 = null;\n        const currVal_0 = (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches;\n        ɵngcc0.ɵɵclassProp(\"mat-tooltip-handset\", currVal_0);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.tooltipClass)(\"@state\", ctx._visibility);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.message);\n    } }, directives: [ɵngcc7.NgClass], pipes: [ɵngcc7.AsyncPipe], styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], encapsulation: 2, data: { animation: [matTooltipAnimations.tooltipState] }, changeDetection: 0 });\n/** @nocollapse */\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true'\n                },\n                styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.BreakpointObserver }]; }, null); })();\nif (false) {\n    /**\n     * Message to display in the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype.message;\n    /**\n     * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    TooltipComponent.prototype.tooltipClass;\n    /**\n     * The timeout ID of any current timer set to show the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._showTimeoutId;\n    /**\n     * The timeout ID of any current timer set to hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._hideTimeoutId;\n    /**\n     * Property watched by the animation framework to show or hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._visibility;\n    /**\n     * Whether interactions on the page should close the tooltip\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._closeOnInteraction;\n    /**\n     * Subject for notifying that the tooltip has been hidden from the view\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._onHide;\n    /**\n     * Stream that emits whether the user has a handset-sized display.\n     * @type {?}\n     */\n    TooltipComponent.prototype._isHandset;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._breakpointObserver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTooltipModule });\nMatTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTooltipModule_Factory(t) { return new (t || MatTooltipModule)(); }, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            A11yModule,\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTooltipModule, { declarations: function () { return [MatTooltip,\n        TooltipComponent]; }, imports: function () { return [A11yModule,\n        CommonModule,\n        OverlayModule,\n        MatCommonModule]; }, exports: function () { return [MatTooltip,\n        TooltipComponent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n\n//# sourceMappingURL=tooltip.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.esriLoader = global.esriLoader || {})));\n}(this, (function (exports) { 'use strict';\n\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\r\n * Apache-2.0 */\r\nvar DEFAULT_VERSION = '4.14';\r\nvar NEXT = 'next';\r\nfunction parseVersion(version) {\r\n    if (version.toLowerCase() === NEXT) {\r\n        return NEXT;\r\n    }\r\n    var match = version && version.match(/^(\\d)\\.(\\d+)/);\r\n    return match && {\r\n        major: parseInt(match[1], 10),\r\n        minor: parseInt(match[2], 10)\r\n    };\r\n}\r\n/**\r\n * Get the CDN url for a given version\r\n *\r\n * @param version Ex: '4.14' or '3.31'. Defaults to the latest 4.x version.\r\n */\r\nfunction getCdnUrl(version) {\r\n    if (version === void 0) { version = DEFAULT_VERSION; }\r\n    return \"https://js.arcgis.com/\" + version + \"/\";\r\n}\r\n/**\r\n * Get the CDN url for a the CSS for a given version and/or theme\r\n *\r\n * @param version Ex: '4.14', '3.31', or 'next'. Defaults to the latest 4.x version.\r\n */\r\nfunction getCdnCssUrl(version) {\r\n    if (version === void 0) { version = DEFAULT_VERSION; }\r\n    var baseUrl = getCdnUrl(version);\r\n    var parsedVersion = parseVersion(version);\r\n    if (parsedVersion !== NEXT && parsedVersion.major === 3) {\r\n        // NOTE: at 3.11 the CSS moved from the /js folder to the root\r\n        var path = parsedVersion.minor <= 10 ? 'js/' : '';\r\n        return \"\" + baseUrl + path + \"esri/css/esri.css\";\r\n    }\r\n    else {\r\n        // assume 4.x\r\n        return baseUrl + \"esri/themes/light/main.css\";\r\n    }\r\n}\n\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\r\n * Apache-2.0 */\r\nfunction createStylesheetLink(href) {\r\n    var link = document.createElement('link');\r\n    link.rel = 'stylesheet';\r\n    link.href = href;\r\n    return link;\r\n}\r\nfunction insertLink(link, before) {\r\n    if (before) {\r\n        // the link should be inserted before a specific node\r\n        var beforeNode = document.querySelector(before);\r\n        beforeNode.parentNode.insertBefore(link, beforeNode);\r\n    }\r\n    else {\r\n        // append the link to then end of the head tag\r\n        document.head.appendChild(link);\r\n    }\r\n}\r\n// check if the css url has been injected or added manually\r\nfunction getCss(url) {\r\n    return document.querySelector(\"link[href*=\\\"\" + url + \"\\\"]\");\r\n}\r\nfunction getCssUrl(urlOrVersion) {\r\n    return !urlOrVersion || parseVersion(urlOrVersion)\r\n        // if it's a valid version string return the CDN URL\r\n        ? getCdnCssUrl(urlOrVersion)\r\n        // otherwise assume it's a URL and return that\r\n        : urlOrVersion;\r\n}\r\n// lazy load the CSS needed for the ArcGIS API\r\nfunction loadCss(urlOrVersion, before) {\r\n    var url = getCssUrl(urlOrVersion);\r\n    var link = getCss(url);\r\n    if (!link) {\r\n        // create & load the css link\r\n        link = createStylesheetLink(url);\r\n        insertLink(link, before);\r\n    }\r\n    return link;\r\n}\n\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\r\n * Apache-2.0 */\r\nvar isBrowser = typeof window !== 'undefined';\r\n// allow consuming libraries to provide their own Promise implementations\r\nvar utils = {\r\n    Promise: isBrowser ? window['Promise'] : undefined\r\n};\n\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\r\n * Apache-2.0 */\r\nvar defaultOptions = {};\r\nfunction createScript(url) {\r\n    var script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.src = url;\r\n    script.setAttribute('data-esri-loader', 'loading');\r\n    return script;\r\n}\r\n// add a one-time load handler to script\r\n// and optionally add a one time error handler as well\r\nfunction handleScriptLoad(script, callback, errback) {\r\n    var onScriptError;\r\n    if (errback) {\r\n        // set up an error handler as well\r\n        onScriptError = handleScriptError(script, errback);\r\n    }\r\n    var onScriptLoad = function () {\r\n        // pass the script to the callback\r\n        callback(script);\r\n        // remove this event listener\r\n        script.removeEventListener('load', onScriptLoad, false);\r\n        if (onScriptError) {\r\n            // remove the error listener as well\r\n            script.removeEventListener('error', onScriptError, false);\r\n        }\r\n    };\r\n    script.addEventListener('load', onScriptLoad, false);\r\n}\r\n// add a one-time error handler to the script\r\nfunction handleScriptError(script, callback) {\r\n    var onScriptError = function (e) {\r\n        // reject the promise and remove this event listener\r\n        callback(e.error || new Error(\"There was an error attempting to load \" + script.src));\r\n        // remove this event listener\r\n        script.removeEventListener('error', onScriptError, false);\r\n    };\r\n    script.addEventListener('error', onScriptError, false);\r\n    return onScriptError;\r\n}\r\n// allow the user to configure default script options rather than passing options to `loadModules` each time\r\nfunction setDefaultOptions(options) {\r\n    if (options === void 0) { options = {}; }\r\n    defaultOptions = options;\r\n}\r\n// get the script injected by this library\r\nfunction getScript() {\r\n    return document.querySelector('script[data-esri-loader]');\r\n}\r\n// has ArcGIS API been loaded on the page yet?\r\nfunction isLoaded() {\r\n    var globalRequire = window['require'];\r\n    // .on() ensures that it's Dojo's AMD loader\r\n    return globalRequire && globalRequire.on;\r\n}\r\n// load the ArcGIS API on the page\r\nfunction loadScript(options) {\r\n    if (options === void 0) { options = {}; }\r\n    // we would have liked to use spread like { ...defaultOptions, ...options }\r\n    // but TS would inject a polyfill that would require use to configure rollup w content: 'window'\r\n    // if we have another occasion to use spread, let'd do that and replace this for...in\r\n    var opts = {};\r\n    [defaultOptions, options].forEach(function (obj) {\r\n        for (var prop in obj) {\r\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n                opts[prop] = obj[prop];\r\n            }\r\n        }\r\n    });\r\n    // URL to load\r\n    var version = opts.version;\r\n    var url = opts.url || getCdnUrl(version);\r\n    return new utils.Promise(function (resolve, reject) {\r\n        var script = getScript();\r\n        if (script) {\r\n            // the API is already loaded or in the process of loading...\r\n            // NOTE: have to test against scr attribute value, not script.src\r\n            // b/c the latter will return the full url for relative paths\r\n            var src = script.getAttribute('src');\r\n            if (src !== url) {\r\n                // potentially trying to load a different version of the API\r\n                reject(new Error(\"The ArcGIS API for JavaScript is already loaded (\" + src + \").\"));\r\n            }\r\n            else {\r\n                if (isLoaded()) {\r\n                    // the script has already successfully loaded\r\n                    resolve(script);\r\n                }\r\n                else {\r\n                    // wait for the script to load and then resolve\r\n                    handleScriptLoad(script, resolve, reject);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (isLoaded()) {\r\n                // the API has been loaded by some other means\r\n                // potentially trying to load a different version of the API\r\n                reject(new Error(\"The ArcGIS API for JavaScript is already loaded.\"));\r\n            }\r\n            else {\r\n                // this is the first time attempting to load the API\r\n                var css = opts.css;\r\n                if (css) {\r\n                    var useVersion = css === true;\r\n                    // load the css before loading the script\r\n                    loadCss(useVersion ? version : css, opts.insertCssBefore);\r\n                }\r\n                if (opts.dojoConfig) {\r\n                    // set dojo configuration parameters before loading the script\r\n                    window['dojoConfig'] = opts.dojoConfig;\r\n                }\r\n                // create a script object whose source points to the API\r\n                script = createScript(url);\r\n                // _currentUrl = url;\r\n                // once the script is loaded...\r\n                handleScriptLoad(script, function () {\r\n                    // update the status of the script\r\n                    script.setAttribute('data-esri-loader', 'loaded');\r\n                    // return the script\r\n                    resolve(script);\r\n                }, reject);\r\n                // load the script\r\n                document.body.appendChild(script);\r\n            }\r\n        }\r\n    });\r\n}\n\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\r\n * Apache-2.0 */\r\n// wrap Dojo's require() in a promise\r\nfunction requireModules(modules) {\r\n    return new utils.Promise(function (resolve, reject) {\r\n        // If something goes wrong loading the esri/dojo scripts, reject with the error.\r\n        var errorHandler = window['require'].on('error', reject);\r\n        window['require'](modules, function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // remove error handler\r\n            errorHandler.remove();\r\n            // Resolve with the parameters from dojo require as an array.\r\n            resolve(args);\r\n        });\r\n    });\r\n}\r\n// returns a promise that resolves with an array of the required modules\r\n// also will attempt to lazy load the ArcGIS API if it has not already been loaded\r\nfunction loadModules(modules, loadScriptOptions) {\r\n    if (loadScriptOptions === void 0) { loadScriptOptions = {}; }\r\n    if (!isLoaded()) {\r\n        // script is not yet loaded, is it in the process of loading?\r\n        var script = getScript();\r\n        var src = script && script.getAttribute('src');\r\n        if (!loadScriptOptions.url && src) {\r\n            // script is still loading and user did not specify a URL\r\n            // in this case we want to default to the URL that's being loaded\r\n            // instead of defaulting to the latest 4.x URL\r\n            loadScriptOptions.url = src;\r\n        }\r\n        // attempt to load the script then load the modules\r\n        return loadScript(loadScriptOptions).then(function () { return requireModules(modules); });\r\n    }\r\n    else {\r\n        // script is already loaded, just load the modules\r\n        return requireModules(modules);\r\n    }\r\n}\n\n/*\r\n  Copyright (c) 2017 Esri\r\n  Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  you may not use this file except in compliance with the License.\r\n  You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n  Unless required by applicable law or agreed to in writing, software\r\n  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  See the License for the specific language governing permissions and\r\n  limitations under the License.\r\n*/\r\n// re-export the functions that are part of the public API\r\n// NOTE: rollup ignores the default export\r\n// and builds the UMD namespace out of the above named exports\r\n// so this is only needed so that consumers of the ESM build\r\n// can do esriLoader.loadModules(), etc\r\n// TODO: remove this next breaking change\r\nvar esriLoader = {\r\n    getScript: getScript,\r\n    isLoaded: isLoaded,\r\n    loadModules: loadModules,\r\n    loadScript: loadScript,\r\n    loadCss: loadCss,\r\n    setDefaultOptions: setDefaultOptions,\r\n    utils: utils\r\n};\n\nexports.getScript = getScript;\nexports.isLoaded = isLoaded;\nexports.loadModules = loadModules;\nexports.loadScript = loadScript;\nexports.loadCss = loadCss;\nexports.setDefaultOptions = setDefaultOptions;\nexports.utils = utils;\nexports['default'] = esriLoader;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=esri-loader.js.map\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.scss']\n})\nexport class BodyReduxComponent  {\n\n // Set our map properties\n mapCenter = [-91.9672633, 41.01768];\n basemapType = 'satellite';\n mapZoomLevel = 18;\n\n // See app.component.html\n mapLoadedEvent(status: boolean) {\n   console.log('The map loaded: ' + status);\n }\n\n}\n","<div class=\"esri-map-div\">\n  <app-esri-map-redux (mapLoadedEvent)=\"mapLoadedEvent($event)\">\n  </app-esri-map-redux>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { reducers } from 'src/store';\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { BodyReduxComponent } from \"./body/body.component\";\nimport { EsriMapComponent } from \"./esri-map/esri-map.component\";\nimport { CitiesEffects } from 'src/store/effects/city.effects'\nimport { CityListComponent } from './city-list/city-list.component';\n\nimport {MatCardModule} from '@angular/material/card';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatFormFieldModule } from '@angular/material/form-field';\nimport {MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [\n    BodyReduxComponent,\n    EsriMapComponent,\n    CityListComponent\n  ],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(\"cities\", reducers.city),\n    EffectsModule.forFeature([CitiesEffects]),\n    RouterModule.forChild([{ path: \"\", component: BodyReduxComponent }]),\n    FormsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule\n  ]\n})\nexport class CitiesModule { }\n","import { Component, OnInit, ViewChild, OnDestroy } from \"@angular/core\";\nimport { Store, select } from \"@ngrx/store\";\nimport { AppState } from \"src/store/states/app.state\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport {\n  selectAllCities$,\n  selectCitiesLoading$,\n  getCurrentCity$,\n  selectCitiesMapMode$\n} from 'src/store/selectors/city.selectors';\nimport {\n  GetCities,\n  ChangeMode,\n  SelectCity\n} from \"src/store/actions/city.actions\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MapModeEnum } from \"src/store/states/city.state\";\nimport { City } from \"src/models/City\";\nimport { Subscription } from \"rxjs\";\nimport { MatSort } from '@angular/material/sort';\n\n@Component({\n  selector: \"app-city-list\",\n  templateUrl: \"./city-list.component.html\",\n  styleUrls: [\"./city-list.component.scss\"]\n})\nexport class CityListComponent implements OnInit, OnDestroy {\n  subscriptions$: Subscription[];\n  dataSource: MatTableDataSource<City>;\n  displayedColumns: string[] = [\"nome\", \"confirmados\", \"mortes\", \"recuperados\"];\n  loading$ = this.store.select(selectCitiesLoading$);\n  facility$ = this.store.select(getCurrentCity$);\n  mapMode$ = this.store.select(selectCitiesMapMode$);\n  mapMode: MapModeEnum;\n  facility: City;\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit() {\n    this.store.dispatch(GetCities());\n    this.subscriptions$ = [\n      this.store.select(selectAllCities$).subscribe(cities => {\n        this.dataSource = new MatTableDataSource(cities);\n      })\n    ];\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions$.forEach(s$ => s$.unsubscribe());\n  }\n\n  openCity(row) {\n    this.store.dispatch(ChangeMode({ mode: MapModeEnum.SELECT_CITY }));\n    this.store.dispatch(SelectCity({ city: row }));\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<div class=\"container\">\n  <mat-form-field>\n    <mat-label>Pesquisar</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Pesquisar\" />\n  </mat-form-field>\n  <div class=\"main-area\">\n    <mat-progress-spinner\n      *ngIf=\"loading$ | async\"\n      color=\"primary\"\n      mode=\"indeterminate\"\n    >\n    </mat-progress-spinner>\n\n    <table mat-table matSort [dataSource]=\"dataSource\">\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Nome</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.nome }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"confirmados\">\n        <th class=\"desktop-only\" mat-header-cell *matHeaderCellDef>\n          Confirmados\n        </th>\n        <td\n          class=\"desktop-only\"\n          mat-cell\n          *matCellDef=\"let element\"\n          class=\"number\"\n        >\n          {{ 0 }}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"mortes\">\n        <th class=\"desktop-only\" mat-header-cell *matHeaderCellDef>Mortes</th>\n        <td\n          class=\"desktop-only\"\n          mat-cell\n          *matCellDef=\"let element\"\n          class=\"number\"\n        >\n          {{ 0 }}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"recuperados\">\n        <th class=\"desktop-only\" mat-header-cell *matHeaderCellDef>\n          Recuperados\n        </th>\n        <td\n          class=\"desktop-only\"\n          mat-cell\n          *matCellDef=\"let element\"\n          class=\"number\"\n        >\n          {{ 0 }}\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let row; columns: displayedColumns\"\n        (click)=\"openCity(row)\"\n      ></tr>\n    </table>\n\n    <mat-paginator [pageSize]=\"6\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\nimport { loadModules } from \"esri-loader\";\nimport {\n  selectCityState$,\n  getCurrentCity$,\n  selectCitiesMapMode$\n} from \"src/store/selectors/city.selectors\";\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from \"src/store/states/app.state\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {\n  selectCitiesLoading$,\n  selectAllCities$\n} from \"src/store/selectors/city.selectors\";\nimport { combineLatest, fromEvent, concat, Subscription } from \"rxjs\";\nimport { City } from \"src/models/City\";\nimport { withLatestFrom, map } from \"rxjs/operators\";\nimport { SelectCity, GetCities } from \"src/store/actions/city.actions\";\nimport { MapModeEnum } from \"src/store/states/city.state\";\n\n@Component({\n  selector: \"app-esri-map-redux\",\n  templateUrl: \"./esri-map.component.html\",\n  styleUrls: [\"./esri-map.component.scss\"]\n})\nexport class EsriMapComponent implements OnInit {\n  loading$ = this.store.select(selectCitiesLoading$);\n  mapMode$ = this.store.select(selectCitiesMapMode$);\n  city$ = this.store.select(getCurrentCity$);\n\n  public mapView: __esri.MapView;\n  getState = this.store.select(selectCityState$);\n  dialogRef;\n\n  Map: typeof import(\"esri/Map\");\n  MapView: typeof import(\"esri/views/MapView\");\n  Graphic: typeof import(\"esri/Graphic\");\n  GraphicsLayer: typeof import(\"esri/layers/GraphicsLayer\");\n  GeoJSONLayer: typeof import(\"esri/layers/GeoJSONLayer\");\n  Color: typeof import(\"esri/Color\");\n  Polygon: typeof import(\"esri/geometry/Polygon\");\n  Legend: typeof import(\"esri/widgets/Legend\");\n  BasemapGallery: typeof import(\"esri/widgets/BasemapGallery\");\n  Point: typeof import(\"esri/geometry/Point\");\n  Expand: typeof import(\"esri/widgets/Expand\");\n  subscriptions$: Subscription[];\n  mapMode: MapModeEnum;\n  city: City;\n  hightlightSelect;\n  isResponsiveSize;\n\n  legend: __esri.Legend;\n  expandLegend: __esri.Expand;\n\n  cityFeatures: __esri.Graphic[];\n\n  // this is needed to be able to create the MapView at the DOM element in this component\n  @ViewChild(\"mapViewNode\") private mapViewEl: ElementRef;\n  @ViewChild(\"legend\") private legendEl: ElementRef;\n\n  constructor(public dialog: MatDialog, private store: Store<AppState>) {}\n\n  public async initModules(): Promise<any> {\n    // use esri-loader to load JSAPI modules\n    return new Promise(async (resolve, reject) => {\n      try {\n        const [\n          Map,\n          MapView,\n          Graphic,\n          GraphicsLayer,\n          Color,\n          Popup,\n          PopupTemplate,\n          GeoJSONLayer,\n          Polygon,\n          Legend,\n          BasemapGallery,\n          Point,\n          Expand\n        ] = await loadModules(\n          [\n            \"esri/Map\",\n            \"esri/views/MapView\",\n            \"esri/Graphic\",\n            \"esri/layers/GraphicsLayer\",\n            \"esri/Color\",\n            \"esri/widgets/Popup\",\n            \"esri/PopupTemplate\",\n            \"esri/layers/GeoJSONLayer\",\n            \"esri/geometry/Polygon\",\n            \"esri/widgets/Legend\",\n            \"esri/widgets/BasemapGallery\",\n            \"esri/geometry/Point\",\n            \"esri/widgets/Expand\"\n          ],\n          {\n            version: \"4.14\"\n          }\n        );\n\n        this.Map = Map;\n        this.MapView = MapView;\n        this.Graphic = Graphic;\n        this.GraphicsLayer = GraphicsLayer;\n        this.Color = Color;\n        this.GeoJSONLayer = GeoJSONLayer;\n        this.Polygon = Polygon;\n        this.Legend = Legend;\n        this.BasemapGallery = BasemapGallery;\n        this.Point = Point;\n        this.Expand = Expand;\n\n        resolve();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  private setTitleMobile(isMobile) {\n    if (isMobile) {\n      document.querySelector(\"#titleDiv\").classList.add(\"invisible\");\n      this.mapView.padding = {\n        top: 0\n      };\n    } else {\n      document.querySelector(\"#titleDiv\").classList.remove(\"invisible\");\n      this.mapView.padding = {\n        //top: 55\n      };\n    }\n  }\n\n  private setLegendMobile(isMobile) {\n    var toAdd = isMobile ? this.expandLegend : this.legend;\n    var toRemove = isMobile ? this.legend : this.expandLegend;\n\n    this.mapView.ui.remove(toRemove);\n    this.mapView.ui.add(toAdd, \"top-right\");\n  }\n\n  private updateView(isMobile) {\n    this.setTitleMobile(isMobile);\n    this.setLegendMobile(isMobile);\n  }\n\n  public async ngOnInit() {\n    const self = this;\n    try {\n      this.store.dispatch(GetCities());\n      await this.initModules();\n\n      const template = {\n        title: \"{nome}\",\n        content: function(feature) {\n          const div = document.createElement(\"div\");\n          div.innerHTML = `Confirmados: <b>0</b><br/>\n          Mortes: <b style=\"color:red\">0</b>`;\n          return div;\n        },\n        fieldInfos: [\n          {\n            fieldName: \"nome\"\n          }\n        ]\n      };\n\n      const Glayer = new this.GraphicsLayer({\n        graphics: []\n      });\n\n      this.mapView = new this.MapView({\n        container: this.mapViewEl.nativeElement,\n        center: [-48.6717591, -22.7777422],\n        zoom: 6,\n        map: new this.Map({\n          basemap: \"dark-gray-vector\"\n        }),\n        constraints: {\n          snapToZoom: false\n        }\n      });\n\n      this.legend = new this.Legend({\n        view: this.mapView,\n        container: this.legendEl.nativeElement\n      });\n\n      this.expandLegend = new this.Expand({\n        view: this.mapView,\n        content: this.legendEl.nativeElement\n      });\n\n      this.isResponsiveSize = this.mapView.widthBreakpoint === \"xsmall\";\n      this.updateView(this.isResponsiveSize);\n\n      this.mapView.watch(\"widthBreakpoint\", function(breakpoint) {\n        switch (breakpoint) {\n          case \"xsmall\":\n            self.updateView(true);\n            break;\n          case \"small\":\n          case \"medium\":\n          case \"large\":\n          case \"xlarge\":\n            self.updateView(false);\n            break;\n          default:\n        }\n      });\n\n      //this.mapView.ui.add(this.legend, \"bottom-right\");\n\n      this.mapView.map.add(Glayer);\n\n      const layerView = await this.mapView.whenLayerView(Glayer);\n\n      // Each time something happens on Facility State including map mode\n      combineLatest(this.store.select(selectAllCities$)).subscribe(\n        ([municipiosSP]) => {\n          this.mapView.popup.autoOpenEnabled = true;\n          this.mapView.popup.close();\n\n          Glayer.graphics.removeAll();\n          this.cityFeatures = [];\n          const graphs = municipiosSP.map(city => {\n            const polygon = new this.Polygon({\n              rings: city.geometria\n            });\n\n            const simpleFillPolugon = {\n              type: \"simple-fill\",\n              color: [227, 139, 79, 0], // orange, opacity 80%\n              outline: {\n                color: [128, 128, 128],\n                width: 1\n              }\n            };\n\n            const graphic = new this.Graphic({\n              attributes: city,\n              geometry: polygon,\n              symbol: simpleFillPolugon,\n              popupTemplate: template\n            });\n            this.cityFeatures[city.codigo_ibge] = graphic;\n\n            return graphic;\n          });\n          Glayer.graphics.addMany(graphs);\n        }\n      );\n\n      this.mapView.on(\"click\", async function(event) {\n        const response = await self.mapView.hitTest(event);\n        if (response.results.length) {\n          console.log(\n            response.results.length,\n            response.results[0].graphic.attributes\n          );\n          const city: City = response.results[0].graphic.attributes;\n\n          self.store.dispatch(SelectCity({ city }));\n        }\n      });\n\n      this.subscriptions$ = [\n        this.city$.subscribe(async city => {\n          if (this.hightlightSelect) {\n            this.hightlightSelect.remove();\n            this.hightlightSelect = null;\n          }\n          if (city) {\n            // this.mapView.zoom = 13;  // Sets the zoom LOD to 13\n            const selectedCityFeature = this.cityFeatures[city.codigo_ibge];\n            const obj = {\n              //target: this.cityFeatures[city.codigo_ibge],\n              //center: selectedCityFeature,\n              scale: this.mapView.scale,\n              zoom: this.mapView.zoom\n            };\n\n            this.hightlightSelect = layerView.highlight(\n              this.cityFeatures[city.codigo_ibge]\n            );\n            //this.mapView.highlight(city.codigo_ibge);\n            //const ops = {  duration: 1000, easing: \"easeInOutQuad\"};\n            await this.mapView.goTo(obj); // Sets the center point of the view at a specified lon/lat\n            this.mapView.popup.open({\n              features: [selectedCityFeature],\n              location: selectedCityFeature.geometry.extent.center\n            });\n          }\n        }),\n        this.mapMode$.subscribe(mapMode => {\n          this.mapMode = mapMode;\n        })\n      ];\n    } catch (err) {\n      console.error(err);\n    }\n  }\n}\n","<div id=\"titleDiv\" class=\"esri-widget\"><div id=\"title\"></div></div>\n<div class=\"content\">\n<div #mapViewNode>\n</div>\n<div #legend>\n    <app-city-list></app-city-list>\n</div>\n</div>","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { cityAdapter, CityState } from '../states/city.state';\n\nexport const {\n    selectAll: _selectAllFacilities\n} = cityAdapter.getSelectors();\n\nexport const selectCityState$ = createFeatureSelector<CityState>(\"city\");\n\nexport const selectAllCities$ = createSelector(\n    selectCityState$,\n    _selectAllFacilities\n);\n\nexport const getCurrentCityId$ = createSelector(\n    selectCityState$,\n    (state : CityState) => state.selectedCityId\n);\n\nexport const getCurrentCity$ = createSelector(\n    selectCityState$,\n    getCurrentCityId$,\n    state => state.entities[state.selectedCityId]\n);\n\nexport const selectCitiesLoading$ = createSelector(\n    selectCityState$,\n    state => state.loading\n);\n\nexport const selectCitiesMapMode$ = createSelector(\n    selectCityState$,\n    state => state.mapMode\n);"]}